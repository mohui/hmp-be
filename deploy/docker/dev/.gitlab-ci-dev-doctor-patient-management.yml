dev:doctor-patient-management:deploy:
  extends:
    - .doctor-patient-management:init
  image: docker:git
  stage: deploy
  tags:
    - pve
    - docker
  variables:
    IMAGE_TAG: dev-${CI_COMMIT_SHORT_SHA}
    APP_PROFILE: dev
  needs:
    - job: dev:doctor-patient-management:build
      artifacts: false
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^dev*/'
      changes:
        - ${MODULE_NAME}/*.{kts,properties,yml}
        - ${MODULE_NAME}/**/*
  script:
    - mkdir -p ~/.ssh
    - echo "$REVIEW_SSH_ID_RSA" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh -o StrictHostKeyChecking=no -p ${DEV_SSH_PORT} ${DEV_SSH_USER}@${DEV_SSH_HOST} "IMAGE_TAG=${IMAGE_TAG} APP_PROFILE=${APP_PROFILE} docker compose -f ~/app/docker-compose.yaml up -d ${CONTAINER_NAME}"
  environment:
    name: dev/${CONTAINER_NAME}
    url: ${ENV_URI}
    on_stop: dev:doctor-patient-management:cleanup

dev:doctor-patient-management:cleanup:
  extends:
    - .doctor-patient-management:init
  image: docker:git
  stage: cleanup
  tags:
    - pve
    - docker
  variables:
    IMAGE_TAG: dev-${CI_COMMIT_SHORT_SHA}
  needs:
    - dev:doctor-patient-management:deploy
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^dev*/'
      changes:
        - ${MODULE_NAME}/*.{kts,properties,yml}
        - ${MODULE_NAME}/**/*
      when: manual
  script:
    - mkdir -p ~/.ssh
    - echo "$REVIEW_SSH_ID_RSA" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh -o StrictHostKeyChecking=no -p ${DEV_SSH_PORT} ${DEV_SSH_USER}@${DEV_SSH_HOST} "docker compose -f ~/app/docker-compose.yaml rm -fsv ${CONTAINER_NAME}"
  environment:
    name: dev/${CONTAINER_NAME}
    action: stop