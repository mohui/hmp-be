2023-05-11 17:11:56.245  INFO 6077 --- [Test worker] c.b.m.remind.api.HealthPlanTest          : Starting HealthPlanTest using Java 17.0.6 on wanghehuideMacBookPro.local with PID 6077 (started by wanghehui in /Users/wanghehui/projects/java/hmp-be/medication-remind/medication-remind-server)
2023-05-11 17:11:56.251 DEBUG 6077 --- [Test worker] c.b.m.remind.api.HealthPlanTest          : Running with Spring Boot v2.6.8, Spring v5.3.21
2023-05-11 17:11:56.252  INFO 6077 --- [Test worker] c.b.m.remind.api.HealthPlanTest          : The following 1 profile is active: "dev-local"
2023-05-11 17:11:58.076  INFO 6077 --- [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d251075e-2bf1-3341-9e51-4ff0d5f888ac
2023-05-11 17:11:59.339  INFO 6077 --- [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2023-05-11 17:11:59.360  INFO 6077 --- [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-05-11 17:11:59.361  INFO 6077 --- [Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.63]
2023-05-11 17:11:59.497  INFO 6077 --- [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-05-11 17:11:59.497  INFO 6077 --- [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2959 ms
2023-05-11 17:11:59.877  INFO 6077 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-05-11 17:12:00.314  INFO 6077 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-05-11 17:12:00.364  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：1 | 当前时间：2023-05-11 17:12:00 | 执行时间：19ms 
 statement: SHOW DATABASES LIKE 'test_utjyqpvk' 
2023-05-11 17:12:00.387  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：1 | 当前时间：2023-05-11 17:12:00 | 执行时间：18ms 
 statement: CREATE DATABASE IF NOT EXISTS test_utjyqpvk 
2023-05-11 17:12:00.389  INFO 6077 --- [Test worker] c.b.f.test.DbTestConfig$Companion        : 创建数据库，连接信息：jdbc:p6spy:mysql://localhost:3306/test_utjyqpvk
2023-05-11 17:12:00.389  INFO 6077 --- [Test worker] com.bjknrt.framework.test.DbTestConfig   : 使用数据库次数：1，连接信息：jdbc:p6spy:mysql://localhost:3306/test_utjyqpvk
2023-05-11 17:12:00.439  INFO 6077 --- [Test worker] o.s.c.openfeign.FeignClientFactoryBean   : For 'user-permission-centre-server' URL not provided. Will try picking an instance via load-balancing.
2023-05-11 17:12:00.595 DEBUG 6077 --- [Test worker] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, jwtAuthenticationFilter urls=[/*] order=2147483647
2023-05-11 17:12:00.596 DEBUG 6077 --- [Test worker] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/]
2023-05-11 17:12:00.623 DEBUG 6077 --- [Test worker] c.b.security.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2023-05-11 17:12:00.849  INFO 6077 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2023-05-11 17:12:00.877  INFO 6077 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2023-05-11 17:12:00.890  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 准备将数据库(com.bjknrt.medication.remind)迁移到 10 版本
2023-05-11 17:12:01.464  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：10 | 当前时间：2023-05-11 17:12:01 | 执行时间：119ms 
 statement: create table if not exists _sqlex_version_(package text not null, version int not null, can_migrate bool not null) 
2023-05-11 17:12:01.496  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:01 | 执行时间：25ms 
 statement: lock tables _sqlex_version_ write 
2023-05-11 17:12:01.496  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 获取到全局锁,准备开始迁移
2023-05-11 17:12:01.589  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:01 | 执行时间：1ms 
 statement: select * from _sqlex_version_ where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:01.613  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:01 | 执行时间：1ms 
 statement: insert into _sqlex_version_ values('com.bjknrt.medication.remind', -1, true) 
2023-05-11 17:12:01.613  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 当前数据库版本 -1, 版本差异 11
2023-05-11 17:12:01.622  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:01 | 执行时间：2ms 
 statement: update _sqlex_version_ set can_migrate=false where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:01.622  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 0 版本的迁移任务
2023-05-11 17:12:01.622  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE IF NOT EXISTS `undo_log` (`branch_id` BIGINT NOT NULL COMMENT 'branch transaction id',`xid` VARCHAR(128) NOT NULL COMMENT 'global transaction id',`context` VARCHAR(128) NOT NULL COMMENT 'undo_log context,such as serialization',`rollback_info` LONGBLOB NOT NULL COMMENT 'rollback info',`log_status` INT(11) NOT NULL COMMENT '0:normal status,1:defense status',`log_created` DATETIME(6) NOT NULL COMMENT 'create datetime',`log_modified` DATETIME(6) NOT NULL COMMENT 'modify datetime',UNIQUE `ux_undo_log`(`xid`, `branch_id`)) ENGINE = InnoDB AUTO_INCREMENT = 1 DEFAULT CHARACTER SET = UTF8MB4 COMMENT = 'AT transaction mode undo table'
2023-05-11 17:12:01.681  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:01 | 执行时间：57ms 
 statement: CREATE TABLE IF NOT EXISTS `undo_log` (`branch_id` BIGINT NOT NULL COMMENT 'branch transaction id',`xid` VARCHAR(128) NOT NULL COMMENT 'global transaction id',`context` VARCHAR(128) NOT NULL COMMENT 'undo_log context,such as serialization',`rollback_info` LONGBLOB NOT NULL COMMENT 'rollback info',`log_status` INT(11) NOT NULL COMMENT '0:normal status,1:defense status',`log_created` DATETIME(6) NOT NULL COMMENT 'create datetime',`log_modified` DATETIME(6) NOT NULL COMMENT 'modify datetime',UNIQUE `ux_undo_log`(`xid`, `branch_id`)) ENGINE = InnoDB AUTO_INCREMENT = 1 DEFAULT CHARACTER SET = UTF8MB4 COMMENT = 'AT transaction mode undo table' 
2023-05-11 17:12:01.685  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:01 | 执行时间：2ms 
 statement: update _sqlex_version_ set version=0 where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:01.685  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 0 版本迁移成功
2023-05-11 17:12:01.685  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 1 版本的迁移任务
2023-05-11 17:12:01.686  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE `mr_medication_remind` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_patient_id` BIGINT UNSIGNED NOT NULL COMMENT '患者id',`kn_drug_name` VARCHAR(255) NOT NULL DEFAULT _UTF8MB4'' COMMENT '药品名称',`kn_time` TIME NOT NULL COMMENT '时间',`kn_monday` TINYINT NOT NULL DEFAULT 0 COMMENT '周一,1:选中,0未选中',`kn_tuesday` TINYINT NOT NULL DEFAULT 0 COMMENT '周二,1:选中,0未选中',`kn_wednesday` TINYINT NOT NULL DEFAULT 0 COMMENT '周三,1:选中,0未选中',`kn_thursday` TINYINT NOT NULL DEFAULT 0 COMMENT '周四,1:选中,0未选中',`kn_friday` TINYINT NOT NULL DEFAULT 0 COMMENT '周五,1:选中,0未选中',`kn_saturday` TINYINT NOT NULL DEFAULT 0 COMMENT '周六,1:选中,0未选中',`kn_sunday` TINYINT NOT NULL DEFAULT 0 COMMENT '周日,1:选中,0未选中',`kn_status` TINYINT NOT NULL DEFAULT 1 COMMENT '状态, 1可用,0不可用',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',`kn_updated_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '修改人id',`kn_updated_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3) COMMENT '修改时间',INDEX `index_wek`(`kn_monday`, `kn_tuesday`, `kn_wednesday`, `kn_thursday`, `kn_friday`, `kn_saturday`, `kn_sunday`),INDEX `index_time`(`kn_time`)) ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '定时用药表'
2023-05-11 17:12:01.740  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:01 | 执行时间：53ms 
 statement: CREATE TABLE `mr_medication_remind` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_patient_id` BIGINT UNSIGNED NOT NULL COMMENT '患者id',`kn_drug_name` VARCHAR(255) NOT NULL DEFAULT _UTF8MB4'' COMMENT '药品名称',`kn_time` TIME NOT NULL COMMENT '时间',`kn_monday` TINYINT NOT NULL DEFAULT 0 COMMENT '周一,1:选中,0未选中',`kn_tuesday` TINYINT NOT NULL DEFAULT 0 COMMENT '周二,1:选中,0未选中',`kn_wednesday` TINYINT NOT NULL DEFAULT 0 COMMENT '周三,1:选中,0未选中',`kn_thursday` TINYINT NOT NULL DEFAULT 0 COMMENT '周四,1:选中,0未选中',`kn_friday` TINYINT NOT NULL DEFAULT 0 COMMENT '周五,1:选中,0未选中',`kn_saturday` TINYINT NOT NULL DEFAULT 0 COMMENT '周六,1:选中,0未选中',`kn_sunday` TINYINT NOT NULL DEFAULT 0 COMMENT '周日,1:选中,0未选中',`kn_status` TINYINT NOT NULL DEFAULT 1 COMMENT '状态, 1可用,0不可用',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',`kn_updated_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '修改人id',`kn_updated_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3) COMMENT '修改时间',INDEX `index_wek`(`kn_monday`, `kn_tuesday`, `kn_wednesday`, `kn_thursday`, `kn_friday`, `kn_saturday`, `kn_sunday`),INDEX `index_time`(`kn_time`)) ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '定时用药表' 
2023-05-11 17:12:01.743  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:01 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=1 where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:01.743  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 1 版本迁移成功
2023-05-11 17:12:01.743  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 2 版本的迁移任务
2023-05-11 17:12:01.744  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE `mr_health_plan` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_patient_id` BIGINT UNSIGNED NOT NULL COMMENT '患者id',`kn_name` VARCHAR(255) NOT NULL DEFAULT _UTF8MB4'' COMMENT '计划名称',`kn_sub_name` VARCHAR(255) NULL DEFAULT _UTF8MB4'' COMMENT '计划名称-标题',`kn_desc` VARCHAR(255) NULL DEFAULT _UTF8MB4'' COMMENT '计划描述',`kn_type` VARCHAR(200) NOT NULL COMMENT '类型: BEHAVIOR_VISIT: 行为习惯随访,DRUG: 药品,HYPERTENSION_VISIT: 高血压随访,EXERCISE_PROGRAM: 运动方案,BLOOD_PRESSURE_MEASUREMENT: 测血压',`kn_time` TIME NULL DEFAULT NULL COMMENT '时间',`is_monday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周一,true:选中,false:未选中',`is_tuesday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周二,true:选中,false:未选中',`is_wednesday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周三,true:选中,false:未选中',`is_thursday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周四,true:选中,false:未选中',`is_friday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周五,true:选中,false:未选中',`is_saturday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周六,true:选中,false:未选中',`is_sunday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周日,true:选中,false:未选中',`kn_cycle_start_time` DATETIME(3) NULL DEFAULT NULL COMMENT '周期开始时间',`kn_cycle_end_time` DATETIME(3) NULL DEFAULT NULL COMMENT '周期结束时间',`is_used` TINYINT(1) NOT NULL DEFAULT TRUE COMMENT '状态, true:可用,false: 不可用',`is_del` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '是否删除: true: 删除, false: 未删除',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',`kn_updated_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '修改人id',`kn_updated_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3) COMMENT '修改时间',INDEX `index_time`(`kn_time`)) ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划表'
2023-05-11 17:12:01.799  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:01 | 执行时间：53ms 
 statement: CREATE TABLE `mr_health_plan` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_patient_id` BIGINT UNSIGNED NOT NULL COMMENT '患者id',`kn_name` VARCHAR(255) NOT NULL DEFAULT _UTF8MB4'' COMMENT '计划名称',`kn_sub_name` VARCHAR(255) NULL DEFAULT _UTF8MB4'' COMMENT '计划名称-标题',`kn_desc` VARCHAR(255) NULL DEFAULT _UTF8MB4'' COMMENT '计划描述',`kn_type` VARCHAR(200) NOT NULL COMMENT '类型: BEHAVIOR_VISIT: 行为习惯随访,DRUG: 药品,HYPERTENSION_VISIT: 高血压随访,EXERCISE_PROGRAM: 运动方案,BLOOD_PRESSURE_MEASUREMENT: 测血压',`kn_time` TIME NULL DEFAULT NULL COMMENT '时间',`is_monday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周一,true:选中,false:未选中',`is_tuesday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周二,true:选中,false:未选中',`is_wednesday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周三,true:选中,false:未选中',`is_thursday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周四,true:选中,false:未选中',`is_friday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周五,true:选中,false:未选中',`is_saturday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周六,true:选中,false:未选中',`is_sunday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周日,true:选中,false:未选中',`kn_cycle_start_time` DATETIME(3) NULL DEFAULT NULL COMMENT '周期开始时间',`kn_cycle_end_time` DATETIME(3) NULL DEFAULT NULL COMMENT '周期结束时间',`is_used` TINYINT(1) NOT NULL DEFAULT TRUE COMMENT '状态, true:可用,false: 不可用',`is_del` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '是否删除: true: 删除, false: 未删除',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',`kn_updated_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '修改人id',`kn_updated_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3) COMMENT '修改时间',INDEX `index_time`(`kn_time`)) ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划表' 
2023-05-11 17:12:01.801  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE `mr_frequency` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_health_plan_id` BIGINT UNSIGNED NOT NULL COMMENT '主表',`kn_explain_id` BIGINT UNSIGNED NULL DEFAULT NULL COMMENT '上级',`kn_frequency_time` INT NULL DEFAULT NULL COMMENT '频次时间',`kn_frequency_time_unit` VARCHAR(30) NULL DEFAULT NULL COMMENT '频次时间单位',`kn_frequency_num` INT NULL DEFAULT NULL COMMENT '频次的数量',`kn_frequency_num_unit` VARCHAR(30) NULL DEFAULT NULL COMMENT '频次数量单位',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间') ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划打卡频率表'
2023-05-11 17:12:01.828  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:01 | 执行时间：25ms 
 statement: CREATE TABLE `mr_frequency` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_health_plan_id` BIGINT UNSIGNED NOT NULL COMMENT '主表',`kn_explain_id` BIGINT UNSIGNED NULL DEFAULT NULL COMMENT '上级',`kn_frequency_time` INT NULL DEFAULT NULL COMMENT '频次时间',`kn_frequency_time_unit` VARCHAR(30) NULL DEFAULT NULL COMMENT '频次时间单位',`kn_frequency_num` INT NULL DEFAULT NULL COMMENT '频次的数量',`kn_frequency_num_unit` VARCHAR(30) NULL DEFAULT NULL COMMENT '频次数量单位',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间') ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划打卡频率表' 
2023-05-11 17:12:01.829  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE `mr_clock_in` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_health_plan_id` BIGINT UNSIGNED NOT NULL COMMENT '主表',`kn_time` TIME NULL DEFAULT NULL COMMENT '时间',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间') ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划打卡流水表'
2023-05-11 17:12:01.851  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:01 | 执行时间：20ms 
 statement: CREATE TABLE `mr_clock_in` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_health_plan_id` BIGINT UNSIGNED NOT NULL COMMENT '主表',`kn_time` TIME NULL DEFAULT NULL COMMENT '时间',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间') ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划打卡流水表' 
2023-05-11 17:12:01.854  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:01 | 执行时间：1ms 
 statement: update _sqlex_version_ set version=2 where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:01.855  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 2 版本迁移成功
2023-05-11 17:12:01.856  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 3 版本的迁移任务
2023-05-11 17:12:01.856  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` ADD COLUMN `external_key` VARCHAR(128) COLLATE utf8mb4_general_ci NULL COMMENT '扩展字段' AFTER `kn_updated_at`
2023-05-11 17:12:01.928  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:01 | 执行时间：71ms 
 statement: ALTER TABLE `mr_health_plan` ADD COLUMN `external_key` VARCHAR(128) COLLATE utf8mb4_general_ci NULL COMMENT '扩展字段' AFTER `kn_updated_at` 
2023-05-11 17:12:01.930  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:01 | 执行时间：1ms 
 statement: update _sqlex_version_ set version=3 where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:01.931  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 3 版本迁移成功
2023-05-11 17:12:01.931  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 4 版本的迁移任务
2023-05-11 17:12:01.931  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` ADD COLUMN `kn_display_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '显示时间: 时间之后的显示' AFTER `kn_updated_at`
2023-05-11 17:12:01.957  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:01 | 执行时间：25ms 
 statement: ALTER TABLE `mr_health_plan` ADD COLUMN `kn_display_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '显示时间: 时间之后的显示' AFTER `kn_updated_at` 
2023-05-11 17:12:01.958  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_health_plan` SET `kn_display_time`=IFNULL(`kn_cycle_start_time`, `kn_created_at`)
2023-05-11 17:12:01.959  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:01 | 执行时间：0ms 
 statement: UPDATE `mr_health_plan` SET `kn_display_time`=IFNULL(`kn_cycle_start_time`, `kn_created_at`) 
2023-05-11 17:12:01.961  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:01 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=4 where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:01.961  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 4 版本迁移成功
2023-05-11 17:12:01.961  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 5 版本的迁移任务
2023-05-11 17:12:01.961  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_clock_in` ADD COLUMN `kn_clock_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '打卡时间' AFTER `kn_time`
2023-05-11 17:12:01.977  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:01 | 执行时间：14ms 
 statement: ALTER TABLE `mr_clock_in` ADD COLUMN `kn_clock_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '打卡时间' AFTER `kn_time` 
2023-05-11 17:12:01.978  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_clock_in` SET `kn_clock_at`=`kn_created_at` WHERE `kn_created_at`<NOW()
2023-05-11 17:12:01.979  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:01 | 执行时间：1ms 
 statement: UPDATE `mr_clock_in` SET `kn_clock_at`=`kn_created_at` WHERE `kn_created_at`<NOW() 
2023-05-11 17:12:01.981  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:01 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=5 where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:01.981  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 5 版本迁移成功
2023-05-11 17:12:01.981  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 6 版本的迁移任务
2023-05-11 17:12:01.982  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_frequency` MODIFY COLUMN `kn_frequency_time` INT NOT NULL COMMENT '频次时间' AFTER `kn_explain_id`, MODIFY COLUMN `kn_frequency_time_unit` VARCHAR(30) CHARACTER SET UTF8MB4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '频次时间单位' AFTER `kn_frequency_time`, MODIFY COLUMN `kn_frequency_num` INT NOT NULL COMMENT '达标频次数量' AFTER `kn_frequency_time_unit`, MODIFY COLUMN `kn_frequency_num_unit` VARCHAR(30) CHARACTER SET UTF8MB4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '频次数量单位' AFTER `kn_frequency_num`, ADD COLUMN `kn_frequency_max_num` INT NOT NULL COMMENT '最大完成频次数量' AFTER `kn_frequency_num_unit`
2023-05-11 17:12:02.053  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:02 | 执行时间：70ms 
 statement: ALTER TABLE `mr_frequency` MODIFY COLUMN `kn_frequency_time` INT NOT NULL COMMENT '频次时间' AFTER `kn_explain_id`, MODIFY COLUMN `kn_frequency_time_unit` VARCHAR(30) CHARACTER SET UTF8MB4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '频次时间单位' AFTER `kn_frequency_time`, MODIFY COLUMN `kn_frequency_num` INT NOT NULL COMMENT '达标频次数量' AFTER `kn_frequency_time_unit`, MODIFY COLUMN `kn_frequency_num_unit` VARCHAR(30) CHARACTER SET UTF8MB4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '频次数量单位' AFTER `kn_frequency_num`, ADD COLUMN `kn_frequency_max_num` INT NOT NULL COMMENT '最大完成频次数量' AFTER `kn_frequency_num_unit` 
2023-05-11 17:12:02.054  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_frequency` SET `kn_frequency_max_num`=IF(`kn_frequency_time_unit`=`kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_num`)
2023-05-11 17:12:02.055  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:02 | 执行时间：1ms 
 statement: UPDATE `mr_frequency` SET `kn_frequency_max_num`=IF(`kn_frequency_time_unit`=`kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_num`) 
2023-05-11 17:12:02.057  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:02 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=6 where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:02.057  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 6 版本迁移成功
2023-05-11 17:12:02.057  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 7 版本的迁移任务
2023-05-11 17:12:02.058  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` ADD COLUMN `kn_group` VARCHAR(64) NULL COMMENT '分组' AFTER `external_key`
2023-05-11 17:12:02.086  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:02 | 执行时间：27ms 
 statement: ALTER TABLE `mr_health_plan` ADD COLUMN `kn_group` VARCHAR(64) NULL COMMENT '分组' AFTER `external_key` 
2023-05-11 17:12:02.087  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:02 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=7 where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:02.088  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 7 版本迁移成功
2023-05-11 17:12:02.088  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 8 版本的迁移任务
2023-05-11 17:12:02.088  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` ADD COLUMN `is_clock_display` TINYINT(1) NOT NULL DEFAULT TRUE COMMENT '打卡完成后是否显示' AFTER `kn_group`
2023-05-11 17:12:02.120  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:02 | 执行时间：31ms 
 statement: ALTER TABLE `mr_health_plan` ADD COLUMN `is_clock_display` TINYINT(1) NOT NULL DEFAULT TRUE COMMENT '打卡完成后是否显示' AFTER `kn_group` 
2023-05-11 17:12:02.120  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_health_plan` SET `is_clock_display`=FALSE WHERE `kn_type` IN (_UTF8MB4'OFFLINE_HYPERTENSION',_UTF8MB4'OFFLINE_DIABETES',_UTF8MB4'OFFLINE_ACUTE_CORONARY_DISEASE',_UTF8MB4'OFFLINE_CEREBRAL_STROKE',_UTF8MB4'OFFLINE_COPD',_UTF8MB4'EXERCISE_PROGRAM_ADJUSTMENT_REMIND')
2023-05-11 17:12:02.122  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:02 | 执行时间：1ms 
 statement: UPDATE `mr_health_plan` SET `is_clock_display`=FALSE WHERE `kn_type` IN (_UTF8MB4'OFFLINE_HYPERTENSION',_UTF8MB4'OFFLINE_DIABETES',_UTF8MB4'OFFLINE_ACUTE_CORONARY_DISEASE',_UTF8MB4'OFFLINE_CEREBRAL_STROKE',_UTF8MB4'OFFLINE_COPD',_UTF8MB4'EXERCISE_PROGRAM_ADJUSTMENT_REMIND') 
2023-05-11 17:12:02.124  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:02 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=8 where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:02.124  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 8 版本迁移成功
2023-05-11 17:12:02.124  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 9 版本的迁移任务
2023-05-11 17:12:02.124  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	DROP TABLE `mr_medication_remind`
2023-05-11 17:12:02.139  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:02 | 执行时间：13ms 
 statement: DROP TABLE `mr_medication_remind` 
2023-05-11 17:12:02.141  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:02 | 执行时间：1ms 
 statement: update _sqlex_version_ set version=9 where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:02.141  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 9 版本迁移成功
2023-05-11 17:12:02.141  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 10 版本的迁移任务
2023-05-11 17:12:02.142  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_health_plan` SET `kn_cycle_start_time`=`kn_created_at` WHERE `kn_cycle_start_time` IS NULL
2023-05-11 17:12:02.143  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:02 | 执行时间：0ms 
 statement: UPDATE `mr_health_plan` SET `kn_cycle_start_time`=`kn_created_at` WHERE `kn_cycle_start_time` IS NULL 
2023-05-11 17:12:02.143  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` MODIFY COLUMN `kn_cycle_start_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '周期开始时间' AFTER `is_sunday`
2023-05-11 17:12:02.188  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:12:02 | 执行时间：43ms 
 statement: ALTER TABLE `mr_health_plan` MODIFY COLUMN `kn_cycle_start_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '周期开始时间' AFTER `is_sunday` 
2023-05-11 17:12:02.190  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:02 | 执行时间：1ms 
 statement: update _sqlex_version_ set version=10 where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:02.191  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 10 版本迁移成功
2023-05-11 17:12:02.194  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:02 | 执行时间：0ms 
 statement: update _sqlex_version_ set can_migrate=true where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:02.198  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:02 | 执行时间：2ms 
 commit:  
2023-05-11 17:12:02.201  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:02 | 执行时间：0ms 
 statement: unlock tables 
2023-05-11 17:12:02.201  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 数据库(com.bjknrt.medication.remind)版本迁移完成,释放全局锁
2023-05-11 17:12:02.203  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:02 | 执行时间：1ms 
 rollback:  
2023-05-11 17:12:02.205  INFO 6077 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 准备比对数据库结构一致性
2023-05-11 17:12:02.205  INFO 6077 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 获取SqlEx Repository(com.bjknrt.medication.remind)定义结构
2023-05-11 17:12:02.211  INFO 6077 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 获取目标数据库结构
2023-05-11 17:12:02.317  INFO 6077 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 计算结构差异
2023-05-11 17:12:02.319  INFO 6077 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 结构一致性比对完成,无差异
2023-05-11 17:12:02.873 DEBUG 6077 --- [Test worker] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 2 ResponseBodyAdvice
2023-05-11 17:12:02.979 DEBUG 6077 --- [Test worker] s.w.s.m.m.a.RequestMappingHandlerMapping : 24 mappings in 'requestMappingHandlerMapping'
2023-05-11 17:12:03.069 DEBUG 6077 --- [Test worker] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-05-11 17:12:03.104 DEBUG 6077 --- [Test worker] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 2 ResponseBodyAdvice
2023-05-11 17:12:03.483  INFO 6077 --- [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6701fbf3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@63f88d35, org.springframework.security.web.context.SecurityContextPersistenceFilter@50a1c2f3, org.springframework.security.web.header.HeaderWriterFilter@1dc47df3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6dd0e2f4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@333813e7, com.bjknrt.security.JwtAuthenticationFilter@46067a74, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2e962cec, org.springframework.security.web.session.SessionManagementFilter@5bd585a5, org.springframework.security.web.access.ExceptionTranslationFilter@61d1315b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5f05cd7e]
2023-05-11 17:12:04.073  INFO 6077 --- [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2023-05-11 17:12:04.402  INFO 6077 --- [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 55184 (http) with context path ''
2023-05-11 17:12:04.433  INFO 6077 --- [Test worker] c.b.m.remind.api.HealthPlanTest          : Started HealthPlanTest in 13.783 seconds (JVM running for 15.424)
2023-05-11 17:12:04.487  INFO 6077 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@379899f4, testMethod = clockInTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5387880e, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@1a4eb337]; rollback [true]
2023-05-11 17:12:04.806  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:04 | 执行时间：10ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:12:04.770173', 0, '2023-05-12T00:00', '2023-05-11T00:00', '每周三次', '2023-05-11T00:00', 'HELLO', 10000000, '有氧运动', 0, '游泳', 'BEHAVIOR_VISIT', '2023-05-11T17:12:04.770173', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:04.896  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:04 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:12:04.911  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:04 | 执行时间：1ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:04.903768', 0, 3, 3, 'DAYS', 1, 'WEEKS', 10000000, 1656587971178004480) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:12:04.914  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:04 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656587971178004480) limit 1 
2023-05-11 17:12:04.918  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:04 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_explain_id`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:04.903768', 0, 1656587971178004480, 3, 2, 'SEQUENCE', 1, 'DAYS', 10000000, 1656587971178004481) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_explain_id` = values(`kn_explain_id`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:12:04.920  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:04 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656587971178004481) limit 1 
2023-05-11 17:12:04.923  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:04 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:04.921409', 0, 2, 2, 'DAYS', 1, 'WEEKS', 10000000, 1656587971253501952) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:12:04.926  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:04 | 执行时间：1ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656587971253501952) limit 1 
2023-05-11 17:12:04.930  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:04 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:12:04.938  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:04 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_health_plan_id`) = (10000000) 
2023-05-11 17:12:04.942  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:04 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:12:04.948  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:04 | 执行时间：1ms 
 statement: insert into `mr_clock_in`(`kn_clock_at`, `kn_created_at`, `kn_created_by`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:04.943249', '2023-05-11T17:12:04.943249', 0, 10000000, 1656587971349970944) 
2023-05-11 17:12:04.951  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:04 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (`mr_clock_in`.`kn_id`) = (1656587971349970944) limit 1 
2023-05-11 17:12:05.622  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:05 | 执行时间：4ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            clockIn.count     from mr_health_plan plan              left join (select health.kn_id, count(clock.kn_health_plan_id) count                         from mr_health_plan health                                  left join mr_clock_in clock on health.kn_id = clock.kn_health_plan_id                             and clock.kn_clock_at >= '2023-05-11T00:00'                             and clock.kn_clock_at < '2023-05-12T00:00'                         where health.kn_patient_id = 0                           and health.is_del = false                         group by health.kn_id) clockIn on plan.kn_id = clockIn.kn_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T17:12:04.952031'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:12:04.952031')       and ((plan.kn_type = 'DRUG' and plan.is_used = true) or plan.kn_type != 'DRUG')       and plan.kn_display_time <= '2023-05-11T17:12:04.952031'  
2023-05-11 17:12:05.663  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:05 | 执行时间：2ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000000) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:12:05.924  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:05 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:12:05.931  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:05 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:12:05.939  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:05 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (`mr_clock_in`.`kn_health_plan_id`) = (10000000) 
2023-05-11 17:12:06.030  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：5ms 
 statement: select count(1) from (select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00'))) temp 
2023-05-11 17:12:06.061  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：2ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:12:06.065  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: insert into `mr_clock_in`(`kn_clock_at`, `kn_created_at`, `kn_created_by`, `kn_health_plan_id`, `kn_id`) values('2023-05-10T17:12:06.031', '2023-05-11T17:12:06.063904', 0, 10000000, 1656587976047591424) 
2023-05-11 17:12:06.067  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (`mr_clock_in`.`kn_id`) = (1656587976047591424) limit 1 
2023-05-11 17:12:06.071  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            clockIn.count     from mr_health_plan plan              left join (select health.kn_id, count(clock.kn_health_plan_id) count                         from mr_health_plan health                                  left join mr_clock_in clock on health.kn_id = clock.kn_health_plan_id                             and clock.kn_clock_at >= '2023-05-11T00:00'                             and clock.kn_clock_at < '2023-05-12T00:00'                         where health.kn_patient_id = 0                           and health.is_del = false                         group by health.kn_id) clockIn on plan.kn_id = clockIn.kn_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T17:12:06.068082'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:12:06.068082')       and ((plan.kn_type = 'DRUG' and plan.is_used = true) or plan.kn_type != 'DRUG')       and plan.kn_display_time <= '2023-05-11T17:12:06.068082'  
2023-05-11 17:12:06.074  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000000) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:12:06.077  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:12:06.081  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:12:06.084  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (`mr_clock_in`.`kn_health_plan_id`) = (10000000) 
2023-05-11 17:12:06.131  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_name,            clock.kn_clock_at     from mr_health_plan plan              left join mr_clock_in clock on plan.kn_id = clock.kn_health_plan_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T00:00'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time >= '2023-05-12T00:00')       and clock.kn_clock_at >= '2023-05-11T00:00'       and clock.kn_clock_at < '2023-05-12T00:00'  
2023-05-11 17:12:06.147  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:12:06.150  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00')) 
2023-05-11 17:12:06.578  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：3ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`kn_type` in ('BEHAVIOR_VISIT')) and ((`mr_health_plan`.`is_del`) = (false))) and ((`mr_health_plan`.`kn_patient_id`) = (0)) 
2023-05-11 17:12:06.584  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: update `mr_health_plan` set  `is_del` = true where `mr_health_plan`.`kn_id` in (10000000) 
2023-05-11 17:12:06.592  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:12:06.585121', 0, '2023-05-11T00:00', '每周三次', '2023-05-11T00:00', 10000001, '有氧运动', 0, '跑步', 'BEHAVIOR_VISIT', '2023-05-11T17:12:06.585121', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:06.597  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000001) limit 1 
2023-05-11 17:12:06.600  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:06.598398', 0, 3, 3, 'DAYS', 1, 'WEEKS', 10000001, 1656587978287349760) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:12:06.604  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656587978287349760) limit 1 
2023-05-11 17:12:06.610  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：2ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_explain_id`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:06.598398', 0, 1656587978287349760, 3, 2, 'SEQUENCE', 1, 'DAYS', 10000001, 1656587978287349761) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_explain_id` = values(`kn_explain_id`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:12:06.612  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656587978287349761) limit 1 
2023-05-11 17:12:06.615  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:06.613794', 0, 2, 2, 'DAYS', 1, 'WEEKS', 10000001, 1656587978350264320) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:12:06.617  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656587978350264320) limit 1 
2023-05-11 17:12:06.622  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：3ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000001) limit 1 
2023-05-11 17:12:06.628  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：3ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_health_plan_id`) = (10000001) 
2023-05-11 17:12:06.637  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：2ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            clockIn.count     from mr_health_plan plan              left join (select health.kn_id, count(clock.kn_health_plan_id) count                         from mr_health_plan health                                  left join mr_clock_in clock on health.kn_id = clock.kn_health_plan_id                             and clock.kn_clock_at >= '2023-05-11T00:00'                             and clock.kn_clock_at < '2023-05-12T00:00'                         where health.kn_patient_id = 0                           and health.is_del = false                         group by health.kn_id) clockIn on plan.kn_id = clockIn.kn_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T17:12:06.632674'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:12:06.632674')       and ((plan.kn_type = 'DRUG' and plan.is_used = true) or plan.kn_type != 'DRUG')       and plan.kn_display_time <= '2023-05-11T17:12:06.632674'  
2023-05-11 17:12:06.643  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：3ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000001) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:12:06.646  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:12:06.650  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：2ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:12:06.672  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and ((`mr_health_plan`.`kn_patient_id`) = (0)) 
2023-05-11 17:12:06.677  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：2ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000001) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:12:06.682  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：3ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:12:06.684  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:12:06.693  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：2ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and (`mr_health_plan`.`kn_id` in (10000001)) 
2023-05-11 17:12:06.695  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000001) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:12:06.700  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：2ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:12:06.704  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：3ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:12:06.778  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：8ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`kn_type` in ('HYPERTENSION_VISIT', 'HYPERTENSION_DRUG_PROGRAM')) and ((`mr_health_plan`.`is_del`) = (false))) and ((`mr_health_plan`.`kn_patient_id`) = (0)) 
2023-05-11 17:12:06.789  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: update `mr_health_plan` set  `is_del` = true where 1 = 2 
2023-05-11 17:12:06.796  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:12:06.793303', 0, '2023-05-11T00:00', '每周三次', '2023-05-11T00:00', 1656587979109433344, '高血压随访', 0, '随访', 'HYPERTENSION_VISIT', '2023-05-11T17:12:06.793303', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:06.798  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656587979109433344) limit 1 
2023-05-11 17:12:06.801  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:06.799869', 0, 1, 1, 'SEQUENCE', 4, 'WEEKS', 1656587979109433344, 1656587979134599168) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:12:06.803  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656587979134599168) limit 1 
2023-05-11 17:12:06.810  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：2ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, false, false, false, false, true, false, '2023-05-11T17:12:06.805267', 0, '2023-05-11T17:12:06.706077', 1656587979155570688, '药品1', 0, '剂量1', '17:12', 'HYPERTENSION_DRUG_PROGRAM', '2023-05-11T17:12:06.805267', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:06.812  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656587979155570688) limit 1 
2023-05-11 17:12:06.817  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, false, true, false, true, false, false, true, false, '2023-05-11T17:12:06.814145', 0, '2023-05-11T17:12:06.706323', 1656587979193319424, '药品2', 0, '剂量2', '17:12', 'HYPERTENSION_DRUG_PROGRAM', '2023-05-11T17:12:06.814145', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:06.819  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656587979193319424) limit 1 
2023-05-11 17:12:06.824  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：2ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and (`mr_health_plan`.`kn_id` in (1656587979109433344)) 
2023-05-11 17:12:06.828  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (1656587979109433344) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:12:06.831  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (1656587979109433344)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-08T00:00')) 
2023-05-11 17:12:06.833  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and (`mr_health_plan`.`kn_id` in (1656587979109433344)) 
2023-05-11 17:12:06.835  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (1656587979109433344) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:12:06.838  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (1656587979109433344)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-08T00:00')) 
2023-05-11 17:12:06.859  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 rollback:  
2023-05-11 17:12:06.861  INFO 6077 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@379899f4, testMethod = clockInTest@HealthPlanTest, testException = org.opentest4j.AssertionFailedError: expected: <2> but was: <1>, mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5387880e, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:12:06.879  INFO 6077 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@6d2ea1bc, testMethod = notifyTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5387880e, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@1a4eb337]; rollback [true]
2023-05-11 17:12:06.889  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: delete from `mr_health_plan` 
2023-05-11 17:12:06.943  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：2ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:12:06.935886', 0, '2023-05-11T17:12:06.935886', 10000107, '药1', 0, '17:12', 'DRUG', '2023-05-11T17:12:06.935886', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:06.946  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000107) limit 1 
2023-05-11 17:12:06.961  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:12:06.958356', 0, '2023-05-11T17:12:06.958356', 10000108, '药1', 0, '17:13', 'DRUG', '2023-05-11T17:12:06.958356', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:06.963  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000108) limit 1 
2023-05-11 17:12:06.968  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:12:06.965707', 0, '2023-05-11T17:12:06.965707', 10000109, '药1', 0, '17:14', 'DRUG', '2023-05-11T17:12:06.965707', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:06.970  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000109) limit 1 
2023-05-11 17:12:06.974  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:12:06.972542', 0, '2023-05-11T17:12:06.972542', 10000109, '药1', 0, '17:15', 'DRUG', '2023-05-11T17:12:06.972542', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:06.977  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000109) limit 1 
2023-05-11 17:12:06.983  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:12:06.979176', 0, '2023-05-11T17:12:06.979176', 10000109, '药1', 0, '17:16', 'DRUG', '2023-05-11T17:12:06.979176', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:06.985  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000109) limit 1 
2023-05-11 17:12:06.989  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`kn_type` in ('HYPERTENSION_DRUG_PROGRAM')) and ((`mr_health_plan`.`is_del`) = (false))) and ((`mr_health_plan`.`kn_patient_id`) = (0)) 
2023-05-11 17:12:06.992  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_del` = true where 1 = 2 
2023-05-11 17:12:06.995  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:12:06.993081', 0, '2023-05-11T17:12:06.986373', 1656587979944099840, '药品1', 0, '剂量1', '17:12', 'HYPERTENSION_DRUG_PROGRAM', '2023-05-11T17:12:06.993081', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:06.999  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:06 | 执行时间：2ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656587979944099840) limit 1 
2023-05-11 17:12:07.353  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (((((((`mr_health_plan`.`is_del`) = (false)) and ((`mr_health_plan`.`is_used`) = (true))) and (`mr_health_plan`.`kn_type` in ('DRUG', 'HYPERTENSION_DRUG_PROGRAM', 'DIABETES_DRUG_PROGRAM'))) and ((`mr_health_plan`.`kn_time`) >= ('17:12'))) and ((`mr_health_plan`.`kn_time`) <= ('17:12:59'))) and (`mr_health_plan`.`kn_patient_id` in (0))) and ((`mr_health_plan`.`is_thursday`) = (true)) 
2023-05-11 17:12:07.379  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:12:07.375134', 0, '2023-08-11T00:00', '2023-05-11T00:00', '三月一次', '2023-05-11T00:00', '', 10000101, '线下慢阻肺测试', 0, '线下随访开始时间,展示时间是今天', 'OFFLINE_COPD', '2023-05-11T17:12:07.375134', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:07.381  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000101) limit 1 
2023-05-11 17:12:07.384  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:07.382384', 0, 1, 1, 'SEQUENCE', 3, 'MONTHS', 10000101, 1656587981579878400) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:12:07.385  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656587981579878400) limit 1 
2023-05-11 17:12:07.392  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:12:07.387264', 0, '2023-03-01T00:00', '三月一次', '2023-03-01T00:00', '', 10000102, '线下糖尿病测试', 0, '开始时间是三个月前, 结束时间应该是今天', 'OFFLINE_DIABETES', '2023-05-11T17:12:07.387264', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:07.395  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000102) limit 1 
2023-05-11 17:12:07.398  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:07.396301', 0, 1, 1, 'SEQUENCE', 3, 'MONTHS', 10000102, 1656587981638598656) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:12:07.399  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656587981638598656) limit 1 
2023-05-11 17:12:07.439  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            plan.kn_display_time     from mr_health_plan plan     WHERE kn_patient_id in (0)       and plan.kn_type in ('OFFLINE_HYPERTENSION','OFFLINE_DIABETES','OFFLINE_ACUTE_CORONARY_DISEASE','OFFLINE_CEREBRAL_STROKE','OFFLINE_COPD')       and plan.is_used = true       and plan.is_del = false       AND plan.kn_cycle_start_time <= '2023-05-11T17:12:07.401793'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:12:07.401793')       and plan.kn_display_time <= '2023-05-11T17:12:07.401793'  
2023-05-11 17:12:07.446  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000101, 10000102) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:12:07.450  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000101)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-08-11T00:00')) 
2023-05-11 17:12:07.453  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000102)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-03-01T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-01T00:00')) 
2023-05-11 17:12:07.460  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            plan.kn_display_time     from mr_health_plan plan     WHERE kn_patient_id in (0)       and plan.kn_type in ('OFFLINE_HYPERTENSION','OFFLINE_DIABETES','OFFLINE_ACUTE_CORONARY_DISEASE','OFFLINE_CEREBRAL_STROKE','OFFLINE_COPD')       and plan.is_used = true       and plan.is_del = false       AND plan.kn_cycle_start_time <= '2023-05-11T17:12:07.457589'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:12:07.457589')       and plan.kn_display_time <= '2023-05-11T17:12:07.457589'  
2023-05-11 17:12:07.462  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000101, 10000102) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:12:07.464  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000101)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-08-11T00:00')) 
2023-05-11 17:12:07.467  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000102)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-03-01T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-01T00:00')) 
2023-05-11 17:12:07.472  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:12:07.469241', 0, '2023-08-11T00:00', '2023-05-11T00:00', '三月一次', '2023-05-11T00:00', '', 10000103, '线上慢阻肺测试', 0, '线上随访开始时间,展示时间是今天', 'ONLINE_COPD', '2023-05-11T17:12:07.469241', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:07.476  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000103) limit 1 
2023-05-11 17:12:07.479  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:07.477291', 0, 1, 1, 'SEQUENCE', 3, 'MONTHS', 10000103, 1656587981974142976) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:12:07.480  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656587981974142976) limit 1 
2023-05-11 17:12:07.484  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:12:07.481735', 0, '2023-08-11T00:00', '2023-05-11T00:00', '三月一次', '2023-05-11T00:00', '', 10000104, '线上糖尿病测试', 0, '开始时间,展示时间是今天', 'ONLINE_DIABETES', '2023-05-11T17:12:07.481735', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:07.485  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000104) limit 1 
2023-05-11 17:12:07.487  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:07.486351', 0, 1, 1, 'SEQUENCE', 3, 'MONTHS', 10000104, 1656587982016086016) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:12:07.489  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656587982016086016) limit 1 
2023-05-11 17:12:07.494  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            plan.kn_display_time     from mr_health_plan plan     WHERE kn_patient_id in (0)       and plan.kn_type in ('HYPERTENSION_VISIT','ONLINE_DIABETES','ONLINE_CEREBRAL_STROKE','CEREBRAL_STROKE','ONLINE_ACUTE_CORONARY_DISEASE','ONLINE_COPD','BEHAVIOR_VISIT','DIABETES_BEHAVIOR_VISIT','CEREBRAL_STROKE_BEHAVIOR_VISIT','ACUTE_CORONARY_DISEASE_BEHAVIOR_VISIT','COPD_BEHAVIOR_VISIT')       and plan.is_used = true       and plan.is_del = false       AND plan.kn_cycle_start_time <= '2023-05-11T17:12:07.490466'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:12:07.490466')       and plan.kn_display_time <= '2023-05-11T17:12:07.490466'  
2023-05-11 17:12:07.496  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000103, 10000104) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:12:07.498  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000103)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-08-11T00:00')) 
2023-05-11 17:12:07.499  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000104)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-08-11T00:00')) 
2023-05-11 17:12:07.507  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:12:07.501508', 0, '2023-08-11T00:00', '2023-05-11T00:00', '测测血压', '2023-05-11T00:00', '', 10000105, '测血压', 0, '开始时间,展示时间是今天', 'BLOOD_PRESSURE_MEASUREMENT', '2023-05-11T17:12:07.501508', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:07.509  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000105) limit 1 
2023-05-11 17:12:07.511  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:07.510227', 0, 1, 1, 'SEQUENCE', 1, 'WEEKS', 10000105, 1656587982112555008) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:12:07.513  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656587982112555008) limit 1 
2023-05-11 17:12:07.516  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            plan.kn_display_time     from mr_health_plan plan     WHERE kn_patient_id in (0)       and plan.kn_type in ('BLOOD_PRESSURE_MEASUREMENT','FASTING_BLOOD_GLUCOSE','BEFORE_MEAL_BLOOD_GLUCOSE','MEAL_TWO_HOUR_RANDOM_BLOOD_GLUCOSE','PULSE_OXYGEN_SATURATION_PLAN')       and plan.is_used = true       and plan.is_del = false       AND plan.kn_cycle_start_time <= '2023-05-11T17:12:07.514576'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:12:07.514576')       and plan.kn_display_time <= '2023-05-11T17:12:07.514576'  
2023-05-11 17:12:07.518  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000105) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:12:07.520  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000105)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:12:07.525  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:12:07.523247', 0, '2023-08-11T00:00', '2023-05-11T00:00', '出院随访', '2023-05-11T00:00', '', 10000106, '护院随访', 0, '开始时间,展示时间是今天', 'LEAVE_HOSPITAL_VISIT', '2023-05-11T17:12:07.523247', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:07.527  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000106) limit 1 
2023-05-11 17:12:07.529  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:07.527891', 0, 1, 1, 'SEQUENCE', 1, 'WEEKS', 10000106, 1656587982188052480) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:12:07.530  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656587982188052480) limit 1 
2023-05-11 17:12:07.536  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 rollback:  
2023-05-11 17:12:07.537  INFO 6077 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@6d2ea1bc, testMethod = notifyTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5387880e, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:12:07.541  INFO 6077 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@e79a675, testMethod = idGetList@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5387880e, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@1a4eb337]; rollback [true]
2023-05-11 17:12:07.547  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:12:07.544236', 0, '2023-05-12T00:00', '每周三次', '2023-05-12T00:00', 'HELLO', 10000100, '有氧运动', 0, '游泳', 'BEHAVIOR_VISIT', '2023-05-11T17:12:07.544236', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:07.548  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000100) limit 1 
2023-05-11 17:12:07.550  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:12:07.549445', 0, 3, 3, 'SEQUENCE', 1, 'WEEKS', 10000100, 1656587982280327168) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:12:07.552  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656587982280327168) limit 1 
2023-05-11 17:12:07.554  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and (`mr_health_plan`.`kn_id` in (10000100)) 
2023-05-11 17:12:07.556  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000100) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:12:07.557  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000100)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-12T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-19T00:00')) 
2023-05-11 17:12:07.562  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 rollback:  
2023-05-11 17:12:07.563  INFO 6077 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@e79a675, testMethod = idGetList@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5387880e, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:12:07.569  INFO 6077 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@467ac5f8, testMethod = listTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5387880e, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@1a4eb337]; rollback [true]
2023-05-11 17:12:07.592  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000011, 0, '完成本周饮食计划', '白菜', '一年3月,一天两次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 3 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:12:07.593  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861000, 10000011, NULL, 1, 'YEARS', 3, 'MONTHS', 3, 0, NOW()) 
2023-05-11 17:12:07.595  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861001, 10000011, NULL, 1, 'YEARS', 5, 'DAYS', 5, 0, NOW()) 
2023-05-11 17:12:07.596  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100000, 10000011, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:12:07.597  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100001, 10000011, NULL, date_add(now(), interval 1 DAY), 0, date_add(now(), interval 1 DAY)) 
2023-05-11 17:12:07.599  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100002, 10000011, NULL, date_add(now(), interval 2 DAY), 0, date_add(now(), interval 2 DAY)) 
2023-05-11 17:12:07.600  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100003, 10000011, NULL, date_add(now(), interval 1 MONTH), 0, date_add(now(), interval 1 MONTH)) 
2023-05-11 17:12:07.601  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100004, 10000011, NULL, date_add(now(), interval 2 MONTH), 0, date_add(now(), interval 2 MONTH)) 
2023-05-11 17:12:07.602  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100005, 10000011, NULL, date_add(now(), interval 3 MONTH), 0, date_add(now(), interval 3 MONTH)) 
2023-05-11 17:12:07.604  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000012, 0, '完成本周饮食计划', '白菜', '一年3月,一天两次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 3 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:12:07.608  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861010, 10000012, NULL, 1, 'YEARS', 3, 'SEQUENCE', 3, 0, NOW()) 
2023-05-11 17:12:07.610  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861011, 10000012, NULL, 1, 'MONTHS', 5, 'SEQUENCE', 5, 0, NOW()) 
2023-05-11 17:12:07.613  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100010, 10000012, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:12:07.616  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100011, 10000012, NULL, date_add(now(), interval 2 SECOND), 0, date_add(now(), interval 2 SECOND)) 
2023-05-11 17:12:07.618  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100012, 10000012, NULL, date_add(now(), interval 3 SECOND), 0, date_add(now(), interval 3 SECOND)) 
2023-05-11 17:12:07.620  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100013, 10000012, NULL, date_add(now(), interval 1 DAY), 0, date_add(now(), interval 1 DAY)) 
2023-05-11 17:12:07.624  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100014, 10000012, NULL, date_add(now(), interval 2 DAY), 0, date_add(now(), interval 2 DAY)) 
2023-05-11 17:12:07.627  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100015, 10000012, NULL, date_add(now(), interval 3 DAY), 0, date_add(now(), interval 3 DAY)) 
2023-05-11 17:12:07.629  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000013, 0, '完成本周饮食计划', '白菜', '一年3月,一天两次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 3 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:12:07.630  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861020, 10000013, NULL, 1, 'MONTHS', 3, 'DAYS', 3, 0, NOW()) 
2023-05-11 17:12:07.631  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861021, 10000013, NULL, 1, 'WEEKS', 5, 'SEQUENCE', 5, 0, NOW()) 
2023-05-11 17:12:07.633  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100020, 10000013, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:12:07.634  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100021, 10000013, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:12:07.636  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100022, 10000013, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:12:07.638  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100023, 10000013, NULL, date_add(now(), interval 2 SECOND), 0, date_add(now(), interval 2 SECOND)) 
2023-05-11 17:12:07.640  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100024, 10000013, NULL, date_add(now(), interval 1 day), 0, date_add(now(), interval 1 day)) 
2023-05-11 17:12:07.641  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100025, 10000013, NULL, date_add(now(), interval 2 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:12:07.643  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000014, 0, '完成本周饮食计划', '白菜', '4周2周，1周3天', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 2 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:12:07.646  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220014000000001, 10000014, NULL, 4, 'WEEKS', 2, 'WEEKS', 4, 0, NOW()) 
2023-05-11 17:12:07.647  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220014000000002, 10000014, 1574220014000000001, 1, 'WEEKS', 3, 'DAYS', 3, 0, NOW()) 
2023-05-11 17:12:07.648  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220014000000003, 10000014, NULL, 3, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:12:07.650  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000001, 10000014, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:12:07.651  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000002, 10000014, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:12:07.652  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000003, 10000014, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:12:07.654  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000004, 10000014, NULL, date_add(now(), interval 1 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:12:07.656  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000005, 10000014, NULL, date_add(now(), interval 6 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:12:07.658  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000006, 10000014, NULL, date_add(now(), interval 7 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:12:07.661  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000007, 10000014, NULL, date_add(now(), interval 8 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:12:07.672  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：10ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000015, 0, '完成本周饮食计划', '菠菜', '一周7天,一天两次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 3 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:12:07.696  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：23ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861568, 10000015, NULL, 1, 'WEEKS', 4, 'DAYS', 4, 0, NOW()) 
2023-05-11 17:12:07.723  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：26ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861569, 10000015, 1574221477018861568, 1, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:12:07.747  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：23ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861570, 10000015, NULL, 1, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:12:07.749  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141030, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 1 SECOND)) 
2023-05-11 17:12:07.750  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141031, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 2 SECOND)) 
2023-05-11 17:12:07.751  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141032, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 3 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 3 SECOND)) 
2023-05-11 17:12:07.755  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141040, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:12:07.758  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141041, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:12:07.763  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：4ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141042, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 3 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 3 SECOND)) 
2023-05-11 17:12:07.767  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：3ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141050, 10000015, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:12:07.768  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141051, 10000015, NULL, date_add(now(), interval 2 SECOND), 0, date_add(now(), interval 2 SECOND)) 
2023-05-11 17:12:07.771  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141052, 10000015, NULL, date_add(now(), interval 3 SECOND), 0, date_add(now(), interval 3 SECOND)) 
2023-05-11 17:12:07.772  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141060, 10000015, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:12:07.776  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141061, 10000015, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:12:07.778  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141062, 10000015, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 3 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 3 SECOND)) 
2023-05-11 17:12:07.780  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000016, 0, '完成本周饮食计划', '白菜', '4周2周，1周3天', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 2 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:12:07.781  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000001, 10000016, NULL, 4, 'WEEKS', 4, 'WEEKS', 4, 0, NOW()) 
2023-05-11 17:12:07.782  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000002, 10000016, 1574220016000000001, 1, 'WEEKS', 2, 'DAYS', 3, 0, NOW()) 
2023-05-11 17:12:07.783  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000003, 10000016, 1574220016000000002, 1, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:12:07.785  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000004, 10000016, NULL, 2, 'WEEKS', 3, 'DAYS', 3, 0, NOW()) 
2023-05-11 17:12:07.786  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000005, 10000016, 1574220016000000004, 1, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:12:07.787  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000001, 10000016, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:12:07.790  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000002, 10000016, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:12:07.792  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000003, 10000016, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:12:07.793  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000004, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:12:07.795  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000104, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:12:07.796  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000005, 10000016, NULL, date_add(now(), interval 6 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:12:07.797  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000006, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 7 day), INTERVAL 1 SECOND), 0, date_add(date_add(NOW(),INTERVAL 7 day), INTERVAL 1 SECOND)) 
2023-05-11 17:12:07.797  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000007, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 7 day), INTERVAL 2 SECOND), 0, date_add(date_add(NOW(),INTERVAL 7 day), INTERVAL 2 SECOND)) 
2023-05-11 17:12:07.798  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000008, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 8 day), INTERVAL 1 SECOND), 0, date_add(date_add(NOW(),INTERVAL 8 day), INTERVAL 1 SECOND)) 
2023-05-11 17:12:07.799  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000009, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 8 day), INTERVAL 2 SECOND), 0, date_add(date_add(NOW(),INTERVAL 8 day), INTERVAL 2 SECOND)) 
2023-05-11 17:12:07.801  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000017, 0, '完成本周饮食计划', '白菜', '1天4次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 2 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:12:07.802  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220017000000001, 10000017, null, 1, 'DAYS', 3, 'SEQUENCE', 3, 0, NOW()) 
2023-05-11 17:12:07.803  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220017100000001, 10000017, NULL, DATE_ADD(CURDATE(), INTERVAL 9 HOUR), 0, now()) 
2023-05-11 17:12:07.804  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220017100000002, 10000017, NULL, DATE_ADD(CURDATE(), INTERVAL 9 HOUR), 0, now()) 
2023-05-11 17:12:07.808  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220017100000003, 10000017, NULL, DATE_ADD(CURDATE(), INTERVAL 9 HOUR), 0, now()) 
2023-05-11 17:12:07.818  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            clockIn.count     from mr_health_plan plan              left join (select health.kn_id, count(clock.kn_health_plan_id) count                         from mr_health_plan health                                  left join mr_clock_in clock on health.kn_id = clock.kn_health_plan_id                             and clock.kn_clock_at >= '2023-05-11T00:00'                             and clock.kn_clock_at < '2023-05-12T00:00'                         where health.kn_patient_id = 0                           and health.is_del = false                         group by health.kn_id) clockIn on plan.kn_id = clockIn.kn_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T17:12:07.813843'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:12:07.813843')       and ((plan.kn_type = 'DRUG' and plan.is_used = true) or plan.kn_type != 'DRUG')       and plan.kn_display_time <= '2023-05-11T17:12:07.813843'  
2023-05-11 17:12:07.822  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000011, 10000012, 10000013, 10000014, 10000015, 10000016, 10000017) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:12:07.833  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：8ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000011)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2024-05-08T00:00')) 
2023-05-11 17:12:07.841  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000011)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2024-05-08T00:00')) 
2023-05-11 17:12:07.851  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：3ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000012)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2024-05-08T00:00')) 
2023-05-11 17:12:07.861  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000012)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-08T00:00')) 
2023-05-11 17:12:07.863  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000013)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-08T00:00')) 
2023-05-11 17:12:07.865  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000013)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-15T00:00')) 
2023-05-11 17:12:07.867  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000014)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-09T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-06T00:00')) 
2023-05-11 17:12:07.869  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000014)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-09T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00')) 
2023-05-11 17:12:07.872  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000015)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-15T00:00')) 
2023-05-11 17:12:07.876  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000015)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00')) 
2023-05-11 17:12:07.878  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000016)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-09T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-06T00:00')) 
2023-05-11 17:12:07.881  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000016)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-09T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-23T00:00')) 
2023-05-11 17:12:07.883  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000017)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00')) 
2023-05-11 17:12:07.890  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:12:07 | 执行时间：2ms 
 rollback:  
2023-05-11 17:12:07.891  INFO 6077 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@467ac5f8, testMethod = listTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5387880e, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:12:07.911  INFO 6077 --- [Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.bjknrt.medication.remind.api.MedicationRemindTest], using SpringBootContextLoader
2023-05-11 17:12:07.913  INFO 6077 --- [Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.bjknrt.medication.remind.api.MedicationRemindTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2023-05-11 17:12:07.914  INFO 6077 --- [Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.bjknrt.medication.remind.api.MedicationRemindTest]: MedicationRemindTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-05-11 17:12:07.917  INFO 6077 --- [Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.bjknrt.medication.remind.MedicationRemindServerApplication for test class com.bjknrt.medication.remind.api.MedicationRemindTest
2023-05-11 17:12:07.919  INFO 6077 --- [Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2023-05-11 17:12:07.919  INFO 6077 --- [Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@31248251, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@46d9fd65, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1be982b9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@792149c8, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6c027ab7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@65399087, org.springframework.test.context.transaction.TransactionalTestExecutionListener@32122ad3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@410e5a50, org.springframework.test.context.event.EventPublishingTestExecutionListener@3ea65704, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@17b255ff, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@34d5a168, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7baa178, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@b28d8fc, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@eb069cb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@17f74794]
2023-05-11 17:12:13.025  INFO 6077 --- [Test worker] c.b.m.remind.api.MedicationRemindTest    : Starting MedicationRemindTest using Java 17.0.6 on wanghehuideMacBookPro.local with PID 6077 (started by wanghehui in /Users/wanghehui/projects/java/hmp-be/medication-remind/medication-remind-server)
2023-05-11 17:12:13.025 DEBUG 6077 --- [Test worker] c.b.m.remind.api.MedicationRemindTest    : Running with Spring Boot v2.6.8, Spring v5.3.21
2023-05-11 17:12:13.026  INFO 6077 --- [Test worker] c.b.m.remind.api.MedicationRemindTest    : The following 1 profile is active: "dev-local"
2023-05-11 17:12:13.455  INFO 6077 --- [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d251075e-2bf1-3341-9e51-4ff0d5f888ac
2023-05-11 17:12:13.579  INFO 6077 --- [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2023-05-11 17:12:13.581  INFO 6077 --- [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-05-11 17:12:13.581  INFO 6077 --- [Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.63]
2023-05-11 17:12:13.608  INFO 6077 --- [Test worker] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2023-05-11 17:12:13.608  INFO 6077 --- [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 579 ms
2023-05-11 17:12:13.858  INFO 6077 --- [Test worker] com.bjknrt.framework.test.DbTestConfig   : 使用数据库次数：2，连接信息：jdbc:p6spy:mysql://localhost:3306/test_utjyqpvk
2023-05-11 17:12:13.884  INFO 6077 --- [Test worker] o.s.c.openfeign.FeignClientFactoryBean   : For 'user-permission-centre-server' URL not provided. Will try picking an instance via load-balancing.
2023-05-11 17:12:13.967 DEBUG 6077 --- [Test worker] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, jwtAuthenticationFilter urls=[/*] order=2147483647
2023-05-11 17:12:13.967 DEBUG 6077 --- [Test worker] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/]
2023-05-11 17:12:13.969 DEBUG 6077 --- [Test worker] c.b.security.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2023-05-11 17:12:14.044  INFO 6077 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2023-05-11 17:12:14.060  INFO 6077 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2023-05-11 17:12:14.060  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 准备将数据库(com.bjknrt.medication.remind)迁移到 10 版本
2023-05-11 17:12:14.062  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：20 | 当前时间：2023-05-11 17:12:14 | 执行时间：1ms 
 statement: create table if not exists _sqlex_version_(package text not null, version int not null, can_migrate bool not null) 
2023-05-11 17:12:14.075  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：0ms 
 statement: lock tables _sqlex_version_ write 
2023-05-11 17:12:14.075  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 获取到全局锁,准备开始迁移
2023-05-11 17:12:14.076  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：0ms 
 statement: select * from _sqlex_version_ where package='com.bjknrt.medication.remind' 
2023-05-11 17:12:14.076  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 数据库当前版本已经是 10,无需迁移
2023-05-11 17:12:14.079  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：1ms 
 commit:  
2023-05-11 17:12:14.079  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：0ms 
 statement: unlock tables 
2023-05-11 17:12:14.079  INFO 6077 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 数据库(com.bjknrt.medication.remind)版本迁移完成,释放全局锁
2023-05-11 17:12:14.080  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：0ms 
 rollback:  
2023-05-11 17:12:14.080  INFO 6077 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 准备比对数据库结构一致性
2023-05-11 17:12:14.081  INFO 6077 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 获取SqlEx Repository(com.bjknrt.medication.remind)定义结构
2023-05-11 17:12:14.081  INFO 6077 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 获取目标数据库结构
2023-05-11 17:12:14.111  INFO 6077 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 计算结构差异
2023-05-11 17:12:14.111  INFO 6077 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 结构一致性比对完成,无差异
2023-05-11 17:12:14.136  INFO 6077 --- [Test worker] o.s.c.openfeign.FeignClientFactoryBean   : For 'article-service-server' URL not provided. Will try picking an instance via load-balancing.
2023-05-11 17:12:14.198  INFO 6077 --- [Test worker] o.s.c.openfeign.FeignClientFactoryBean   : For 'wechat-service-server' URL not provided. Will try picking an instance via load-balancing.
2023-05-11 17:12:14.365 DEBUG 6077 --- [Test worker] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 2 ResponseBodyAdvice
2023-05-11 17:12:14.383 DEBUG 6077 --- [Test worker] s.w.s.m.m.a.RequestMappingHandlerMapping : 24 mappings in 'requestMappingHandlerMapping'
2023-05-11 17:12:14.435 DEBUG 6077 --- [Test worker] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-05-11 17:12:14.450 DEBUG 6077 --- [Test worker] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 2 ResponseBodyAdvice
2023-05-11 17:12:14.559  INFO 6077 --- [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@56fae55c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@303d3936, org.springframework.security.web.context.SecurityContextPersistenceFilter@7d06a187, org.springframework.security.web.header.HeaderWriterFilter@2fd78fb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1310a3a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68628047, com.bjknrt.security.JwtAuthenticationFilter@358ca2bc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12997ff6, org.springframework.security.web.session.SessionManagementFilter@5cecbd49, org.springframework.security.web.access.ExceptionTranslationFilter@5b34efe2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6cea94e0]
2023-05-11 17:12:14.773  INFO 6077 --- [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2023-05-11 17:12:14.829  INFO 6077 --- [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 55199 (http) with context path ''
2023-05-11 17:12:14.838  INFO 6077 --- [Test worker] c.b.m.remind.api.MedicationRemindTest    : Started MedicationRemindTest in 6.915 seconds (JVM running for 25.83)
2023-05-11 17:12:14.847  INFO 6077 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@117639a6 testClass = MedicationRemindTest, testInstance = com.bjknrt.medication.remind.api.MedicationRemindTest@232259f4, testMethod = interfaceTest@MedicationRemindTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d5e1982 testClass = MedicationRemindTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@4f760fd8 key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@6feda499]; rollback [true]
2023-05-11 17:12:14.891  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：3ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, false, false, false, true, false, false, true, false, '2023-05-11T17:12:14.887024', 100000, '2023-05-11T17:12:14.887024', 1656588013053935616, '阿莫西林', 100000, '17:12', 'DRUG', '2023-05-11T17:12:14.887024', 100000) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:14.892  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656588013053935616) limit 1 
2023-05-11 17:12:14.897  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：2ms 
 statement: select * from `mr_health_plan` where (((`mr_health_plan`.`is_del`) = (false)) and ((`mr_health_plan`.`kn_patient_id`) = (100000))) and ((`mr_health_plan`.`kn_type`) = ('DRUG')) 
2023-05-11 17:12:14.914  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：6ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, false, false, false, true, false, false, true, false, '2023-05-11T17:12:14.906863', 100000, '2023-05-11T17:12:14.906863', 1, '阿莫西林', 100000, '17:12', 'DRUG', '2023-05-11T17:12:14.906863', 100000) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:14.916  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1) limit 1 
2023-05-11 17:12:14.922  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1) limit 1 
2023-05-11 17:12:14.927  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：3ms 
 statement: update `mr_health_plan` set  `is_used` = false where (`mr_health_plan`.`kn_id`) = (1) 
2023-05-11 17:12:14.937  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_used` = true where `mr_health_plan`.`kn_id` in (1) 
2023-05-11 17:12:14.938  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1) limit 1 
2023-05-11 17:12:14.941  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_del` = true where (`mr_health_plan`.`kn_id`) = (1) 
2023-05-11 17:12:14.946  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：3ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, false, false, false, true, false, false, true, false, '2023-05-11T17:12:14.941842', 100000, '2023-05-11T17:12:14.941842', 111, '阿莫西林', 100000, '17:12', 'DRUG', '2023-05-11T17:12:14.941842', 100000) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:12:14.947  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (111) limit 1 
2023-05-11 17:12:14.959  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：2ms 
 statement: select * from `mr_health_plan` where (((`mr_health_plan`.`kn_type`) = ('DRUG')) and ((`mr_health_plan`.`is_del`) = (false))) and ((`mr_health_plan`.`kn_patient_id`) = (100000)) 
2023-05-11 17:12:14.962  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_del` = true where `mr_health_plan`.`kn_id` in (111, 1656588013053935616) 
2023-05-11 17:12:14.964  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (111) limit 1 
2023-05-11 17:12:14.971  INFO 6077 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:12:14 | 执行时间：3ms 
 rollback:  
2023-05-11 17:12:14.972  INFO 6077 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@117639a6 testClass = MedicationRemindTest, testInstance = com.bjknrt.medication.remind.api.MedicationRemindTest@232259f4, testMethod = interfaceTest@MedicationRemindTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d5e1982 testClass = MedicationRemindTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@4f760fd8 key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:12:15.019  INFO 6077 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2023-05-11 17:12:15.029  INFO 6077 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2023-05-11 17:12:15.030  INFO 6077 --- [SpringApplicationShutdownHook] com.bjknrt.framework.test.DbTestConfig   : 销毁计数，数据库test_utjyqpvk,次数：1
2023-05-11 17:12:15.044  INFO 6077 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown initiated...
2023-05-11 17:12:15.050  INFO 6077 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown completed.
2023-05-11 17:12:15.133  INFO 6077 --- [SpringApplicationShutdownHook] p6spy                                    : 
连接ID：2 | 当前时间：2023-05-11 17:12:15 | 执行时间：81ms 
 statement: DROP DATABASE test_utjyqpvk 
2023-05-11 17:12:15.133  INFO 6077 --- [SpringApplicationShutdownHook] com.bjknrt.framework.test.DbTestConfig   : 销毁数据库test_utjyqpvk,次数：1
2023-05-11 17:16:12.708  INFO 6457 --- [Test worker] c.b.m.remind.api.HealthPlanTest          : Starting HealthPlanTest using Java 17.0.6 on wanghehuideMacBookPro.local with PID 6457 (started by wanghehui in /Users/wanghehui/projects/java/hmp-be/medication-remind/medication-remind-server)
2023-05-11 17:16:12.710 DEBUG 6457 --- [Test worker] c.b.m.remind.api.HealthPlanTest          : Running with Spring Boot v2.6.8, Spring v5.3.21
2023-05-11 17:16:12.710  INFO 6457 --- [Test worker] c.b.m.remind.api.HealthPlanTest          : The following 1 profile is active: "dev-local"
2023-05-11 17:16:14.338  INFO 6457 --- [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d251075e-2bf1-3341-9e51-4ff0d5f888ac
2023-05-11 17:16:15.556  INFO 6457 --- [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2023-05-11 17:16:15.567  INFO 6457 --- [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-05-11 17:16:15.568  INFO 6457 --- [Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.63]
2023-05-11 17:16:15.710  INFO 6457 --- [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-05-11 17:16:15.710  INFO 6457 --- [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2789 ms
2023-05-11 17:16:16.084  INFO 6457 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-05-11 17:16:16.490  INFO 6457 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-05-11 17:16:16.537  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：1 | 当前时间：2023-05-11 17:16:16 | 执行时间：16ms 
 statement: SHOW DATABASES LIKE 'test_hgrezcrn' 
2023-05-11 17:16:16.546  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：1 | 当前时间：2023-05-11 17:16:16 | 执行时间：5ms 
 statement: CREATE DATABASE IF NOT EXISTS test_hgrezcrn 
2023-05-11 17:16:16.548  INFO 6457 --- [Test worker] c.b.f.test.DbTestConfig$Companion        : 创建数据库，连接信息：jdbc:p6spy:mysql://localhost:3306/test_hgrezcrn
2023-05-11 17:16:16.548  INFO 6457 --- [Test worker] com.bjknrt.framework.test.DbTestConfig   : 使用数据库次数：1，连接信息：jdbc:p6spy:mysql://localhost:3306/test_hgrezcrn
2023-05-11 17:16:16.592  INFO 6457 --- [Test worker] o.s.c.openfeign.FeignClientFactoryBean   : For 'user-permission-centre-server' URL not provided. Will try picking an instance via load-balancing.
2023-05-11 17:16:16.762 DEBUG 6457 --- [Test worker] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, jwtAuthenticationFilter urls=[/*] order=2147483647
2023-05-11 17:16:16.762 DEBUG 6457 --- [Test worker] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/]
2023-05-11 17:16:16.790 DEBUG 6457 --- [Test worker] c.b.security.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2023-05-11 17:16:17.014  INFO 6457 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2023-05-11 17:16:17.031  INFO 6457 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2023-05-11 17:16:17.044  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 准备将数据库(com.bjknrt.medication.remind)迁移到 10 版本
2023-05-11 17:16:17.534  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：10 | 当前时间：2023-05-11 17:16:17 | 执行时间：35ms 
 statement: create table if not exists _sqlex_version_(package text not null, version int not null, can_migrate bool not null) 
2023-05-11 17:16:17.564  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:17 | 执行时间：25ms 
 statement: lock tables _sqlex_version_ write 
2023-05-11 17:16:17.564  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 获取到全局锁,准备开始迁移
2023-05-11 17:16:17.690  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:17 | 执行时间：1ms 
 statement: select * from _sqlex_version_ where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:17.719  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:17 | 执行时间：1ms 
 statement: insert into _sqlex_version_ values('com.bjknrt.medication.remind', -1, true) 
2023-05-11 17:16:17.719  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 当前数据库版本 -1, 版本差异 11
2023-05-11 17:16:17.727  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:17 | 执行时间：1ms 
 statement: update _sqlex_version_ set can_migrate=false where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:17.728  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 0 版本的迁移任务
2023-05-11 17:16:17.728  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE IF NOT EXISTS `undo_log` (`branch_id` BIGINT NOT NULL COMMENT 'branch transaction id',`xid` VARCHAR(128) NOT NULL COMMENT 'global transaction id',`context` VARCHAR(128) NOT NULL COMMENT 'undo_log context,such as serialization',`rollback_info` LONGBLOB NOT NULL COMMENT 'rollback info',`log_status` INT(11) NOT NULL COMMENT '0:normal status,1:defense status',`log_created` DATETIME(6) NOT NULL COMMENT 'create datetime',`log_modified` DATETIME(6) NOT NULL COMMENT 'modify datetime',UNIQUE `ux_undo_log`(`xid`, `branch_id`)) ENGINE = InnoDB AUTO_INCREMENT = 1 DEFAULT CHARACTER SET = UTF8MB4 COMMENT = 'AT transaction mode undo table'
2023-05-11 17:16:17.810  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:17 | 执行时间：79ms 
 statement: CREATE TABLE IF NOT EXISTS `undo_log` (`branch_id` BIGINT NOT NULL COMMENT 'branch transaction id',`xid` VARCHAR(128) NOT NULL COMMENT 'global transaction id',`context` VARCHAR(128) NOT NULL COMMENT 'undo_log context,such as serialization',`rollback_info` LONGBLOB NOT NULL COMMENT 'rollback info',`log_status` INT(11) NOT NULL COMMENT '0:normal status,1:defense status',`log_created` DATETIME(6) NOT NULL COMMENT 'create datetime',`log_modified` DATETIME(6) NOT NULL COMMENT 'modify datetime',UNIQUE `ux_undo_log`(`xid`, `branch_id`)) ENGINE = InnoDB AUTO_INCREMENT = 1 DEFAULT CHARACTER SET = UTF8MB4 COMMENT = 'AT transaction mode undo table' 
2023-05-11 17:16:17.814  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:17 | 执行时间：1ms 
 statement: update _sqlex_version_ set version=0 where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:17.814  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 0 版本迁移成功
2023-05-11 17:16:17.814  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 1 版本的迁移任务
2023-05-11 17:16:17.815  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE `mr_medication_remind` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_patient_id` BIGINT UNSIGNED NOT NULL COMMENT '患者id',`kn_drug_name` VARCHAR(255) NOT NULL DEFAULT _UTF8MB4'' COMMENT '药品名称',`kn_time` TIME NOT NULL COMMENT '时间',`kn_monday` TINYINT NOT NULL DEFAULT 0 COMMENT '周一,1:选中,0未选中',`kn_tuesday` TINYINT NOT NULL DEFAULT 0 COMMENT '周二,1:选中,0未选中',`kn_wednesday` TINYINT NOT NULL DEFAULT 0 COMMENT '周三,1:选中,0未选中',`kn_thursday` TINYINT NOT NULL DEFAULT 0 COMMENT '周四,1:选中,0未选中',`kn_friday` TINYINT NOT NULL DEFAULT 0 COMMENT '周五,1:选中,0未选中',`kn_saturday` TINYINT NOT NULL DEFAULT 0 COMMENT '周六,1:选中,0未选中',`kn_sunday` TINYINT NOT NULL DEFAULT 0 COMMENT '周日,1:选中,0未选中',`kn_status` TINYINT NOT NULL DEFAULT 1 COMMENT '状态, 1可用,0不可用',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',`kn_updated_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '修改人id',`kn_updated_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3) COMMENT '修改时间',INDEX `index_wek`(`kn_monday`, `kn_tuesday`, `kn_wednesday`, `kn_thursday`, `kn_friday`, `kn_saturday`, `kn_sunday`),INDEX `index_time`(`kn_time`)) ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '定时用药表'
2023-05-11 17:16:17.854  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:17 | 执行时间：37ms 
 statement: CREATE TABLE `mr_medication_remind` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_patient_id` BIGINT UNSIGNED NOT NULL COMMENT '患者id',`kn_drug_name` VARCHAR(255) NOT NULL DEFAULT _UTF8MB4'' COMMENT '药品名称',`kn_time` TIME NOT NULL COMMENT '时间',`kn_monday` TINYINT NOT NULL DEFAULT 0 COMMENT '周一,1:选中,0未选中',`kn_tuesday` TINYINT NOT NULL DEFAULT 0 COMMENT '周二,1:选中,0未选中',`kn_wednesday` TINYINT NOT NULL DEFAULT 0 COMMENT '周三,1:选中,0未选中',`kn_thursday` TINYINT NOT NULL DEFAULT 0 COMMENT '周四,1:选中,0未选中',`kn_friday` TINYINT NOT NULL DEFAULT 0 COMMENT '周五,1:选中,0未选中',`kn_saturday` TINYINT NOT NULL DEFAULT 0 COMMENT '周六,1:选中,0未选中',`kn_sunday` TINYINT NOT NULL DEFAULT 0 COMMENT '周日,1:选中,0未选中',`kn_status` TINYINT NOT NULL DEFAULT 1 COMMENT '状态, 1可用,0不可用',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',`kn_updated_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '修改人id',`kn_updated_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3) COMMENT '修改时间',INDEX `index_wek`(`kn_monday`, `kn_tuesday`, `kn_wednesday`, `kn_thursday`, `kn_friday`, `kn_saturday`, `kn_sunday`),INDEX `index_time`(`kn_time`)) ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '定时用药表' 
2023-05-11 17:16:17.857  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:17 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=1 where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:17.858  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 1 版本迁移成功
2023-05-11 17:16:17.858  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 2 版本的迁移任务
2023-05-11 17:16:17.858  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE `mr_health_plan` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_patient_id` BIGINT UNSIGNED NOT NULL COMMENT '患者id',`kn_name` VARCHAR(255) NOT NULL DEFAULT _UTF8MB4'' COMMENT '计划名称',`kn_sub_name` VARCHAR(255) NULL DEFAULT _UTF8MB4'' COMMENT '计划名称-标题',`kn_desc` VARCHAR(255) NULL DEFAULT _UTF8MB4'' COMMENT '计划描述',`kn_type` VARCHAR(200) NOT NULL COMMENT '类型: BEHAVIOR_VISIT: 行为习惯随访,DRUG: 药品,HYPERTENSION_VISIT: 高血压随访,EXERCISE_PROGRAM: 运动方案,BLOOD_PRESSURE_MEASUREMENT: 测血压',`kn_time` TIME NULL DEFAULT NULL COMMENT '时间',`is_monday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周一,true:选中,false:未选中',`is_tuesday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周二,true:选中,false:未选中',`is_wednesday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周三,true:选中,false:未选中',`is_thursday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周四,true:选中,false:未选中',`is_friday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周五,true:选中,false:未选中',`is_saturday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周六,true:选中,false:未选中',`is_sunday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周日,true:选中,false:未选中',`kn_cycle_start_time` DATETIME(3) NULL DEFAULT NULL COMMENT '周期开始时间',`kn_cycle_end_time` DATETIME(3) NULL DEFAULT NULL COMMENT '周期结束时间',`is_used` TINYINT(1) NOT NULL DEFAULT TRUE COMMENT '状态, true:可用,false: 不可用',`is_del` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '是否删除: true: 删除, false: 未删除',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',`kn_updated_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '修改人id',`kn_updated_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3) COMMENT '修改时间',INDEX `index_time`(`kn_time`)) ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划表'
2023-05-11 17:16:17.896  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:17 | 执行时间：36ms 
 statement: CREATE TABLE `mr_health_plan` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_patient_id` BIGINT UNSIGNED NOT NULL COMMENT '患者id',`kn_name` VARCHAR(255) NOT NULL DEFAULT _UTF8MB4'' COMMENT '计划名称',`kn_sub_name` VARCHAR(255) NULL DEFAULT _UTF8MB4'' COMMENT '计划名称-标题',`kn_desc` VARCHAR(255) NULL DEFAULT _UTF8MB4'' COMMENT '计划描述',`kn_type` VARCHAR(200) NOT NULL COMMENT '类型: BEHAVIOR_VISIT: 行为习惯随访,DRUG: 药品,HYPERTENSION_VISIT: 高血压随访,EXERCISE_PROGRAM: 运动方案,BLOOD_PRESSURE_MEASUREMENT: 测血压',`kn_time` TIME NULL DEFAULT NULL COMMENT '时间',`is_monday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周一,true:选中,false:未选中',`is_tuesday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周二,true:选中,false:未选中',`is_wednesday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周三,true:选中,false:未选中',`is_thursday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周四,true:选中,false:未选中',`is_friday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周五,true:选中,false:未选中',`is_saturday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周六,true:选中,false:未选中',`is_sunday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周日,true:选中,false:未选中',`kn_cycle_start_time` DATETIME(3) NULL DEFAULT NULL COMMENT '周期开始时间',`kn_cycle_end_time` DATETIME(3) NULL DEFAULT NULL COMMENT '周期结束时间',`is_used` TINYINT(1) NOT NULL DEFAULT TRUE COMMENT '状态, true:可用,false: 不可用',`is_del` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '是否删除: true: 删除, false: 未删除',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',`kn_updated_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '修改人id',`kn_updated_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3) COMMENT '修改时间',INDEX `index_time`(`kn_time`)) ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划表' 
2023-05-11 17:16:17.897  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE `mr_frequency` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_health_plan_id` BIGINT UNSIGNED NOT NULL COMMENT '主表',`kn_explain_id` BIGINT UNSIGNED NULL DEFAULT NULL COMMENT '上级',`kn_frequency_time` INT NULL DEFAULT NULL COMMENT '频次时间',`kn_frequency_time_unit` VARCHAR(30) NULL DEFAULT NULL COMMENT '频次时间单位',`kn_frequency_num` INT NULL DEFAULT NULL COMMENT '频次的数量',`kn_frequency_num_unit` VARCHAR(30) NULL DEFAULT NULL COMMENT '频次数量单位',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间') ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划打卡频率表'
2023-05-11 17:16:17.940  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:17 | 执行时间：41ms 
 statement: CREATE TABLE `mr_frequency` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_health_plan_id` BIGINT UNSIGNED NOT NULL COMMENT '主表',`kn_explain_id` BIGINT UNSIGNED NULL DEFAULT NULL COMMENT '上级',`kn_frequency_time` INT NULL DEFAULT NULL COMMENT '频次时间',`kn_frequency_time_unit` VARCHAR(30) NULL DEFAULT NULL COMMENT '频次时间单位',`kn_frequency_num` INT NULL DEFAULT NULL COMMENT '频次的数量',`kn_frequency_num_unit` VARCHAR(30) NULL DEFAULT NULL COMMENT '频次数量单位',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间') ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划打卡频率表' 
2023-05-11 17:16:17.940  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE `mr_clock_in` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_health_plan_id` BIGINT UNSIGNED NOT NULL COMMENT '主表',`kn_time` TIME NULL DEFAULT NULL COMMENT '时间',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间') ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划打卡流水表'
2023-05-11 17:16:17.966  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:17 | 执行时间：24ms 
 statement: CREATE TABLE `mr_clock_in` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_health_plan_id` BIGINT UNSIGNED NOT NULL COMMENT '主表',`kn_time` TIME NULL DEFAULT NULL COMMENT '时间',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间') ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划打卡流水表' 
2023-05-11 17:16:17.968  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:17 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=2 where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:17.969  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 2 版本迁移成功
2023-05-11 17:16:17.969  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 3 版本的迁移任务
2023-05-11 17:16:17.969  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` ADD COLUMN `external_key` VARCHAR(128) COLLATE utf8mb4_general_ci NULL COMMENT '扩展字段' AFTER `kn_updated_at`
2023-05-11 17:16:18.003  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:18 | 执行时间：33ms 
 statement: ALTER TABLE `mr_health_plan` ADD COLUMN `external_key` VARCHAR(128) COLLATE utf8mb4_general_ci NULL COMMENT '扩展字段' AFTER `kn_updated_at` 
2023-05-11 17:16:18.004  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:18 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=3 where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:18.005  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 3 版本迁移成功
2023-05-11 17:16:18.005  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 4 版本的迁移任务
2023-05-11 17:16:18.006  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` ADD COLUMN `kn_display_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '显示时间: 时间之后的显示' AFTER `kn_updated_at`
2023-05-11 17:16:18.033  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:18 | 执行时间：26ms 
 statement: ALTER TABLE `mr_health_plan` ADD COLUMN `kn_display_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '显示时间: 时间之后的显示' AFTER `kn_updated_at` 
2023-05-11 17:16:18.033  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_health_plan` SET `kn_display_time`=IFNULL(`kn_cycle_start_time`, `kn_created_at`)
2023-05-11 17:16:18.034  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:18 | 执行时间：0ms 
 statement: UPDATE `mr_health_plan` SET `kn_display_time`=IFNULL(`kn_cycle_start_time`, `kn_created_at`) 
2023-05-11 17:16:18.036  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:18 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=4 where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:18.036  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 4 版本迁移成功
2023-05-11 17:16:18.036  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 5 版本的迁移任务
2023-05-11 17:16:18.037  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_clock_in` ADD COLUMN `kn_clock_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '打卡时间' AFTER `kn_time`
2023-05-11 17:16:18.047  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:18 | 执行时间：9ms 
 statement: ALTER TABLE `mr_clock_in` ADD COLUMN `kn_clock_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '打卡时间' AFTER `kn_time` 
2023-05-11 17:16:18.048  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_clock_in` SET `kn_clock_at`=`kn_created_at` WHERE `kn_created_at`<NOW()
2023-05-11 17:16:18.049  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:18 | 执行时间：0ms 
 statement: UPDATE `mr_clock_in` SET `kn_clock_at`=`kn_created_at` WHERE `kn_created_at`<NOW() 
2023-05-11 17:16:18.050  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:18 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=5 where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:18.051  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 5 版本迁移成功
2023-05-11 17:16:18.051  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 6 版本的迁移任务
2023-05-11 17:16:18.051  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_frequency` MODIFY COLUMN `kn_frequency_time` INT NOT NULL COMMENT '频次时间' AFTER `kn_explain_id`, MODIFY COLUMN `kn_frequency_time_unit` VARCHAR(30) CHARACTER SET UTF8MB4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '频次时间单位' AFTER `kn_frequency_time`, MODIFY COLUMN `kn_frequency_num` INT NOT NULL COMMENT '达标频次数量' AFTER `kn_frequency_time_unit`, MODIFY COLUMN `kn_frequency_num_unit` VARCHAR(30) CHARACTER SET UTF8MB4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '频次数量单位' AFTER `kn_frequency_num`, ADD COLUMN `kn_frequency_max_num` INT NOT NULL COMMENT '最大完成频次数量' AFTER `kn_frequency_num_unit`
2023-05-11 17:16:18.109  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:18 | 执行时间：54ms 
 statement: ALTER TABLE `mr_frequency` MODIFY COLUMN `kn_frequency_time` INT NOT NULL COMMENT '频次时间' AFTER `kn_explain_id`, MODIFY COLUMN `kn_frequency_time_unit` VARCHAR(30) CHARACTER SET UTF8MB4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '频次时间单位' AFTER `kn_frequency_time`, MODIFY COLUMN `kn_frequency_num` INT NOT NULL COMMENT '达标频次数量' AFTER `kn_frequency_time_unit`, MODIFY COLUMN `kn_frequency_num_unit` VARCHAR(30) CHARACTER SET UTF8MB4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '频次数量单位' AFTER `kn_frequency_num`, ADD COLUMN `kn_frequency_max_num` INT NOT NULL COMMENT '最大完成频次数量' AFTER `kn_frequency_num_unit` 
2023-05-11 17:16:18.110  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_frequency` SET `kn_frequency_max_num`=IF(`kn_frequency_time_unit`=`kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_num`)
2023-05-11 17:16:18.112  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:18 | 执行时间：1ms 
 statement: UPDATE `mr_frequency` SET `kn_frequency_max_num`=IF(`kn_frequency_time_unit`=`kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_num`) 
2023-05-11 17:16:18.114  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:18 | 执行时间：1ms 
 statement: update _sqlex_version_ set version=6 where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:18.115  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 6 版本迁移成功
2023-05-11 17:16:18.115  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 7 版本的迁移任务
2023-05-11 17:16:18.115  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` ADD COLUMN `kn_group` VARCHAR(64) NULL COMMENT '分组' AFTER `external_key`
2023-05-11 17:16:18.144  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:18 | 执行时间：27ms 
 statement: ALTER TABLE `mr_health_plan` ADD COLUMN `kn_group` VARCHAR(64) NULL COMMENT '分组' AFTER `external_key` 
2023-05-11 17:16:18.145  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:18 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=7 where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:18.145  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 7 版本迁移成功
2023-05-11 17:16:18.146  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 8 版本的迁移任务
2023-05-11 17:16:18.146  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` ADD COLUMN `is_clock_display` TINYINT(1) NOT NULL DEFAULT TRUE COMMENT '打卡完成后是否显示' AFTER `kn_group`
2023-05-11 17:16:18.184  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:18 | 执行时间：37ms 
 statement: ALTER TABLE `mr_health_plan` ADD COLUMN `is_clock_display` TINYINT(1) NOT NULL DEFAULT TRUE COMMENT '打卡完成后是否显示' AFTER `kn_group` 
2023-05-11 17:16:18.185  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_health_plan` SET `is_clock_display`=FALSE WHERE `kn_type` IN (_UTF8MB4'OFFLINE_HYPERTENSION',_UTF8MB4'OFFLINE_DIABETES',_UTF8MB4'OFFLINE_ACUTE_CORONARY_DISEASE',_UTF8MB4'OFFLINE_CEREBRAL_STROKE',_UTF8MB4'OFFLINE_COPD',_UTF8MB4'EXERCISE_PROGRAM_ADJUSTMENT_REMIND')
2023-05-11 17:16:18.187  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:18 | 执行时间：1ms 
 statement: UPDATE `mr_health_plan` SET `is_clock_display`=FALSE WHERE `kn_type` IN (_UTF8MB4'OFFLINE_HYPERTENSION',_UTF8MB4'OFFLINE_DIABETES',_UTF8MB4'OFFLINE_ACUTE_CORONARY_DISEASE',_UTF8MB4'OFFLINE_CEREBRAL_STROKE',_UTF8MB4'OFFLINE_COPD',_UTF8MB4'EXERCISE_PROGRAM_ADJUSTMENT_REMIND') 
2023-05-11 17:16:18.188  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:18 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=8 where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:18.188  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 8 版本迁移成功
2023-05-11 17:16:18.189  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 9 版本的迁移任务
2023-05-11 17:16:18.189  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	DROP TABLE `mr_medication_remind`
2023-05-11 17:16:18.203  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:18 | 执行时间：13ms 
 statement: DROP TABLE `mr_medication_remind` 
2023-05-11 17:16:18.205  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:18 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=9 where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:18.206  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 9 版本迁移成功
2023-05-11 17:16:18.206  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 10 版本的迁移任务
2023-05-11 17:16:18.206  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_health_plan` SET `kn_cycle_start_time`=`kn_created_at` WHERE `kn_cycle_start_time` IS NULL
2023-05-11 17:16:18.210  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:18 | 执行时间：3ms 
 statement: UPDATE `mr_health_plan` SET `kn_cycle_start_time`=`kn_created_at` WHERE `kn_cycle_start_time` IS NULL 
2023-05-11 17:16:18.211  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` MODIFY COLUMN `kn_cycle_start_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '周期开始时间' AFTER `is_sunday`
2023-05-11 17:16:18.271  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:16:18 | 执行时间：59ms 
 statement: ALTER TABLE `mr_health_plan` MODIFY COLUMN `kn_cycle_start_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '周期开始时间' AFTER `is_sunday` 
2023-05-11 17:16:18.273  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:18 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=10 where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:18.274  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 10 版本迁移成功
2023-05-11 17:16:18.276  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:18 | 执行时间：0ms 
 statement: update _sqlex_version_ set can_migrate=true where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:18.278  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:18 | 执行时间：0ms 
 commit:  
2023-05-11 17:16:18.282  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:18 | 执行时间：2ms 
 statement: unlock tables 
2023-05-11 17:16:18.282  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 数据库(com.bjknrt.medication.remind)版本迁移完成,释放全局锁
2023-05-11 17:16:18.284  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:18 | 执行时间：0ms 
 rollback:  
2023-05-11 17:16:18.284  INFO 6457 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 准备比对数据库结构一致性
2023-05-11 17:16:18.285  INFO 6457 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 获取SqlEx Repository(com.bjknrt.medication.remind)定义结构
2023-05-11 17:16:18.288  INFO 6457 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 获取目标数据库结构
2023-05-11 17:16:18.337  INFO 6457 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 计算结构差异
2023-05-11 17:16:18.338  INFO 6457 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 结构一致性比对完成,无差异
2023-05-11 17:16:18.687 DEBUG 6457 --- [Test worker] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 2 ResponseBodyAdvice
2023-05-11 17:16:18.780 DEBUG 6457 --- [Test worker] s.w.s.m.m.a.RequestMappingHandlerMapping : 24 mappings in 'requestMappingHandlerMapping'
2023-05-11 17:16:18.835 DEBUG 6457 --- [Test worker] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-05-11 17:16:18.858 DEBUG 6457 --- [Test worker] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 2 ResponseBodyAdvice
2023-05-11 17:16:19.136  INFO 6457 --- [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@75f3c0c9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28ec35e3, org.springframework.security.web.context.SecurityContextPersistenceFilter@196c8b93, org.springframework.security.web.header.HeaderWriterFilter@34d776eb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49d5b651, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34989ceb, com.bjknrt.security.JwtAuthenticationFilter@74159dc9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5068a2b1, org.springframework.security.web.session.SessionManagementFilter@27aa700, org.springframework.security.web.access.ExceptionTranslationFilter@3b42d7df, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3d980928]
2023-05-11 17:16:19.628  INFO 6457 --- [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2023-05-11 17:16:19.849  INFO 6457 --- [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 55325 (http) with context path ''
2023-05-11 17:16:19.878  INFO 6457 --- [Test worker] c.b.m.remind.api.HealthPlanTest          : Started HealthPlanTest in 12.701 seconds (JVM running for 14.163)
2023-05-11 17:16:19.925  INFO 6457 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@111c9be, testMethod = clockInTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d57053ae, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@2176d934]; rollback [true]
2023-05-11 17:16:20.137  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：4ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:16:20.118507', 0, '2023-05-12T00:00', '2023-05-11T00:00', '每周三次', '2023-05-11T00:00', 'HELLO', 10000000, '有氧运动', 0, '游泳', 'BEHAVIOR_VISIT', '2023-05-11T17:16:20.118507', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:20.186  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:16:20.201  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：2ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:20.191614', 0, 3, 3, 'DAYS', 1, 'WEEKS', 10000000, 1656589041933484032) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:16:20.204  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589041933484032) limit 1 
2023-05-11 17:16:20.207  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_explain_id`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:20.191614', 0, 1656589041933484032, 3, 2, 'SEQUENCE', 1, 'DAYS', 10000000, 1656589041933484033) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_explain_id` = values(`kn_explain_id`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:16:20.209  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589041933484033) limit 1 
2023-05-11 17:16:20.213  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：2ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:20.210274', 0, 2, 2, 'DAYS', 1, 'WEEKS', 10000000, 1656589042013175808) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:16:20.216  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：1ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589042013175808) limit 1 
2023-05-11 17:16:20.220  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:16:20.229  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：1ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_health_plan_id`) = (10000000) 
2023-05-11 17:16:20.234  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:16:20.240  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: insert into `mr_clock_in`(`kn_clock_at`, `kn_created_at`, `kn_created_by`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:20.236050', '2023-05-11T17:16:20.236050', 0, 10000000, 1656589042126422016) 
2023-05-11 17:16:20.242  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (`mr_clock_in`.`kn_id`) = (1656589042126422016) limit 1 
2023-05-11 17:16:20.524  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：4ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            clockIn.count     from mr_health_plan plan              left join (select health.kn_id, count(clock.kn_health_plan_id) count                         from mr_health_plan health                                  left join mr_clock_in clock on health.kn_id = clock.kn_health_plan_id                             and clock.kn_clock_at >= '2023-05-11T00:00'                             and clock.kn_clock_at < '2023-05-12T00:00'                         where health.kn_patient_id = 0                           and health.is_del = false                         group by health.kn_id) clockIn on plan.kn_id = clockIn.kn_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T17:16:20.243648'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:16:20.243648')       and ((plan.kn_type = 'DRUG' and plan.is_used = true) or plan.kn_type != 'DRUG')       and plan.kn_display_time <= '2023-05-11T17:16:20.243648'  
2023-05-11 17:16:20.550  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000000) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:16:20.710  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:16:20.715  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:16:20.719  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (`mr_clock_in`.`kn_health_plan_id`) = (10000000) 
2023-05-11 17:16:20.783  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select count(1) from (select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00'))) temp 
2023-05-11 17:16:20.799  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:16:20.802  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: insert into `mr_clock_in`(`kn_clock_at`, `kn_created_at`, `kn_created_by`, `kn_health_plan_id`, `kn_id`) values('2023-05-10T17:16:20.784', '2023-05-11T17:16:20.800715', 0, 10000000, 1656589044492009472) 
2023-05-11 17:16:20.803  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (`mr_clock_in`.`kn_id`) = (1656589044492009472) limit 1 
2023-05-11 17:16:20.806  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            clockIn.count     from mr_health_plan plan              left join (select health.kn_id, count(clock.kn_health_plan_id) count                         from mr_health_plan health                                  left join mr_clock_in clock on health.kn_id = clock.kn_health_plan_id                             and clock.kn_clock_at >= '2023-05-11T00:00'                             and clock.kn_clock_at < '2023-05-12T00:00'                         where health.kn_patient_id = 0                           and health.is_del = false                         group by health.kn_id) clockIn on plan.kn_id = clockIn.kn_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T17:16:20.803958'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:16:20.803958')       and ((plan.kn_type = 'DRUG' and plan.is_used = true) or plan.kn_type != 'DRUG')       and plan.kn_display_time <= '2023-05-11T17:16:20.803958'  
2023-05-11 17:16:20.808  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000000) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:16:20.809  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:16:20.812  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:16:20.813  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (`mr_clock_in`.`kn_health_plan_id`) = (10000000) 
2023-05-11 17:16:20.855  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_name,            clock.kn_clock_at     from mr_health_plan plan              left join mr_clock_in clock on plan.kn_id = clock.kn_health_plan_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T00:00'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time >= '2023-05-12T00:00')       and clock.kn_clock_at >= '2023-05-11T00:00'       and clock.kn_clock_at < '2023-05-12T00:00'  
2023-05-11 17:16:20.866  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:16:20.870  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:20 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00')) 
2023-05-11 17:16:21.156  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`kn_type` in ('BEHAVIOR_VISIT')) and ((`mr_health_plan`.`is_del`) = (false))) and ((`mr_health_plan`.`kn_patient_id`) = (0)) 
2023-05-11 17:16:21.159  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_del` = true where `mr_health_plan`.`kn_id` in (10000000) 
2023-05-11 17:16:21.163  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:16:21.159855', 0, '2023-05-11T00:00', '每周三次', '2023-05-11T00:00', 10000001, '有氧运动', 0, '跑步', 'BEHAVIOR_VISIT', '2023-05-11T17:16:21.159855', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.166  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000001) limit 1 
2023-05-11 17:16:21.170  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:21.168072', 0, 3, 3, 'DAYS', 1, 'WEEKS', 10000001, 1656589046031319040) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:16:21.172  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589046031319040) limit 1 
2023-05-11 17:16:21.175  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_explain_id`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:21.168072', 0, 1656589046031319040, 3, 2, 'SEQUENCE', 1, 'DAYS', 10000001, 1656589046031319041) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_explain_id` = values(`kn_explain_id`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:16:21.176  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589046031319041) limit 1 
2023-05-11 17:16:21.181  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：2ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:21.177460', 0, 2, 2, 'DAYS', 1, 'WEEKS', 10000001, 1656589046073262080) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:16:21.184  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589046073262080) limit 1 
2023-05-11 17:16:21.187  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000001) limit 1 
2023-05-11 17:16:21.190  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_health_plan_id`) = (10000001) 
2023-05-11 17:16:21.198  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：2ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            clockIn.count     from mr_health_plan plan              left join (select health.kn_id, count(clock.kn_health_plan_id) count                         from mr_health_plan health                                  left join mr_clock_in clock on health.kn_id = clock.kn_health_plan_id                             and clock.kn_clock_at >= '2023-05-11T00:00'                             and clock.kn_clock_at < '2023-05-12T00:00'                         where health.kn_patient_id = 0                           and health.is_del = false                         group by health.kn_id) clockIn on plan.kn_id = clockIn.kn_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T17:16:21.194024'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:16:21.194024')       and ((plan.kn_type = 'DRUG' and plan.is_used = true) or plan.kn_type != 'DRUG')       and plan.kn_display_time <= '2023-05-11T17:16:21.194024'  
2023-05-11 17:16:21.202  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000001) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:16:21.206  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:16:21.209  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:16:21.225  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and ((`mr_health_plan`.`kn_patient_id`) = (0)) 
2023-05-11 17:16:21.232  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：2ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000001) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:16:21.238  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:16:21.241  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:16:21.248  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and (`mr_health_plan`.`kn_id` in (10000001)) 
2023-05-11 17:16:21.253  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000001) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:16:21.255  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:16:21.257  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:16:21.297  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`kn_type` in ('HYPERTENSION_VISIT', 'HYPERTENSION_DRUG_PROGRAM')) and ((`mr_health_plan`.`is_del`) = (false))) and ((`mr_health_plan`.`kn_patient_id`) = (0)) 
2023-05-11 17:16:21.301  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_del` = true where 1 = 2 
2023-05-11 17:16:21.304  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:16:21.302187', 0, '2023-05-11T00:00', '每周三次', '2023-05-11T00:00', 1656589046593355776, '高血压随访', 0, '随访', 'HYPERTENSION_VISIT', '2023-05-11T17:16:21.302187', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.305  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656589046593355776) limit 1 
2023-05-11 17:16:21.307  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:21.306224', 0, 1, 1, 'SEQUENCE', 4, 'WEEKS', 1656589046593355776, 1656589046610132992) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:16:21.308  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589046610132992) limit 1 
2023-05-11 17:16:21.313  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, false, false, false, false, true, false, '2023-05-11T17:16:21.309802', 0, '2023-05-11T17:16:21.259089', 1656589046626910208, '药品1', 0, '剂量1', '17:16', 'HYPERTENSION_DRUG_PROGRAM', '2023-05-11T17:16:21.309802', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.315  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656589046626910208) limit 1 
2023-05-11 17:16:21.318  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, false, true, false, true, false, false, true, false, '2023-05-11T17:16:21.316765', 0, '2023-05-11T17:16:21.259350', 1656589046656270336, '药品2', 0, '剂量2', '17:16', 'HYPERTENSION_DRUG_PROGRAM', '2023-05-11T17:16:21.316765', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.319  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656589046656270336) limit 1 
2023-05-11 17:16:21.321  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and (`mr_health_plan`.`kn_id` in (1656589046593355776)) 
2023-05-11 17:16:21.323  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (1656589046593355776) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:16:21.324  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (1656589046593355776)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-08T00:00')) 
2023-05-11 17:16:21.327  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and (`mr_health_plan`.`kn_id` in (1656589046626910208, 1656589046656270336)) 
2023-05-11 17:16:21.335  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (1656589046626910208, 1656589046656270336) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:16:21.345  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 rollback:  
2023-05-11 17:16:21.346  INFO 6457 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@111c9be, testMethod = clockInTest@HealthPlanTest, testException = org.opentest4j.AssertionFailedError: expected: <药品1> but was: <高血压随访>, mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d57053ae, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:16:21.357  INFO 6457 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@1eec2dcb, testMethod = notifyTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d57053ae, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@2176d934]; rollback [true]
2023-05-11 17:16:21.360  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: delete from `mr_health_plan` 
2023-05-11 17:16:21.382  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:16:21.379709', 0, '2023-05-11T17:16:21.379709', 10000107, '药1', 0, '17:16', 'DRUG', '2023-05-11T17:16:21.379709', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.383  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000107) limit 1 
2023-05-11 17:16:21.388  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:16:21.385546', 0, '2023-05-11T17:16:21.385546', 10000108, '药1', 0, '17:17', 'DRUG', '2023-05-11T17:16:21.385546', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.390  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000108) limit 1 
2023-05-11 17:16:21.394  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:16:21.391936', 0, '2023-05-11T17:16:21.391936', 10000109, '药1', 0, '17:18', 'DRUG', '2023-05-11T17:16:21.391936', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.395  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000109) limit 1 
2023-05-11 17:16:21.404  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：4ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:16:21.397996', 0, '2023-05-11T17:16:21.397996', 10000109, '药1', 0, '17:19', 'DRUG', '2023-05-11T17:16:21.397996', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.405  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000109) limit 1 
2023-05-11 17:16:21.408  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:16:21.407035', 0, '2023-05-11T17:16:21.407035', 10000109, '药1', 0, '17:20', 'DRUG', '2023-05-11T17:16:21.407035', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.410  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000109) limit 1 
2023-05-11 17:16:21.413  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`kn_type` in ('HYPERTENSION_DRUG_PROGRAM')) and ((`mr_health_plan`.`is_del`) = (false))) and ((`mr_health_plan`.`kn_patient_id`) = (0)) 
2023-05-11 17:16:21.414  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_del` = true where 1 = 2 
2023-05-11 17:16:21.416  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:16:21.414487', 0, '2023-05-11T17:16:21.411242', 1656589047067312128, '药品1', 0, '剂量1', '17:16', 'HYPERTENSION_DRUG_PROGRAM', '2023-05-11T17:16:21.414487', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.418  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656589047067312128) limit 1 
2023-05-11 17:16:21.662  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (((((((`mr_health_plan`.`is_del`) = (false)) and ((`mr_health_plan`.`is_used`) = (true))) and (`mr_health_plan`.`kn_type` in ('DRUG', 'HYPERTENSION_DRUG_PROGRAM', 'DIABETES_DRUG_PROGRAM'))) and ((`mr_health_plan`.`kn_time`) >= ('17:16'))) and ((`mr_health_plan`.`kn_time`) <= ('17:16:59'))) and (`mr_health_plan`.`kn_patient_id` in (0))) and ((`mr_health_plan`.`is_thursday`) = (true)) 
2023-05-11 17:16:21.681  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：2ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:16:21.676982', 0, '2023-08-11T00:00', '2023-05-11T00:00', '三月一次', '2023-05-11T00:00', '', 10000101, '线下慢阻肺测试', 0, '线下随访开始时间,展示时间是今天', 'OFFLINE_COPD', '2023-05-11T17:16:21.676982', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.685  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000101) limit 1 
2023-05-11 17:16:21.687  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:21.685963', 0, 1, 1, 'SEQUENCE', 3, 'MONTHS', 10000101, 1656589048203968512) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:16:21.688  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589048203968512) limit 1 
2023-05-11 17:16:21.693  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:16:21.690135', 0, '2023-03-01T00:00', '三月一次', '2023-03-01T00:00', '', 10000102, '线下糖尿病测试', 0, '开始时间是三个月前, 结束时间应该是今天', 'OFFLINE_DIABETES', '2023-05-11T17:16:21.690135', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.695  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000102) limit 1 
2023-05-11 17:16:21.698  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:21.696979', 0, 1, 1, 'SEQUENCE', 3, 'MONTHS', 10000102, 1656589048250105856) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:16:21.700  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589048250105856) limit 1 
2023-05-11 17:16:21.731  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            plan.kn_display_time     from mr_health_plan plan     WHERE kn_patient_id in (0)       and plan.kn_type in ('OFFLINE_HYPERTENSION','OFFLINE_DIABETES','OFFLINE_ACUTE_CORONARY_DISEASE','OFFLINE_CEREBRAL_STROKE','OFFLINE_COPD')       and plan.is_used = true       and plan.is_del = false       AND plan.kn_cycle_start_time <= '2023-05-11T17:16:21.701602'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:16:21.701602')       and plan.kn_display_time <= '2023-05-11T17:16:21.701602'  
2023-05-11 17:16:21.737  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000101, 10000102) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:16:21.739  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000101)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-08-11T00:00')) 
2023-05-11 17:16:21.741  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000102)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-03-01T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-01T00:00')) 
2023-05-11 17:16:21.745  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            plan.kn_display_time     from mr_health_plan plan     WHERE kn_patient_id in (0)       and plan.kn_type in ('OFFLINE_HYPERTENSION','OFFLINE_DIABETES','OFFLINE_ACUTE_CORONARY_DISEASE','OFFLINE_CEREBRAL_STROKE','OFFLINE_COPD')       and plan.is_used = true       and plan.is_del = false       AND plan.kn_cycle_start_time <= '2023-05-11T17:16:21.743671'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:16:21.743671')       and plan.kn_display_time <= '2023-05-11T17:16:21.743671'  
2023-05-11 17:16:21.747  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000101, 10000102) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:16:21.750  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000101)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-08-11T00:00')) 
2023-05-11 17:16:21.752  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000102)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-03-01T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-01T00:00')) 
2023-05-11 17:16:21.756  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:16:21.754499', 0, '2023-08-11T00:00', '2023-05-11T00:00', '三月一次', '2023-05-11T00:00', '', 10000103, '线上慢阻肺测试', 0, '线上随访开始时间,展示时间是今天', 'ONLINE_COPD', '2023-05-11T17:16:21.754499', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.757  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000103) limit 1 
2023-05-11 17:16:21.759  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:21.758395', 0, 1, 1, 'SEQUENCE', 3, 'MONTHS', 10000103, 1656589048510152704) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:16:21.760  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589048510152704) limit 1 
2023-05-11 17:16:21.764  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:16:21.761953', 0, '2023-08-11T00:00', '2023-05-11T00:00', '三月一次', '2023-05-11T00:00', '', 10000104, '线上糖尿病测试', 0, '开始时间,展示时间是今天', 'ONLINE_DIABETES', '2023-05-11T17:16:21.761953', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.766  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000104) limit 1 
2023-05-11 17:16:21.768  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:21.766964', 0, 1, 1, 'SEQUENCE', 3, 'MONTHS', 10000104, 1656589048543707136) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:16:21.770  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589048543707136) limit 1 
2023-05-11 17:16:21.774  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            plan.kn_display_time     from mr_health_plan plan     WHERE kn_patient_id in (0)       and plan.kn_type in ('HYPERTENSION_VISIT','ONLINE_DIABETES','ONLINE_CEREBRAL_STROKE','CEREBRAL_STROKE','ONLINE_ACUTE_CORONARY_DISEASE','ONLINE_COPD','BEHAVIOR_VISIT','DIABETES_BEHAVIOR_VISIT','CEREBRAL_STROKE_BEHAVIOR_VISIT','ACUTE_CORONARY_DISEASE_BEHAVIOR_VISIT','COPD_BEHAVIOR_VISIT')       and plan.is_used = true       and plan.is_del = false       AND plan.kn_cycle_start_time <= '2023-05-11T17:16:21.771270'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:16:21.771270')       and plan.kn_display_time <= '2023-05-11T17:16:21.771270'  
2023-05-11 17:16:21.775  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000103, 10000104) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:16:21.777  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000103)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-08-11T00:00')) 
2023-05-11 17:16:21.778  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000104)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-08-11T00:00')) 
2023-05-11 17:16:21.786  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:16:21.780631', 0, '2023-08-11T00:00', '2023-05-11T00:00', '测测血压', '2023-05-11T00:00', '', 10000105, '测血压', 0, '开始时间,展示时间是今天', 'BLOOD_PRESSURE_MEASUREMENT', '2023-05-11T17:16:21.780631', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.788  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000105) limit 1 
2023-05-11 17:16:21.789  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:21.788671', 0, 1, 1, 'SEQUENCE', 1, 'WEEKS', 10000105, 1656589048635981824) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:16:21.791  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589048635981824) limit 1 
2023-05-11 17:16:21.793  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            plan.kn_display_time     from mr_health_plan plan     WHERE kn_patient_id in (0)       and plan.kn_type in ('BLOOD_PRESSURE_MEASUREMENT','FASTING_BLOOD_GLUCOSE','BEFORE_MEAL_BLOOD_GLUCOSE','MEAL_TWO_HOUR_RANDOM_BLOOD_GLUCOSE','PULSE_OXYGEN_SATURATION_PLAN')       and plan.is_used = true       and plan.is_del = false       AND plan.kn_cycle_start_time <= '2023-05-11T17:16:21.792019'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:16:21.792019')       and plan.kn_display_time <= '2023-05-11T17:16:21.792019'  
2023-05-11 17:16:21.795  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000105) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:16:21.797  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000105)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:16:21.803  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:16:21.800642', 0, '2023-08-11T00:00', '2023-05-11T00:00', '出院随访', '2023-05-11T00:00', '', 10000106, '护院随访', 0, '开始时间,展示时间是今天', 'LEAVE_HOSPITAL_VISIT', '2023-05-11T17:16:21.800642', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.804  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000106) limit 1 
2023-05-11 17:16:21.806  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:21.805496', 0, 1, 1, 'SEQUENCE', 1, 'WEEKS', 10000106, 1656589048707284992) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:16:21.808  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589048707284992) limit 1 
2023-05-11 17:16:21.812  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 rollback:  
2023-05-11 17:16:21.813  INFO 6457 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@1eec2dcb, testMethod = notifyTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d57053ae, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:16:21.818  INFO 6457 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@1c712e55, testMethod = idGetList@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d57053ae, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@2176d934]; rollback [true]
2023-05-11 17:16:21.822  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:16:21.820480', 0, '2023-05-12T00:00', '每周三次', '2023-05-12T00:00', 'HELLO', 10000100, '有氧运动', 0, '游泳', 'BEHAVIOR_VISIT', '2023-05-11T17:16:21.820480', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:21.824  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000100) limit 1 
2023-05-11 17:16:21.825  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:16:21.824750', 0, 3, 3, 'SEQUENCE', 1, 'WEEKS', 10000100, 1656589048786976768) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:16:21.827  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589048786976768) limit 1 
2023-05-11 17:16:21.829  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and (`mr_health_plan`.`kn_id` in (10000100)) 
2023-05-11 17:16:21.831  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000100) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:16:21.833  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000100)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-12T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-19T00:00')) 
2023-05-11 17:16:21.837  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 rollback:  
2023-05-11 17:16:21.837  INFO 6457 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@1c712e55, testMethod = idGetList@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d57053ae, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:16:21.842  INFO 6457 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@7593bb15, testMethod = listTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d57053ae, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@2176d934]; rollback [true]
2023-05-11 17:16:21.861  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000011, 0, '完成本周饮食计划', '白菜', '一年3月,一天两次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 3 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:16:21.862  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861000, 10000011, NULL, 1, 'YEARS', 3, 'MONTHS', 3, 0, NOW()) 
2023-05-11 17:16:21.864  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861001, 10000011, NULL, 1, 'YEARS', 5, 'DAYS', 5, 0, NOW()) 
2023-05-11 17:16:21.865  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100000, 10000011, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:16:21.867  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100001, 10000011, NULL, date_add(now(), interval 1 DAY), 0, date_add(now(), interval 1 DAY)) 
2023-05-11 17:16:21.868  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100002, 10000011, NULL, date_add(now(), interval 2 DAY), 0, date_add(now(), interval 2 DAY)) 
2023-05-11 17:16:21.869  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100003, 10000011, NULL, date_add(now(), interval 1 MONTH), 0, date_add(now(), interval 1 MONTH)) 
2023-05-11 17:16:21.870  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100004, 10000011, NULL, date_add(now(), interval 2 MONTH), 0, date_add(now(), interval 2 MONTH)) 
2023-05-11 17:16:21.871  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100005, 10000011, NULL, date_add(now(), interval 3 MONTH), 0, date_add(now(), interval 3 MONTH)) 
2023-05-11 17:16:21.872  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000012, 0, '完成本周饮食计划', '白菜', '一年3月,一天两次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 3 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:16:21.873  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861010, 10000012, NULL, 1, 'YEARS', 3, 'SEQUENCE', 3, 0, NOW()) 
2023-05-11 17:16:21.874  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861011, 10000012, NULL, 1, 'MONTHS', 5, 'SEQUENCE', 5, 0, NOW()) 
2023-05-11 17:16:21.875  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100010, 10000012, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:16:21.877  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100011, 10000012, NULL, date_add(now(), interval 2 SECOND), 0, date_add(now(), interval 2 SECOND)) 
2023-05-11 17:16:21.878  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100012, 10000012, NULL, date_add(now(), interval 3 SECOND), 0, date_add(now(), interval 3 SECOND)) 
2023-05-11 17:16:21.879  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100013, 10000012, NULL, date_add(now(), interval 1 DAY), 0, date_add(now(), interval 1 DAY)) 
2023-05-11 17:16:21.880  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100014, 10000012, NULL, date_add(now(), interval 2 DAY), 0, date_add(now(), interval 2 DAY)) 
2023-05-11 17:16:21.881  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100015, 10000012, NULL, date_add(now(), interval 3 DAY), 0, date_add(now(), interval 3 DAY)) 
2023-05-11 17:16:21.882  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000013, 0, '完成本周饮食计划', '白菜', '一年3月,一天两次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 3 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:16:21.883  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861020, 10000013, NULL, 1, 'MONTHS', 3, 'DAYS', 3, 0, NOW()) 
2023-05-11 17:16:21.884  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861021, 10000013, NULL, 1, 'WEEKS', 5, 'SEQUENCE', 5, 0, NOW()) 
2023-05-11 17:16:21.885  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100020, 10000013, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:16:21.886  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100021, 10000013, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:16:21.887  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100022, 10000013, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:16:21.888  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100023, 10000013, NULL, date_add(now(), interval 2 SECOND), 0, date_add(now(), interval 2 SECOND)) 
2023-05-11 17:16:21.889  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100024, 10000013, NULL, date_add(now(), interval 1 day), 0, date_add(now(), interval 1 day)) 
2023-05-11 17:16:21.890  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100025, 10000013, NULL, date_add(now(), interval 2 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:16:21.891  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000014, 0, '完成本周饮食计划', '白菜', '4周2周，1周3天', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 2 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:16:21.892  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220014000000001, 10000014, NULL, 4, 'WEEKS', 2, 'WEEKS', 4, 0, NOW()) 
2023-05-11 17:16:21.893  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220014000000002, 10000014, 1574220014000000001, 1, 'WEEKS', 3, 'DAYS', 3, 0, NOW()) 
2023-05-11 17:16:21.895  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220014000000003, 10000014, NULL, 3, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:16:21.896  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000001, 10000014, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:16:21.897  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000002, 10000014, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:16:21.899  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000003, 10000014, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:16:21.901  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000004, 10000014, NULL, date_add(now(), interval 1 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:16:21.902  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000005, 10000014, NULL, date_add(now(), interval 6 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:16:21.903  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000006, 10000014, NULL, date_add(now(), interval 7 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:16:21.904  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000007, 10000014, NULL, date_add(now(), interval 8 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:16:21.906  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000015, 0, '完成本周饮食计划', '菠菜', '一周7天,一天两次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 3 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:16:21.907  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861568, 10000015, NULL, 1, 'WEEKS', 4, 'DAYS', 4, 0, NOW()) 
2023-05-11 17:16:21.908  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861569, 10000015, 1574221477018861568, 1, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:16:21.909  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861570, 10000015, NULL, 1, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:16:21.910  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141030, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 1 SECOND)) 
2023-05-11 17:16:21.911  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141031, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 2 SECOND)) 
2023-05-11 17:16:21.912  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141032, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 3 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 3 SECOND)) 
2023-05-11 17:16:21.914  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141040, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:16:21.916  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141041, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:16:21.918  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141042, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 3 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 3 SECOND)) 
2023-05-11 17:16:21.919  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141050, 10000015, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:16:21.920  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141051, 10000015, NULL, date_add(now(), interval 2 SECOND), 0, date_add(now(), interval 2 SECOND)) 
2023-05-11 17:16:21.921  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141052, 10000015, NULL, date_add(now(), interval 3 SECOND), 0, date_add(now(), interval 3 SECOND)) 
2023-05-11 17:16:21.923  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141060, 10000015, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:16:21.924  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141061, 10000015, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:16:21.925  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141062, 10000015, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 3 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 3 SECOND)) 
2023-05-11 17:16:21.926  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000016, 0, '完成本周饮食计划', '白菜', '4周2周，1周3天', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 2 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:16:21.927  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000001, 10000016, NULL, 4, 'WEEKS', 4, 'WEEKS', 4, 0, NOW()) 
2023-05-11 17:16:21.928  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000002, 10000016, 1574220016000000001, 1, 'WEEKS', 2, 'DAYS', 3, 0, NOW()) 
2023-05-11 17:16:21.930  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000003, 10000016, 1574220016000000002, 1, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:16:21.933  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000004, 10000016, NULL, 2, 'WEEKS', 3, 'DAYS', 3, 0, NOW()) 
2023-05-11 17:16:21.934  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000005, 10000016, 1574220016000000004, 1, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:16:21.935  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000001, 10000016, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:16:21.938  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：2ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000002, 10000016, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:16:21.939  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000003, 10000016, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:16:21.940  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000004, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:16:21.941  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000104, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:16:21.943  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000005, 10000016, NULL, date_add(now(), interval 6 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:16:21.944  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000006, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 7 day), INTERVAL 1 SECOND), 0, date_add(date_add(NOW(),INTERVAL 7 day), INTERVAL 1 SECOND)) 
2023-05-11 17:16:21.945  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000007, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 7 day), INTERVAL 2 SECOND), 0, date_add(date_add(NOW(),INTERVAL 7 day), INTERVAL 2 SECOND)) 
2023-05-11 17:16:21.947  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000008, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 8 day), INTERVAL 1 SECOND), 0, date_add(date_add(NOW(),INTERVAL 8 day), INTERVAL 1 SECOND)) 
2023-05-11 17:16:21.949  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000009, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 8 day), INTERVAL 2 SECOND), 0, date_add(date_add(NOW(),INTERVAL 8 day), INTERVAL 2 SECOND)) 
2023-05-11 17:16:21.951  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000017, 0, '完成本周饮食计划', '白菜', '1天4次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 2 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:16:21.953  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220017000000001, 10000017, null, 1, 'DAYS', 3, 'SEQUENCE', 3, 0, NOW()) 
2023-05-11 17:16:21.954  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220017100000001, 10000017, NULL, DATE_ADD(CURDATE(), INTERVAL 9 HOUR), 0, now()) 
2023-05-11 17:16:21.955  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220017100000002, 10000017, NULL, DATE_ADD(CURDATE(), INTERVAL 9 HOUR), 0, now()) 
2023-05-11 17:16:21.956  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220017100000003, 10000017, NULL, DATE_ADD(CURDATE(), INTERVAL 9 HOUR), 0, now()) 
2023-05-11 17:16:21.961  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            clockIn.count     from mr_health_plan plan              left join (select health.kn_id, count(clock.kn_health_plan_id) count                         from mr_health_plan health                                  left join mr_clock_in clock on health.kn_id = clock.kn_health_plan_id                             and clock.kn_clock_at >= '2023-05-11T00:00'                             and clock.kn_clock_at < '2023-05-12T00:00'                         where health.kn_patient_id = 0                           and health.is_del = false                         group by health.kn_id) clockIn on plan.kn_id = clockIn.kn_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T17:16:21.958807'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:16:21.958807')       and ((plan.kn_type = 'DRUG' and plan.is_used = true) or plan.kn_type != 'DRUG')       and plan.kn_display_time <= '2023-05-11T17:16:21.958807'  
2023-05-11 17:16:21.966  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000011, 10000012, 10000013, 10000014, 10000015, 10000016, 10000017) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:16:21.968  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000011)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2024-05-08T00:00')) 
2023-05-11 17:16:21.971  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000011)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2024-05-08T00:00')) 
2023-05-11 17:16:21.974  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000012)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2024-05-08T00:00')) 
2023-05-11 17:16:21.976  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000012)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-08T00:00')) 
2023-05-11 17:16:21.978  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000013)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-08T00:00')) 
2023-05-11 17:16:21.979  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000013)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-15T00:00')) 
2023-05-11 17:16:21.981  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000014)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-09T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-06T00:00')) 
2023-05-11 17:16:21.982  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000014)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-09T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00')) 
2023-05-11 17:16:21.984  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000015)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-15T00:00')) 
2023-05-11 17:16:21.985  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000015)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00')) 
2023-05-11 17:16:21.987  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000016)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-09T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-06T00:00')) 
2023-05-11 17:16:21.988  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000016)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-09T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-23T00:00')) 
2023-05-11 17:16:21.990  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000017)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00')) 
2023-05-11 17:16:21.995  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:16:21 | 执行时间：1ms 
 rollback:  
2023-05-11 17:16:21.995  INFO 6457 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@7593bb15, testMethod = listTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d57053ae, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:16:22.006  INFO 6457 --- [Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.bjknrt.medication.remind.api.MedicationRemindTest], using SpringBootContextLoader
2023-05-11 17:16:22.007  INFO 6457 --- [Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.bjknrt.medication.remind.api.MedicationRemindTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2023-05-11 17:16:22.007  INFO 6457 --- [Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.bjknrt.medication.remind.api.MedicationRemindTest]: MedicationRemindTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-05-11 17:16:22.008  INFO 6457 --- [Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.bjknrt.medication.remind.MedicationRemindServerApplication for test class com.bjknrt.medication.remind.api.MedicationRemindTest
2023-05-11 17:16:22.010  INFO 6457 --- [Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2023-05-11 17:16:22.010  INFO 6457 --- [Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@8b64a15, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@54584f9, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2823a822, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@497d0f58, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@73210280, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5a6a3251, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6fbdf386, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4e1b36e6, org.springframework.test.context.event.EventPublishingTestExecutionListener@35d518a7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3ea65cf6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3e07a967, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@29bc0447, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@343131f7, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@38fc8a6b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3bb35082]
2023-05-11 17:16:27.078  INFO 6457 --- [Test worker] c.b.m.remind.api.MedicationRemindTest    : Starting MedicationRemindTest using Java 17.0.6 on wanghehuideMacBookPro.local with PID 6457 (started by wanghehui in /Users/wanghehui/projects/java/hmp-be/medication-remind/medication-remind-server)
2023-05-11 17:16:27.079 DEBUG 6457 --- [Test worker] c.b.m.remind.api.MedicationRemindTest    : Running with Spring Boot v2.6.8, Spring v5.3.21
2023-05-11 17:16:27.079  INFO 6457 --- [Test worker] c.b.m.remind.api.MedicationRemindTest    : The following 1 profile is active: "dev-local"
2023-05-11 17:16:27.468  INFO 6457 --- [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d251075e-2bf1-3341-9e51-4ff0d5f888ac
2023-05-11 17:16:27.578  INFO 6457 --- [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2023-05-11 17:16:27.579  INFO 6457 --- [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-05-11 17:16:27.579  INFO 6457 --- [Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.63]
2023-05-11 17:16:27.604  INFO 6457 --- [Test worker] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2023-05-11 17:16:27.604  INFO 6457 --- [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 523 ms
2023-05-11 17:16:27.788  INFO 6457 --- [Test worker] com.bjknrt.framework.test.DbTestConfig   : 使用数据库次数：2，连接信息：jdbc:p6spy:mysql://localhost:3306/test_hgrezcrn
2023-05-11 17:16:27.806  INFO 6457 --- [Test worker] o.s.c.openfeign.FeignClientFactoryBean   : For 'user-permission-centre-server' URL not provided. Will try picking an instance via load-balancing.
2023-05-11 17:16:27.879 DEBUG 6457 --- [Test worker] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, jwtAuthenticationFilter urls=[/*] order=2147483647
2023-05-11 17:16:27.880 DEBUG 6457 --- [Test worker] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/]
2023-05-11 17:16:27.881 DEBUG 6457 --- [Test worker] c.b.security.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2023-05-11 17:16:27.952  INFO 6457 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2023-05-11 17:16:27.965  INFO 6457 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2023-05-11 17:16:27.965  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 准备将数据库(com.bjknrt.medication.remind)迁移到 10 版本
2023-05-11 17:16:27.967  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：20 | 当前时间：2023-05-11 17:16:27 | 执行时间：1ms 
 statement: create table if not exists _sqlex_version_(package text not null, version int not null, can_migrate bool not null) 
2023-05-11 17:16:27.981  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:27 | 执行时间：3ms 
 statement: lock tables _sqlex_version_ write 
2023-05-11 17:16:27.982  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 获取到全局锁,准备开始迁移
2023-05-11 17:16:27.983  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:27 | 执行时间：0ms 
 statement: select * from _sqlex_version_ where package='com.bjknrt.medication.remind' 
2023-05-11 17:16:27.983  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 数据库当前版本已经是 10,无需迁移
2023-05-11 17:16:27.984  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:27 | 执行时间：0ms 
 commit:  
2023-05-11 17:16:27.984  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:27 | 执行时间：0ms 
 statement: unlock tables 
2023-05-11 17:16:27.984  INFO 6457 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 数据库(com.bjknrt.medication.remind)版本迁移完成,释放全局锁
2023-05-11 17:16:27.985  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:27 | 执行时间：0ms 
 rollback:  
2023-05-11 17:16:27.985  INFO 6457 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 准备比对数据库结构一致性
2023-05-11 17:16:27.986  INFO 6457 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 获取SqlEx Repository(com.bjknrt.medication.remind)定义结构
2023-05-11 17:16:27.986  INFO 6457 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 获取目标数据库结构
2023-05-11 17:16:28.032  INFO 6457 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 计算结构差异
2023-05-11 17:16:28.032  INFO 6457 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 结构一致性比对完成,无差异
2023-05-11 17:16:28.055  INFO 6457 --- [Test worker] o.s.c.openfeign.FeignClientFactoryBean   : For 'article-service-server' URL not provided. Will try picking an instance via load-balancing.
2023-05-11 17:16:28.096  INFO 6457 --- [Test worker] o.s.c.openfeign.FeignClientFactoryBean   : For 'wechat-service-server' URL not provided. Will try picking an instance via load-balancing.
2023-05-11 17:16:28.206 DEBUG 6457 --- [Test worker] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 2 ResponseBodyAdvice
2023-05-11 17:16:28.233 DEBUG 6457 --- [Test worker] s.w.s.m.m.a.RequestMappingHandlerMapping : 24 mappings in 'requestMappingHandlerMapping'
2023-05-11 17:16:28.324 DEBUG 6457 --- [Test worker] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-05-11 17:16:28.337 DEBUG 6457 --- [Test worker] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 2 ResponseBodyAdvice
2023-05-11 17:16:28.473  INFO 6457 --- [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@56fae55c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@303d3936, org.springframework.security.web.context.SecurityContextPersistenceFilter@7d06a187, org.springframework.security.web.header.HeaderWriterFilter@2fd78fb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1310a3a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68628047, com.bjknrt.security.JwtAuthenticationFilter@675fd2a9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12997ff6, org.springframework.security.web.session.SessionManagementFilter@5cecbd49, org.springframework.security.web.access.ExceptionTranslationFilter@5b34efe2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6cea94e0]
2023-05-11 17:16:28.732  INFO 6457 --- [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2023-05-11 17:16:28.788  INFO 6457 --- [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 55336 (http) with context path ''
2023-05-11 17:16:28.800  INFO 6457 --- [Test worker] c.b.m.remind.api.MedicationRemindTest    : Started MedicationRemindTest in 6.788 seconds (JVM running for 23.085)
2023-05-11 17:16:28.813  INFO 6457 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3c41d4e8 testClass = MedicationRemindTest, testInstance = com.bjknrt.medication.remind.api.MedicationRemindTest@ff62694, testMethod = interfaceTest@MedicationRemindTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@62060f8e testClass = MedicationRemindTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@117639a6 key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@232259f4]; rollback [true]
2023-05-11 17:16:28.857  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：4ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, false, false, false, true, false, false, true, false, '2023-05-11T17:16:28.850420', 100000, '2023-05-11T17:16:28.850420', 1656589078251962368, '阿莫西林', 100000, '17:16', 'DRUG', '2023-05-11T17:16:28.850420', 100000) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:28.858  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656589078251962368) limit 1 
2023-05-11 17:16:28.862  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (((`mr_health_plan`.`is_del`) = (false)) and ((`mr_health_plan`.`kn_patient_id`) = (100000))) and ((`mr_health_plan`.`kn_type`) = ('DRUG')) 
2023-05-11 17:16:28.874  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, false, false, false, true, false, false, true, false, '2023-05-11T17:16:28.871940', 100000, '2023-05-11T17:16:28.871940', 1, '阿莫西林', 100000, '17:16', 'DRUG', '2023-05-11T17:16:28.871940', 100000) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:28.876  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1) limit 1 
2023-05-11 17:16:28.881  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1) limit 1 
2023-05-11 17:16:28.885  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：1ms 
 statement: update `mr_health_plan` set  `is_used` = false where (`mr_health_plan`.`kn_id`) = (1) 
2023-05-11 17:16:28.895  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_used` = true where `mr_health_plan`.`kn_id` in (1) 
2023-05-11 17:16:28.896  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1) limit 1 
2023-05-11 17:16:28.898  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_del` = true where (`mr_health_plan`.`kn_id`) = (1) 
2023-05-11 17:16:28.904  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：3ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, false, false, false, true, false, false, true, false, '2023-05-11T17:16:28.899459', 100000, '2023-05-11T17:16:28.899459', 111, '阿莫西林', 100000, '17:16', 'DRUG', '2023-05-11T17:16:28.899459', 100000) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:16:28.906  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (111) limit 1 
2023-05-11 17:16:28.914  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (((`mr_health_plan`.`kn_type`) = ('DRUG')) and ((`mr_health_plan`.`is_del`) = (false))) and ((`mr_health_plan`.`kn_patient_id`) = (100000)) 
2023-05-11 17:16:28.916  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_del` = true where `mr_health_plan`.`kn_id` in (111, 1656589078251962368) 
2023-05-11 17:16:28.920  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：2ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (111) limit 1 
2023-05-11 17:16:28.927  INFO 6457 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:16:28 | 执行时间：1ms 
 rollback:  
2023-05-11 17:16:28.928  INFO 6457 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@3c41d4e8 testClass = MedicationRemindTest, testInstance = com.bjknrt.medication.remind.api.MedicationRemindTest@ff62694, testMethod = interfaceTest@MedicationRemindTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@62060f8e testClass = MedicationRemindTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@117639a6 key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:16:29.043  INFO 6457 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2023-05-11 17:16:29.049  INFO 6457 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2023-05-11 17:16:29.049  INFO 6457 --- [SpringApplicationShutdownHook] com.bjknrt.framework.test.DbTestConfig   : 销毁计数，数据库test_hgrezcrn,次数：1
2023-05-11 17:16:29.061  INFO 6457 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown initiated...
2023-05-11 17:16:29.065  INFO 6457 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown completed.
2023-05-11 17:16:29.128  INFO 6457 --- [SpringApplicationShutdownHook] p6spy                                    : 
连接ID：2 | 当前时间：2023-05-11 17:16:29 | 执行时间：62ms 
 statement: DROP DATABASE test_hgrezcrn 
2023-05-11 17:16:29.128  INFO 6457 --- [SpringApplicationShutdownHook] com.bjknrt.framework.test.DbTestConfig   : 销毁数据库test_hgrezcrn,次数：1
2023-05-11 17:19:45.586  INFO 6686 --- [Test worker] c.b.m.remind.api.HealthPlanTest          : Starting HealthPlanTest using Java 17.0.6 on wanghehuideMacBookPro.local with PID 6686 (started by wanghehui in /Users/wanghehui/projects/java/hmp-be/medication-remind/medication-remind-server)
2023-05-11 17:19:45.588 DEBUG 6686 --- [Test worker] c.b.m.remind.api.HealthPlanTest          : Running with Spring Boot v2.6.8, Spring v5.3.21
2023-05-11 17:19:45.588  INFO 6686 --- [Test worker] c.b.m.remind.api.HealthPlanTest          : The following 1 profile is active: "dev-local"
2023-05-11 17:19:47.202  INFO 6686 --- [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d251075e-2bf1-3341-9e51-4ff0d5f888ac
2023-05-11 17:19:48.474  INFO 6686 --- [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2023-05-11 17:19:48.486  INFO 6686 --- [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-05-11 17:19:48.487  INFO 6686 --- [Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.63]
2023-05-11 17:19:48.645  INFO 6686 --- [Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-05-11 17:19:48.645  INFO 6686 --- [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2842 ms
2023-05-11 17:19:49.041  INFO 6686 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-05-11 17:19:49.434  INFO 6686 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-05-11 17:19:49.479  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：1 | 当前时间：2023-05-11 17:19:49 | 执行时间：15ms 
 statement: SHOW DATABASES LIKE 'test_mlhyqppe' 
2023-05-11 17:19:49.486  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：1 | 当前时间：2023-05-11 17:19:49 | 执行时间：3ms 
 statement: CREATE DATABASE IF NOT EXISTS test_mlhyqppe 
2023-05-11 17:19:49.487  INFO 6686 --- [Test worker] c.b.f.test.DbTestConfig$Companion        : 创建数据库，连接信息：jdbc:p6spy:mysql://localhost:3306/test_mlhyqppe
2023-05-11 17:19:49.488  INFO 6686 --- [Test worker] com.bjknrt.framework.test.DbTestConfig   : 使用数据库次数：1，连接信息：jdbc:p6spy:mysql://localhost:3306/test_mlhyqppe
2023-05-11 17:19:49.536  INFO 6686 --- [Test worker] o.s.c.openfeign.FeignClientFactoryBean   : For 'user-permission-centre-server' URL not provided. Will try picking an instance via load-balancing.
2023-05-11 17:19:49.684 DEBUG 6686 --- [Test worker] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, jwtAuthenticationFilter urls=[/*] order=2147483647
2023-05-11 17:19:49.684 DEBUG 6686 --- [Test worker] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/]
2023-05-11 17:19:49.711 DEBUG 6686 --- [Test worker] c.b.security.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2023-05-11 17:19:49.933  INFO 6686 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2023-05-11 17:19:49.949  INFO 6686 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2023-05-11 17:19:49.962  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 准备将数据库(com.bjknrt.medication.remind)迁移到 10 版本
2023-05-11 17:19:50.411  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：10 | 当前时间：2023-05-11 17:19:50 | 执行时间：19ms 
 statement: create table if not exists _sqlex_version_(package text not null, version int not null, can_migrate bool not null) 
2023-05-11 17:19:50.418  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：4ms 
 statement: lock tables _sqlex_version_ write 
2023-05-11 17:19:50.419  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 获取到全局锁,准备开始迁移
2023-05-11 17:19:50.521  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：1ms 
 statement: select * from _sqlex_version_ where package='com.bjknrt.medication.remind' 
2023-05-11 17:19:50.553  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 statement: insert into _sqlex_version_ values('com.bjknrt.medication.remind', -1, true) 
2023-05-11 17:19:50.554  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 当前数据库版本 -1, 版本差异 11
2023-05-11 17:19:50.565  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：1ms 
 statement: update _sqlex_version_ set can_migrate=false where package='com.bjknrt.medication.remind' 
2023-05-11 17:19:50.565  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 0 版本的迁移任务
2023-05-11 17:19:50.566  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE IF NOT EXISTS `undo_log` (`branch_id` BIGINT NOT NULL COMMENT 'branch transaction id',`xid` VARCHAR(128) NOT NULL COMMENT 'global transaction id',`context` VARCHAR(128) NOT NULL COMMENT 'undo_log context,such as serialization',`rollback_info` LONGBLOB NOT NULL COMMENT 'rollback info',`log_status` INT(11) NOT NULL COMMENT '0:normal status,1:defense status',`log_created` DATETIME(6) NOT NULL COMMENT 'create datetime',`log_modified` DATETIME(6) NOT NULL COMMENT 'modify datetime',UNIQUE `ux_undo_log`(`xid`, `branch_id`)) ENGINE = InnoDB AUTO_INCREMENT = 1 DEFAULT CHARACTER SET = UTF8MB4 COMMENT = 'AT transaction mode undo table'
2023-05-11 17:19:50.583  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：16ms 
 statement: CREATE TABLE IF NOT EXISTS `undo_log` (`branch_id` BIGINT NOT NULL COMMENT 'branch transaction id',`xid` VARCHAR(128) NOT NULL COMMENT 'global transaction id',`context` VARCHAR(128) NOT NULL COMMENT 'undo_log context,such as serialization',`rollback_info` LONGBLOB NOT NULL COMMENT 'rollback info',`log_status` INT(11) NOT NULL COMMENT '0:normal status,1:defense status',`log_created` DATETIME(6) NOT NULL COMMENT 'create datetime',`log_modified` DATETIME(6) NOT NULL COMMENT 'modify datetime',UNIQUE `ux_undo_log`(`xid`, `branch_id`)) ENGINE = InnoDB AUTO_INCREMENT = 1 DEFAULT CHARACTER SET = UTF8MB4 COMMENT = 'AT transaction mode undo table' 
2023-05-11 17:19:50.587  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：1ms 
 statement: update _sqlex_version_ set version=0 where package='com.bjknrt.medication.remind' 
2023-05-11 17:19:50.587  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 0 版本迁移成功
2023-05-11 17:19:50.587  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 1 版本的迁移任务
2023-05-11 17:19:50.588  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE `mr_medication_remind` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_patient_id` BIGINT UNSIGNED NOT NULL COMMENT '患者id',`kn_drug_name` VARCHAR(255) NOT NULL DEFAULT _UTF8MB4'' COMMENT '药品名称',`kn_time` TIME NOT NULL COMMENT '时间',`kn_monday` TINYINT NOT NULL DEFAULT 0 COMMENT '周一,1:选中,0未选中',`kn_tuesday` TINYINT NOT NULL DEFAULT 0 COMMENT '周二,1:选中,0未选中',`kn_wednesday` TINYINT NOT NULL DEFAULT 0 COMMENT '周三,1:选中,0未选中',`kn_thursday` TINYINT NOT NULL DEFAULT 0 COMMENT '周四,1:选中,0未选中',`kn_friday` TINYINT NOT NULL DEFAULT 0 COMMENT '周五,1:选中,0未选中',`kn_saturday` TINYINT NOT NULL DEFAULT 0 COMMENT '周六,1:选中,0未选中',`kn_sunday` TINYINT NOT NULL DEFAULT 0 COMMENT '周日,1:选中,0未选中',`kn_status` TINYINT NOT NULL DEFAULT 1 COMMENT '状态, 1可用,0不可用',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',`kn_updated_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '修改人id',`kn_updated_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3) COMMENT '修改时间',INDEX `index_wek`(`kn_monday`, `kn_tuesday`, `kn_wednesday`, `kn_thursday`, `kn_friday`, `kn_saturday`, `kn_sunday`),INDEX `index_time`(`kn_time`)) ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '定时用药表'
2023-05-11 17:19:50.611  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：22ms 
 statement: CREATE TABLE `mr_medication_remind` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_patient_id` BIGINT UNSIGNED NOT NULL COMMENT '患者id',`kn_drug_name` VARCHAR(255) NOT NULL DEFAULT _UTF8MB4'' COMMENT '药品名称',`kn_time` TIME NOT NULL COMMENT '时间',`kn_monday` TINYINT NOT NULL DEFAULT 0 COMMENT '周一,1:选中,0未选中',`kn_tuesday` TINYINT NOT NULL DEFAULT 0 COMMENT '周二,1:选中,0未选中',`kn_wednesday` TINYINT NOT NULL DEFAULT 0 COMMENT '周三,1:选中,0未选中',`kn_thursday` TINYINT NOT NULL DEFAULT 0 COMMENT '周四,1:选中,0未选中',`kn_friday` TINYINT NOT NULL DEFAULT 0 COMMENT '周五,1:选中,0未选中',`kn_saturday` TINYINT NOT NULL DEFAULT 0 COMMENT '周六,1:选中,0未选中',`kn_sunday` TINYINT NOT NULL DEFAULT 0 COMMENT '周日,1:选中,0未选中',`kn_status` TINYINT NOT NULL DEFAULT 1 COMMENT '状态, 1可用,0不可用',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',`kn_updated_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '修改人id',`kn_updated_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3) COMMENT '修改时间',INDEX `index_wek`(`kn_monday`, `kn_tuesday`, `kn_wednesday`, `kn_thursday`, `kn_friday`, `kn_saturday`, `kn_sunday`),INDEX `index_time`(`kn_time`)) ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '定时用药表' 
2023-05-11 17:19:50.613  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=1 where package='com.bjknrt.medication.remind' 
2023-05-11 17:19:50.614  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 1 版本迁移成功
2023-05-11 17:19:50.614  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 2 版本的迁移任务
2023-05-11 17:19:50.614  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE `mr_health_plan` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_patient_id` BIGINT UNSIGNED NOT NULL COMMENT '患者id',`kn_name` VARCHAR(255) NOT NULL DEFAULT _UTF8MB4'' COMMENT '计划名称',`kn_sub_name` VARCHAR(255) NULL DEFAULT _UTF8MB4'' COMMENT '计划名称-标题',`kn_desc` VARCHAR(255) NULL DEFAULT _UTF8MB4'' COMMENT '计划描述',`kn_type` VARCHAR(200) NOT NULL COMMENT '类型: BEHAVIOR_VISIT: 行为习惯随访,DRUG: 药品,HYPERTENSION_VISIT: 高血压随访,EXERCISE_PROGRAM: 运动方案,BLOOD_PRESSURE_MEASUREMENT: 测血压',`kn_time` TIME NULL DEFAULT NULL COMMENT '时间',`is_monday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周一,true:选中,false:未选中',`is_tuesday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周二,true:选中,false:未选中',`is_wednesday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周三,true:选中,false:未选中',`is_thursday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周四,true:选中,false:未选中',`is_friday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周五,true:选中,false:未选中',`is_saturday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周六,true:选中,false:未选中',`is_sunday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周日,true:选中,false:未选中',`kn_cycle_start_time` DATETIME(3) NULL DEFAULT NULL COMMENT '周期开始时间',`kn_cycle_end_time` DATETIME(3) NULL DEFAULT NULL COMMENT '周期结束时间',`is_used` TINYINT(1) NOT NULL DEFAULT TRUE COMMENT '状态, true:可用,false: 不可用',`is_del` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '是否删除: true: 删除, false: 未删除',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',`kn_updated_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '修改人id',`kn_updated_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3) COMMENT '修改时间',INDEX `index_time`(`kn_time`)) ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划表'
2023-05-11 17:19:50.650  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：33ms 
 statement: CREATE TABLE `mr_health_plan` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_patient_id` BIGINT UNSIGNED NOT NULL COMMENT '患者id',`kn_name` VARCHAR(255) NOT NULL DEFAULT _UTF8MB4'' COMMENT '计划名称',`kn_sub_name` VARCHAR(255) NULL DEFAULT _UTF8MB4'' COMMENT '计划名称-标题',`kn_desc` VARCHAR(255) NULL DEFAULT _UTF8MB4'' COMMENT '计划描述',`kn_type` VARCHAR(200) NOT NULL COMMENT '类型: BEHAVIOR_VISIT: 行为习惯随访,DRUG: 药品,HYPERTENSION_VISIT: 高血压随访,EXERCISE_PROGRAM: 运动方案,BLOOD_PRESSURE_MEASUREMENT: 测血压',`kn_time` TIME NULL DEFAULT NULL COMMENT '时间',`is_monday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周一,true:选中,false:未选中',`is_tuesday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周二,true:选中,false:未选中',`is_wednesday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周三,true:选中,false:未选中',`is_thursday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周四,true:选中,false:未选中',`is_friday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周五,true:选中,false:未选中',`is_saturday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周六,true:选中,false:未选中',`is_sunday` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '周日,true:选中,false:未选中',`kn_cycle_start_time` DATETIME(3) NULL DEFAULT NULL COMMENT '周期开始时间',`kn_cycle_end_time` DATETIME(3) NULL DEFAULT NULL COMMENT '周期结束时间',`is_used` TINYINT(1) NOT NULL DEFAULT TRUE COMMENT '状态, true:可用,false: 不可用',`is_del` TINYINT(1) NOT NULL DEFAULT FALSE COMMENT '是否删除: true: 删除, false: 未删除',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间',`kn_updated_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '修改人id',`kn_updated_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3) COMMENT '修改时间',INDEX `index_time`(`kn_time`)) ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划表' 
2023-05-11 17:19:50.651  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE `mr_frequency` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_health_plan_id` BIGINT UNSIGNED NOT NULL COMMENT '主表',`kn_explain_id` BIGINT UNSIGNED NULL DEFAULT NULL COMMENT '上级',`kn_frequency_time` INT NULL DEFAULT NULL COMMENT '频次时间',`kn_frequency_time_unit` VARCHAR(30) NULL DEFAULT NULL COMMENT '频次时间单位',`kn_frequency_num` INT NULL DEFAULT NULL COMMENT '频次的数量',`kn_frequency_num_unit` VARCHAR(30) NULL DEFAULT NULL COMMENT '频次数量单位',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间') ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划打卡频率表'
2023-05-11 17:19:50.682  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：28ms 
 statement: CREATE TABLE `mr_frequency` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_health_plan_id` BIGINT UNSIGNED NOT NULL COMMENT '主表',`kn_explain_id` BIGINT UNSIGNED NULL DEFAULT NULL COMMENT '上级',`kn_frequency_time` INT NULL DEFAULT NULL COMMENT '频次时间',`kn_frequency_time_unit` VARCHAR(30) NULL DEFAULT NULL COMMENT '频次时间单位',`kn_frequency_num` INT NULL DEFAULT NULL COMMENT '频次的数量',`kn_frequency_num_unit` VARCHAR(30) NULL DEFAULT NULL COMMENT '频次数量单位',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间') ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划打卡频率表' 
2023-05-11 17:19:50.683  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	CREATE TABLE `mr_clock_in` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_health_plan_id` BIGINT UNSIGNED NOT NULL COMMENT '主表',`kn_time` TIME NULL DEFAULT NULL COMMENT '时间',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间') ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划打卡流水表'
2023-05-11 17:19:50.703  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：19ms 
 statement: CREATE TABLE `mr_clock_in` (`kn_id` BIGINT UNSIGNED NOT NULL PRIMARY KEY COMMENT '唯一主键',`kn_health_plan_id` BIGINT UNSIGNED NOT NULL COMMENT '主表',`kn_time` TIME NULL DEFAULT NULL COMMENT '时间',`kn_created_by` BIGINT UNSIGNED DEFAULT NULL COMMENT '创建人id',`kn_created_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '创建时间') ENGINE = InnoDB DEFAULT CHARACTER SET = UTF8MB4 DEFAULT COLLATE = UTF8MB4_GENERAL_CI COMMENT = '健康计划打卡流水表' 
2023-05-11 17:19:50.705  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=2 where package='com.bjknrt.medication.remind' 
2023-05-11 17:19:50.706  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 2 版本迁移成功
2023-05-11 17:19:50.706  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 3 版本的迁移任务
2023-05-11 17:19:50.707  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` ADD COLUMN `external_key` VARCHAR(128) COLLATE utf8mb4_general_ci NULL COMMENT '扩展字段' AFTER `kn_updated_at`
2023-05-11 17:19:50.735  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：27ms 
 statement: ALTER TABLE `mr_health_plan` ADD COLUMN `external_key` VARCHAR(128) COLLATE utf8mb4_general_ci NULL COMMENT '扩展字段' AFTER `kn_updated_at` 
2023-05-11 17:19:50.737  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=3 where package='com.bjknrt.medication.remind' 
2023-05-11 17:19:50.737  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 3 版本迁移成功
2023-05-11 17:19:50.737  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 4 版本的迁移任务
2023-05-11 17:19:50.738  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` ADD COLUMN `kn_display_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '显示时间: 时间之后的显示' AFTER `kn_updated_at`
2023-05-11 17:19:50.756  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：17ms 
 statement: ALTER TABLE `mr_health_plan` ADD COLUMN `kn_display_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '显示时间: 时间之后的显示' AFTER `kn_updated_at` 
2023-05-11 17:19:50.756  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_health_plan` SET `kn_display_time`=IFNULL(`kn_cycle_start_time`, `kn_created_at`)
2023-05-11 17:19:50.757  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 statement: UPDATE `mr_health_plan` SET `kn_display_time`=IFNULL(`kn_cycle_start_time`, `kn_created_at`) 
2023-05-11 17:19:50.759  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=4 where package='com.bjknrt.medication.remind' 
2023-05-11 17:19:50.759  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 4 版本迁移成功
2023-05-11 17:19:50.759  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 5 版本的迁移任务
2023-05-11 17:19:50.760  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_clock_in` ADD COLUMN `kn_clock_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '打卡时间' AFTER `kn_time`
2023-05-11 17:19:50.785  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：24ms 
 statement: ALTER TABLE `mr_clock_in` ADD COLUMN `kn_clock_at` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '打卡时间' AFTER `kn_time` 
2023-05-11 17:19:50.785  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_clock_in` SET `kn_clock_at`=`kn_created_at` WHERE `kn_created_at`<NOW()
2023-05-11 17:19:50.788  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：2ms 
 statement: UPDATE `mr_clock_in` SET `kn_clock_at`=`kn_created_at` WHERE `kn_created_at`<NOW() 
2023-05-11 17:19:50.792  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：1ms 
 statement: update _sqlex_version_ set version=5 where package='com.bjknrt.medication.remind' 
2023-05-11 17:19:50.793  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 5 版本迁移成功
2023-05-11 17:19:50.793  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 6 版本的迁移任务
2023-05-11 17:19:50.793  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_frequency` MODIFY COLUMN `kn_frequency_time` INT NOT NULL COMMENT '频次时间' AFTER `kn_explain_id`, MODIFY COLUMN `kn_frequency_time_unit` VARCHAR(30) CHARACTER SET UTF8MB4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '频次时间单位' AFTER `kn_frequency_time`, MODIFY COLUMN `kn_frequency_num` INT NOT NULL COMMENT '达标频次数量' AFTER `kn_frequency_time_unit`, MODIFY COLUMN `kn_frequency_num_unit` VARCHAR(30) CHARACTER SET UTF8MB4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '频次数量单位' AFTER `kn_frequency_num`, ADD COLUMN `kn_frequency_max_num` INT NOT NULL COMMENT '最大完成频次数量' AFTER `kn_frequency_num_unit`
2023-05-11 17:19:50.833  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：38ms 
 statement: ALTER TABLE `mr_frequency` MODIFY COLUMN `kn_frequency_time` INT NOT NULL COMMENT '频次时间' AFTER `kn_explain_id`, MODIFY COLUMN `kn_frequency_time_unit` VARCHAR(30) CHARACTER SET UTF8MB4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '频次时间单位' AFTER `kn_frequency_time`, MODIFY COLUMN `kn_frequency_num` INT NOT NULL COMMENT '达标频次数量' AFTER `kn_frequency_time_unit`, MODIFY COLUMN `kn_frequency_num_unit` VARCHAR(30) CHARACTER SET UTF8MB4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '频次数量单位' AFTER `kn_frequency_num`, ADD COLUMN `kn_frequency_max_num` INT NOT NULL COMMENT '最大完成频次数量' AFTER `kn_frequency_num_unit` 
2023-05-11 17:19:50.834  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_frequency` SET `kn_frequency_max_num`=IF(`kn_frequency_time_unit`=`kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_num`)
2023-05-11 17:19:50.835  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 statement: UPDATE `mr_frequency` SET `kn_frequency_max_num`=IF(`kn_frequency_time_unit`=`kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_num`) 
2023-05-11 17:19:50.837  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=6 where package='com.bjknrt.medication.remind' 
2023-05-11 17:19:50.837  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 6 版本迁移成功
2023-05-11 17:19:50.838  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 7 版本的迁移任务
2023-05-11 17:19:50.838  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` ADD COLUMN `kn_group` VARCHAR(64) NULL COMMENT '分组' AFTER `external_key`
2023-05-11 17:19:50.870  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：31ms 
 statement: ALTER TABLE `mr_health_plan` ADD COLUMN `kn_group` VARCHAR(64) NULL COMMENT '分组' AFTER `external_key` 
2023-05-11 17:19:50.871  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=7 where package='com.bjknrt.medication.remind' 
2023-05-11 17:19:50.872  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 7 版本迁移成功
2023-05-11 17:19:50.872  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 8 版本的迁移任务
2023-05-11 17:19:50.872  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` ADD COLUMN `is_clock_display` TINYINT(1) NOT NULL DEFAULT TRUE COMMENT '打卡完成后是否显示' AFTER `kn_group`
2023-05-11 17:19:50.918  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：44ms 
 statement: ALTER TABLE `mr_health_plan` ADD COLUMN `is_clock_display` TINYINT(1) NOT NULL DEFAULT TRUE COMMENT '打卡完成后是否显示' AFTER `kn_group` 
2023-05-11 17:19:50.918  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_health_plan` SET `is_clock_display`=FALSE WHERE `kn_type` IN (_UTF8MB4'OFFLINE_HYPERTENSION',_UTF8MB4'OFFLINE_DIABETES',_UTF8MB4'OFFLINE_ACUTE_CORONARY_DISEASE',_UTF8MB4'OFFLINE_CEREBRAL_STROKE',_UTF8MB4'OFFLINE_COPD',_UTF8MB4'EXERCISE_PROGRAM_ADJUSTMENT_REMIND')
2023-05-11 17:19:50.920  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：1ms 
 statement: UPDATE `mr_health_plan` SET `is_clock_display`=FALSE WHERE `kn_type` IN (_UTF8MB4'OFFLINE_HYPERTENSION',_UTF8MB4'OFFLINE_DIABETES',_UTF8MB4'OFFLINE_ACUTE_CORONARY_DISEASE',_UTF8MB4'OFFLINE_CEREBRAL_STROKE',_UTF8MB4'OFFLINE_COPD',_UTF8MB4'EXERCISE_PROGRAM_ADJUSTMENT_REMIND') 
2023-05-11 17:19:50.922  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=8 where package='com.bjknrt.medication.remind' 
2023-05-11 17:19:50.923  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 8 版本迁移成功
2023-05-11 17:19:50.923  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 9 版本的迁移任务
2023-05-11 17:19:50.923  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	DROP TABLE `mr_medication_remind`
2023-05-11 17:19:50.934  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：10ms 
 statement: DROP TABLE `mr_medication_remind` 
2023-05-11 17:19:50.936  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=9 where package='com.bjknrt.medication.remind' 
2023-05-11 17:19:50.936  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 9 版本迁移成功
2023-05-11 17:19:50.936  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 正在执行 10 版本的迁移任务
2023-05-11 17:19:50.936  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	UPDATE `mr_health_plan` SET `kn_cycle_start_time`=`kn_created_at` WHERE `kn_cycle_start_time` IS NULL
2023-05-11 17:19:50.938  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 statement: UPDATE `mr_health_plan` SET `kn_cycle_start_time`=`kn_created_at` WHERE `kn_cycle_start_time` IS NULL 
2023-05-11 17:19:50.938  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : | 	ALTER TABLE `mr_health_plan` MODIFY COLUMN `kn_cycle_start_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '周期开始时间' AFTER `is_sunday`
2023-05-11 17:19:50.977  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：12 | 当前时间：2023-05-11 17:19:50 | 执行时间：38ms 
 statement: ALTER TABLE `mr_health_plan` MODIFY COLUMN `kn_cycle_start_time` DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) COMMENT '周期开始时间' AFTER `is_sunday` 
2023-05-11 17:19:50.979  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 statement: update _sqlex_version_ set version=10 where package='com.bjknrt.medication.remind' 
2023-05-11 17:19:50.979  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : + 10 版本迁移成功
2023-05-11 17:19:50.981  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 statement: update _sqlex_version_ set can_migrate=true where package='com.bjknrt.medication.remind' 
2023-05-11 17:19:50.983  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：1ms 
 commit:  
2023-05-11 17:19:50.988  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：3ms 
 statement: unlock tables 
2023-05-11 17:19:50.988  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 数据库(com.bjknrt.medication.remind)版本迁移完成,释放全局锁
2023-05-11 17:19:50.989  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:50 | 执行时间：0ms 
 rollback:  
2023-05-11 17:19:50.990  INFO 6686 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 准备比对数据库结构一致性
2023-05-11 17:19:50.990  INFO 6686 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 获取SqlEx Repository(com.bjknrt.medication.remind)定义结构
2023-05-11 17:19:50.993  INFO 6686 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 获取目标数据库结构
2023-05-11 17:19:51.055  INFO 6686 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 计算结构差异
2023-05-11 17:19:51.057  INFO 6686 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 结构一致性比对完成,无差异
2023-05-11 17:19:51.407 DEBUG 6686 --- [Test worker] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 2 ResponseBodyAdvice
2023-05-11 17:19:51.514 DEBUG 6686 --- [Test worker] s.w.s.m.m.a.RequestMappingHandlerMapping : 24 mappings in 'requestMappingHandlerMapping'
2023-05-11 17:19:51.581 DEBUG 6686 --- [Test worker] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-05-11 17:19:51.601 DEBUG 6686 --- [Test worker] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 2 ResponseBodyAdvice
2023-05-11 17:19:51.863  INFO 6686 --- [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@70b2819f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@65dac812, org.springframework.security.web.context.SecurityContextPersistenceFilter@61fb3dae, org.springframework.security.web.header.HeaderWriterFilter@704c3ca2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1dc47df3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@256a25a8, com.bjknrt.security.JwtAuthenticationFilter@7b6b8cea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3619ecd, org.springframework.security.web.session.SessionManagementFilter@8d40f07, org.springframework.security.web.access.ExceptionTranslationFilter@771c4015, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5f97d43e]
2023-05-11 17:19:52.322  INFO 6686 --- [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2023-05-11 17:19:52.524  INFO 6686 --- [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 55425 (http) with context path ''
2023-05-11 17:19:52.558  INFO 6686 --- [Test worker] c.b.m.remind.api.HealthPlanTest          : Started HealthPlanTest in 12.588 seconds (JVM running for 14.29)
2023-05-11 17:19:52.601  INFO 6686 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@2bb7229e, testMethod = clockInTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5b7aceee, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@52baaf87]; rollback [true]
2023-05-11 17:19:52.823  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:52 | 执行时间：6ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:19:52.804030', 0, '2023-05-12T00:00', '2023-05-11T00:00', '每周三次', '2023-05-11T00:00', 'HELLO', 10000000, '有氧运动', 0, '游泳', 'BEHAVIOR_VISIT', '2023-05-11T17:19:52.804030', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:52.861  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:52 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:19:52.872  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:52 | 执行时间：1ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:52.866529', 0, 3, 3, 'DAYS', 1, 'WEEKS', 10000000, 1656589933957087232) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:19:52.874  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:52 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589933957087232) limit 1 
2023-05-11 17:19:52.877  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:52 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_explain_id`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:52.866529', 0, 1656589933957087232, 3, 2, 'SEQUENCE', 1, 'DAYS', 10000000, 1656589933957087233) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_explain_id` = values(`kn_explain_id`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:19:52.878  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:52 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589933957087233) limit 1 
2023-05-11 17:19:52.881  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:52 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:52.879467', 0, 2, 2, 'DAYS', 1, 'WEEKS', 10000000, 1656589934015807488) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:19:52.882  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:52 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589934015807488) limit 1 
2023-05-11 17:19:52.885  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:52 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:19:52.892  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:52 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_health_plan_id`) = (10000000) 
2023-05-11 17:19:52.896  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:52 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:19:52.902  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:52 | 执行时间：1ms 
 statement: insert into `mr_clock_in`(`kn_clock_at`, `kn_created_at`, `kn_created_by`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:52.897510', '2023-05-11T17:19:52.897510', 0, 10000000, 1656589934091304960) 
2023-05-11 17:19:52.904  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:52 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (`mr_clock_in`.`kn_id`) = (1656589934091304960) limit 1 
2023-05-11 17:19:53.333  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：3ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            clockIn.count     from mr_health_plan plan              left join (select health.kn_id, count(clock.kn_health_plan_id) count                         from mr_health_plan health                                  left join mr_clock_in clock on health.kn_id = clock.kn_health_plan_id                             and clock.kn_clock_at >= '2023-05-11T00:00'                             and clock.kn_clock_at < '2023-05-12T00:00'                         where health.kn_patient_id = 0                           and health.is_del = false                         group by health.kn_id) clockIn on plan.kn_id = clockIn.kn_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T17:19:52.904961'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:19:52.904961')       and ((plan.kn_type = 'DRUG' and plan.is_used = true) or plan.kn_type != 'DRUG')       and plan.kn_display_time <= '2023-05-11T17:19:52.904961'  
2023-05-11 17:19:53.363  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000000) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:53.529  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:19:53.532  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:19:53.536  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (`mr_clock_in`.`kn_health_plan_id`) = (10000000) 
2023-05-11 17:19:53.626  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: select count(1) from (select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00'))) temp 
2023-05-11 17:19:53.647  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:19:53.650  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: insert into `mr_clock_in`(`kn_clock_at`, `kn_created_at`, `kn_created_by`, `kn_health_plan_id`, `kn_id`) values('2023-05-10T17:19:53.626', '2023-05-11T17:19:53.648947', 0, 10000000, 1656589937241227264) 
2023-05-11 17:19:53.651  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (`mr_clock_in`.`kn_id`) = (1656589937241227264) limit 1 
2023-05-11 17:19:53.654  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            clockIn.count     from mr_health_plan plan              left join (select health.kn_id, count(clock.kn_health_plan_id) count                         from mr_health_plan health                                  left join mr_clock_in clock on health.kn_id = clock.kn_health_plan_id                             and clock.kn_clock_at >= '2023-05-11T00:00'                             and clock.kn_clock_at < '2023-05-12T00:00'                         where health.kn_patient_id = 0                           and health.is_del = false                         group by health.kn_id) clockIn on plan.kn_id = clockIn.kn_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T17:19:53.652098'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:19:53.652098')       and ((plan.kn_type = 'DRUG' and plan.is_used = true) or plan.kn_type != 'DRUG')       and plan.kn_display_time <= '2023-05-11T17:19:53.652098'  
2023-05-11 17:19:53.656  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000000) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:53.659  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:19:53.661  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:19:53.664  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (`mr_clock_in`.`kn_health_plan_id`) = (10000000) 
2023-05-11 17:19:53.702  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: select plan.kn_id,            plan.kn_name,            clock.kn_clock_at     from mr_health_plan plan              left join mr_clock_in clock on plan.kn_id = clock.kn_health_plan_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T00:00'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time >= '2023-05-12T00:00')       and clock.kn_clock_at >= '2023-05-11T00:00'       and clock.kn_clock_at < '2023-05-12T00:00'  
2023-05-11 17:19:53.713  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000000) limit 1 
2023-05-11 17:19:53.716  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000000)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00')) 
2023-05-11 17:19:53.985  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`kn_type` in ('BEHAVIOR_VISIT')) and ((`mr_health_plan`.`is_del`) = (false))) and ((`mr_health_plan`.`kn_patient_id`) = (0)) 
2023-05-11 17:19:53.988  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_del` = true where `mr_health_plan`.`kn_id` in (10000000) 
2023-05-11 17:19:53.992  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:19:53.988952', 0, '2023-05-11T00:00', '每周三次', '2023-05-11T00:00', 10000001, '有氧运动', 0, '跑步', 'BEHAVIOR_VISIT', '2023-05-11T17:19:53.988952', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:53.995  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000001) limit 1 
2023-05-11 17:19:53.997  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:53.996012', 0, 3, 3, 'DAYS', 1, 'WEEKS', 10000001, 1656589938696650752) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:19:54.000  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:53 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589938696650752) limit 1 
2023-05-11 17:19:54.002  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_explain_id`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:53.996012', 0, 1656589938696650752, 3, 2, 'SEQUENCE', 1, 'DAYS', 10000001, 1656589938696650753) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_explain_id` = values(`kn_explain_id`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:19:54.003  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589938696650753) limit 1 
2023-05-11 17:19:54.005  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:54.004316', 0, 2, 2, 'DAYS', 1, 'WEEKS', 10000001, 1656589938730205184) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:19:54.007  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589938730205184) limit 1 
2023-05-11 17:19:54.009  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000001) limit 1 
2023-05-11 17:19:54.011  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_health_plan_id`) = (10000001) 
2023-05-11 17:19:54.018  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            clockIn.count     from mr_health_plan plan              left join (select health.kn_id, count(clock.kn_health_plan_id) count                         from mr_health_plan health                                  left join mr_clock_in clock on health.kn_id = clock.kn_health_plan_id                             and clock.kn_clock_at >= '2023-05-11T00:00'                             and clock.kn_clock_at < '2023-05-12T00:00'                         where health.kn_patient_id = 0                           and health.is_del = false                         group by health.kn_id) clockIn on plan.kn_id = clockIn.kn_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T17:19:54.015486'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:19:54.015486')       and ((plan.kn_type = 'DRUG' and plan.is_used = true) or plan.kn_type != 'DRUG')       and plan.kn_display_time <= '2023-05-11T17:19:54.015486'  
2023-05-11 17:19:54.019  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000001) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:54.021  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:19:54.023  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:19:54.040  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and ((`mr_health_plan`.`kn_patient_id`) = (0)) 
2023-05-11 17:19:54.043  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000001) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:54.046  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:19:54.048  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:19:54.052  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and (`mr_health_plan`.`kn_id` in (10000001)) 
2023-05-11 17:19:54.054  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000001) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:54.056  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:19:54.058  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000001)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:19:54.106  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`kn_type` in ('HYPERTENSION_VISIT', 'HYPERTENSION_DRUG_PROGRAM')) and ((`mr_health_plan`.`is_del`) = (false))) and ((`mr_health_plan`.`kn_patient_id`) = (0)) 
2023-05-11 17:19:54.110  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_del` = true where 1 = 2 
2023-05-11 17:19:54.113  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:19:54.110649', 0, '2023-05-11T00:00', '每周三次', '2023-05-11T00:00', 1656589939178995712, '高血压随访', 0, '随访', 'HYPERTENSION_VISIT', '2023-05-11T17:19:54.110649', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.114  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656589939178995712) limit 1 
2023-05-11 17:19:54.117  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:54.115571', 0, 1, 1, 'SEQUENCE', 4, 'WEEKS', 1656589939178995712, 1656589939199967232) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:19:54.118  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589939199967232) limit 1 
2023-05-11 17:19:54.122  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, false, false, false, false, true, false, '2023-05-11T17:19:54.119591', 0, '2023-05-11T17:19:54.059825', 1656589939216744448, '药品1', 0, '剂量1', '17:19', 'HYPERTENSION_DRUG_PROGRAM', '2023-05-11T17:19:54.119591', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.123  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656589939216744448) limit 1 
2023-05-11 17:19:54.127  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, false, true, false, true, false, false, true, false, '2023-05-11T17:19:54.125472', 0, '2023-05-11T17:19:54.060547', 1656589939241910272, '药品2', 0, '剂量2', '17:19', 'HYPERTENSION_DRUG_PROGRAM', '2023-05-11T17:19:54.125472', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.128  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656589939241910272) limit 1 
2023-05-11 17:19:54.130  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and (`mr_health_plan`.`kn_id` in (1656589939178995712)) 
2023-05-11 17:19:54.132  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (1656589939178995712) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:54.133  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (1656589939178995712)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-08T00:00')) 
2023-05-11 17:19:54.136  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and (`mr_health_plan`.`kn_id` in (1656589939216744448, 1656589939241910272)) 
2023-05-11 17:19:54.143  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (1656589939216744448, 1656589939241910272) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:54.160  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`kn_type` in ('HYPERTENSION_VISIT', 'HYPERTENSION_DRUG_PROGRAM')) and ((`mr_health_plan`.`is_del`) = (false))) and ((`mr_health_plan`.`kn_patient_id`) = (0)) 
2023-05-11 17:19:54.162  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_del` = true where `mr_health_plan`.`kn_id` in (1656589939178995712, 1656589939216744448, 1656589939241910272) 
2023-05-11 17:19:54.164  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and (`mr_health_plan`.`kn_id` in (1656589939178995712)) 
2023-05-11 17:19:54.166  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where 1 = 2 order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:54.168  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and (`mr_health_plan`.`kn_id` in (1656589939216744448, 1656589939241910272)) 
2023-05-11 17:19:54.169  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where 1 = 2 order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:54.177  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 rollback:  
2023-05-11 17:19:54.177  INFO 6686 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@2bb7229e, testMethod = clockInTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5b7aceee, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:19:54.185  INFO 6686 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@2d935682, testMethod = notifyTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5b7aceee, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@52baaf87]; rollback [true]
2023-05-11 17:19:54.189  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: delete from `mr_health_plan` 
2023-05-11 17:19:54.197  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:19:54.194058', 0, '2023-05-11T17:19:54.194058', 10000107, '药1', 0, '17:19', 'DRUG', '2023-05-11T17:19:54.194058', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.199  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000107) limit 1 
2023-05-11 17:19:54.202  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:19:54.200788', 0, '2023-05-11T17:19:54.200788', 10000108, '药1', 0, '17:20', 'DRUG', '2023-05-11T17:19:54.200788', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.204  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000108) limit 1 
2023-05-11 17:19:54.207  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:19:54.205828', 0, '2023-05-11T17:19:54.205828', 10000109, '药1', 0, '17:21', 'DRUG', '2023-05-11T17:19:54.205828', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.209  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000109) limit 1 
2023-05-11 17:19:54.214  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:19:54.211075', 0, '2023-05-11T17:19:54.211075', 10000109, '药1', 0, '17:22', 'DRUG', '2023-05-11T17:19:54.211075', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.216  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000109) limit 1 
2023-05-11 17:19:54.220  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:19:54.218609', 0, '2023-05-11T17:19:54.218609', 10000109, '药1', 0, '17:23', 'DRUG', '2023-05-11T17:19:54.218609', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.222  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000109) limit 1 
2023-05-11 17:19:54.225  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`kn_type` in ('HYPERTENSION_DRUG_PROGRAM')) and ((`mr_health_plan`.`is_del`) = (false))) and ((`mr_health_plan`.`kn_patient_id`) = (0)) 
2023-05-11 17:19:54.228  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: update `mr_health_plan` set  `is_del` = true where 1 = 2 
2023-05-11 17:19:54.233  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, true, true, true, true, true, true, true, true, '2023-05-11T17:19:54.229311', 0, '2023-05-11T17:19:54.222954', 1656589939678117888, '药品1', 0, '剂量1', '17:19', 'HYPERTENSION_DRUG_PROGRAM', '2023-05-11T17:19:54.229311', 0) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.234  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656589939678117888) limit 1 
2023-05-11 17:19:54.439  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (((((((`mr_health_plan`.`is_del`) = (false)) and ((`mr_health_plan`.`is_used`) = (true))) and (`mr_health_plan`.`kn_type` in ('DRUG', 'HYPERTENSION_DRUG_PROGRAM', 'DIABETES_DRUG_PROGRAM'))) and ((`mr_health_plan`.`kn_time`) >= ('17:19'))) and ((`mr_health_plan`.`kn_time`) <= ('17:19:59'))) and (`mr_health_plan`.`kn_patient_id` in (0))) and ((`mr_health_plan`.`is_thursday`) = (true)) 
2023-05-11 17:19:54.452  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:19:54.450443', 0, '2023-08-11T00:00', '2023-05-11T00:00', '三月一次', '2023-05-11T00:00', '', 10000101, '线下慢阻肺测试', 0, '线下随访开始时间,展示时间是今天', 'OFFLINE_COPD', '2023-05-11T17:19:54.450443', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.453  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000101) limit 1 
2023-05-11 17:19:54.455  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:54.454101', 0, 1, 1, 'SEQUENCE', 3, 'MONTHS', 10000101, 1656589940617641984) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:19:54.456  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589940617641984) limit 1 
2023-05-11 17:19:54.459  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:19:54.457307', 0, '2023-03-01T00:00', '三月一次', '2023-03-01T00:00', '', 10000102, '线下糖尿病测试', 0, '开始时间是三个月前, 结束时间应该是今天', 'OFFLINE_DIABETES', '2023-05-11T17:19:54.457307', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.461  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000102) limit 1 
2023-05-11 17:19:54.462  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:54.461842', 0, 1, 1, 'SEQUENCE', 3, 'MONTHS', 10000102, 1656589940651196416) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:19:54.464  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589940651196416) limit 1 
2023-05-11 17:19:54.495  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            plan.kn_display_time     from mr_health_plan plan     WHERE kn_patient_id in (0)       and plan.kn_type in ('OFFLINE_HYPERTENSION','OFFLINE_DIABETES','OFFLINE_ACUTE_CORONARY_DISEASE','OFFLINE_CEREBRAL_STROKE','OFFLINE_COPD')       and plan.is_used = true       and plan.is_del = false       AND plan.kn_cycle_start_time <= '2023-05-11T17:19:54.465237'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:19:54.465237')       and plan.kn_display_time <= '2023-05-11T17:19:54.465237'  
2023-05-11 17:19:54.499  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000101, 10000102) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:54.501  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000101)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-08-11T00:00')) 
2023-05-11 17:19:54.503  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000102)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-03-01T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-01T00:00')) 
2023-05-11 17:19:54.507  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            plan.kn_display_time     from mr_health_plan plan     WHERE kn_patient_id in (0)       and plan.kn_type in ('OFFLINE_HYPERTENSION','OFFLINE_DIABETES','OFFLINE_ACUTE_CORONARY_DISEASE','OFFLINE_CEREBRAL_STROKE','OFFLINE_COPD')       and plan.is_used = true       and plan.is_del = false       AND plan.kn_cycle_start_time <= '2023-05-11T17:19:54.505592'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:19:54.505592')       and plan.kn_display_time <= '2023-05-11T17:19:54.505592'  
2023-05-11 17:19:54.509  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000101, 10000102) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:54.511  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000101)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-08-11T00:00')) 
2023-05-11 17:19:54.513  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000102)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-03-01T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-01T00:00')) 
2023-05-11 17:19:54.518  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:19:54.516386', 0, '2023-08-11T00:00', '2023-05-11T00:00', '三月一次', '2023-05-11T00:00', '', 10000103, '线上慢阻肺测试', 0, '线上随访开始时间,展示时间是今天', 'ONLINE_COPD', '2023-05-11T17:19:54.516386', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.519  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000103) limit 1 
2023-05-11 17:19:54.521  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:54.520407', 0, 1, 1, 'SEQUENCE', 3, 'MONTHS', 10000103, 1656589940898660352) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:19:54.522  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589940898660352) limit 1 
2023-05-11 17:19:54.526  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:19:54.524281', 0, '2023-08-11T00:00', '2023-05-11T00:00', '三月一次', '2023-05-11T00:00', '', 10000104, '线上糖尿病测试', 0, '开始时间,展示时间是今天', 'ONLINE_DIABETES', '2023-05-11T17:19:54.524281', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.528  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000104) limit 1 
2023-05-11 17:19:54.531  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:54.529671', 0, 1, 1, 'SEQUENCE', 3, 'MONTHS', 10000104, 1656589940936409088) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:19:54.533  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589940936409088) limit 1 
2023-05-11 17:19:54.537  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            plan.kn_display_time     from mr_health_plan plan     WHERE kn_patient_id in (0)       and plan.kn_type in ('HYPERTENSION_VISIT','ONLINE_DIABETES','ONLINE_CEREBRAL_STROKE','CEREBRAL_STROKE','ONLINE_ACUTE_CORONARY_DISEASE','ONLINE_COPD','BEHAVIOR_VISIT','DIABETES_BEHAVIOR_VISIT','CEREBRAL_STROKE_BEHAVIOR_VISIT','ACUTE_CORONARY_DISEASE_BEHAVIOR_VISIT','COPD_BEHAVIOR_VISIT')       and plan.is_used = true       and plan.is_del = false       AND plan.kn_cycle_start_time <= '2023-05-11T17:19:54.534442'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:19:54.534442')       and plan.kn_display_time <= '2023-05-11T17:19:54.534442'  
2023-05-11 17:19:54.538  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000103, 10000104) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:54.540  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000103)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-08-11T00:00')) 
2023-05-11 17:19:54.541  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000104)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-08-11T00:00')) 
2023-05-11 17:19:54.550  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:19:54.543978', 0, '2023-08-11T00:00', '2023-05-11T00:00', '测测血压', '2023-05-11T00:00', '', 10000105, '测血压', 0, '开始时间,展示时间是今天', 'BLOOD_PRESSURE_MEASUREMENT', '2023-05-11T17:19:54.543978', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.552  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000105) limit 1 
2023-05-11 17:19:54.553  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:54.552602', 0, 1, 1, 'SEQUENCE', 1, 'WEEKS', 10000105, 1656589941032878080) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:19:54.555  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589941032878080) limit 1 
2023-05-11 17:19:54.558  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            plan.kn_display_time     from mr_health_plan plan     WHERE kn_patient_id in (0)       and plan.kn_type in ('BLOOD_PRESSURE_MEASUREMENT','FASTING_BLOOD_GLUCOSE','BEFORE_MEAL_BLOOD_GLUCOSE','MEAL_TWO_HOUR_RANDOM_BLOOD_GLUCOSE','PULSE_OXYGEN_SATURATION_PLAN')       and plan.is_used = true       and plan.is_del = false       AND plan.kn_cycle_start_time <= '2023-05-11T17:19:54.556419'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:19:54.556419')       and plan.kn_display_time <= '2023-05-11T17:19:54.556419'  
2023-05-11 17:19:54.561  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000105) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:54.564  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000105)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-18T00:00')) 
2023-05-11 17:19:54.570  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_end_time`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:19:54.567959', 0, '2023-08-11T00:00', '2023-05-11T00:00', '出院随访', '2023-05-11T00:00', '', 10000106, '护院随访', 0, '开始时间,展示时间是今天', 'LEAVE_HOSPITAL_VISIT', '2023-05-11T17:19:54.567959', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_end_time` = values(`kn_cycle_end_time`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.572  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000106) limit 1 
2023-05-11 17:19:54.574  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:54.573076', 0, 1, 1, 'SEQUENCE', 1, 'WEEKS', 10000106, 1656589941116764160) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:19:54.577  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589941116764160) limit 1 
2023-05-11 17:19:54.584  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 rollback:  
2023-05-11 17:19:54.585  INFO 6686 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@2d935682, testMethod = notifyTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5b7aceee, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:19:54.590  INFO 6686 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@b513df1, testMethod = idGetList@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5b7aceee, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@52baaf87]; rollback [true]
2023-05-11 17:19:54.597  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_clock_display`, `is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_desc`, `kn_display_time`, `kn_group`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_sub_name`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(true, false, false, false, false, false, false, false, true, false, '2023-05-11T17:19:54.593427', 0, '2023-05-12T00:00', '每周三次', '2023-05-12T00:00', 'HELLO', 10000100, '有氧运动', 0, '游泳', 'BEHAVIOR_VISIT', '2023-05-11T17:19:54.593427', 0) on duplicate key update `is_clock_display` = values(`is_clock_display`),`is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_desc` = values(`kn_desc`),`kn_display_time` = values(`kn_display_time`),`kn_group` = values(`kn_group`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_sub_name` = values(`kn_sub_name`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:19:54.599  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (10000100) limit 1 
2023-05-11 17:19:54.601  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: insert into `mr_frequency`(`kn_created_at`, `kn_created_by`, `kn_frequency_max_num`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_health_plan_id`, `kn_id`) values('2023-05-11T17:19:54.600033', 0, 3, 3, 'SEQUENCE', 1, 'WEEKS', 10000100, 1656589941230010368) on duplicate key update `kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_frequency_max_num` = values(`kn_frequency_max_num`),`kn_frequency_num` = values(`kn_frequency_num`),`kn_frequency_num_unit` = values(`kn_frequency_num_unit`),`kn_frequency_time` = values(`kn_frequency_time`),`kn_frequency_time_unit` = values(`kn_frequency_time_unit`),`kn_health_plan_id` = values(`kn_health_plan_id`),`kn_id` = values(`kn_id`) 
2023-05-11 17:19:54.602  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where (`mr_frequency`.`kn_id`) = (1656589941230010368) limit 1 
2023-05-11 17:19:54.604  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where ((`mr_health_plan`.`is_del`) = (false)) and (`mr_health_plan`.`kn_id` in (10000100)) 
2023-05-11 17:19:54.606  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000100) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:54.607  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000100)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-12T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-19T00:00')) 
2023-05-11 17:19:54.612  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 rollback:  
2023-05-11 17:19:54.613  INFO 6686 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@b513df1, testMethod = idGetList@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5b7aceee, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:19:54.618  INFO 6686 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@36a2fd51, testMethod = listTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5b7aceee, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@52baaf87]; rollback [true]
2023-05-11 17:19:54.635  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000011, 0, '完成本周饮食计划', '白菜', '一年3月,一天两次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 3 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:19:54.636  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861000, 10000011, NULL, 1, 'YEARS', 3, 'MONTHS', 3, 0, NOW()) 
2023-05-11 17:19:54.637  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861001, 10000011, NULL, 1, 'YEARS', 5, 'DAYS', 5, 0, NOW()) 
2023-05-11 17:19:54.638  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100000, 10000011, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:19:54.640  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100001, 10000011, NULL, date_add(now(), interval 1 DAY), 0, date_add(now(), interval 1 DAY)) 
2023-05-11 17:19:54.641  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100002, 10000011, NULL, date_add(now(), interval 2 DAY), 0, date_add(now(), interval 2 DAY)) 
2023-05-11 17:19:54.642  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100003, 10000011, NULL, date_add(now(), interval 1 MONTH), 0, date_add(now(), interval 1 MONTH)) 
2023-05-11 17:19:54.643  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100004, 10000011, NULL, date_add(now(), interval 2 MONTH), 0, date_add(now(), interval 2 MONTH)) 
2023-05-11 17:19:54.645  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100005, 10000011, NULL, date_add(now(), interval 3 MONTH), 0, date_add(now(), interval 3 MONTH)) 
2023-05-11 17:19:54.647  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000012, 0, '完成本周饮食计划', '白菜', '一年3月,一天两次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 3 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:19:54.649  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861010, 10000012, NULL, 1, 'YEARS', 3, 'SEQUENCE', 3, 0, NOW()) 
2023-05-11 17:19:54.650  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861011, 10000012, NULL, 1, 'MONTHS', 5, 'SEQUENCE', 5, 0, NOW()) 
2023-05-11 17:19:54.651  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100010, 10000012, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:19:54.652  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100011, 10000012, NULL, date_add(now(), interval 2 SECOND), 0, date_add(now(), interval 2 SECOND)) 
2023-05-11 17:19:54.653  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100012, 10000012, NULL, date_add(now(), interval 3 SECOND), 0, date_add(now(), interval 3 SECOND)) 
2023-05-11 17:19:54.654  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100013, 10000012, NULL, date_add(now(), interval 1 DAY), 0, date_add(now(), interval 1 DAY)) 
2023-05-11 17:19:54.656  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100014, 10000012, NULL, date_add(now(), interval 2 DAY), 0, date_add(now(), interval 2 DAY)) 
2023-05-11 17:19:54.657  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100015, 10000012, NULL, date_add(now(), interval 3 DAY), 0, date_add(now(), interval 3 DAY)) 
2023-05-11 17:19:54.658  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000013, 0, '完成本周饮食计划', '白菜', '一年3月,一天两次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 3 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:19:54.659  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861020, 10000013, NULL, 1, 'MONTHS', 3, 'DAYS', 3, 0, NOW()) 
2023-05-11 17:19:54.660  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861021, 10000013, NULL, 1, 'WEEKS', 5, 'SEQUENCE', 5, 0, NOW()) 
2023-05-11 17:19:54.662  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100020, 10000013, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:19:54.664  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100021, 10000013, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:19:54.665  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100022, 10000013, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:19:54.666  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100023, 10000013, NULL, date_add(now(), interval 2 SECOND), 0, date_add(now(), interval 2 SECOND)) 
2023-05-11 17:19:54.667  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100024, 10000013, NULL, date_add(now(), interval 1 day), 0, date_add(now(), interval 1 day)) 
2023-05-11 17:19:54.668  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484100025, 10000013, NULL, date_add(now(), interval 2 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:19:54.669  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000014, 0, '完成本周饮食计划', '白菜', '4周2周，1周3天', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 2 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:19:54.670  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220014000000001, 10000014, NULL, 4, 'WEEKS', 2, 'WEEKS', 4, 0, NOW()) 
2023-05-11 17:19:54.671  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220014000000002, 10000014, 1574220014000000001, 1, 'WEEKS', 3, 'DAYS', 3, 0, NOW()) 
2023-05-11 17:19:54.672  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220014000000003, 10000014, NULL, 3, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:19:54.674  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000001, 10000014, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:19:54.675  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000002, 10000014, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:19:54.676  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000003, 10000014, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:19:54.677  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000004, 10000014, NULL, date_add(now(), interval 1 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:19:54.678  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000005, 10000014, NULL, date_add(now(), interval 6 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:19:54.679  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000006, 10000014, NULL, date_add(now(), interval 7 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:19:54.680  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220014100000007, 10000014, NULL, date_add(now(), interval 8 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:19:54.681  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000015, 0, '完成本周饮食计划', '菠菜', '一周7天,一天两次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 3 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:19:54.682  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861568, 10000015, NULL, 1, 'WEEKS', 4, 'DAYS', 4, 0, NOW()) 
2023-05-11 17:19:54.684  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861569, 10000015, 1574221477018861568, 1, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:19:54.685  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574221477018861570, 10000015, NULL, 1, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:19:54.686  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141030, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 1 SECOND)) 
2023-05-11 17:19:54.687  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141031, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 2 SECOND)) 
2023-05-11 17:19:54.688  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141032, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 3 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 2 day), INTERVAL 3 SECOND)) 
2023-05-11 17:19:54.689  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141040, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:19:54.690  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141041, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:19:54.692  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141042, 10000015, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 3 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 3 SECOND)) 
2023-05-11 17:19:54.693  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141050, 10000015, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:19:54.694  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141051, 10000015, NULL, date_add(now(), interval 2 SECOND), 0, date_add(now(), interval 2 SECOND)) 
2023-05-11 17:19:54.695  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141052, 10000015, NULL, date_add(now(), interval 3 SECOND), 0, date_add(now(), interval 3 SECOND)) 
2023-05-11 17:19:54.696  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141060, 10000015, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:19:54.697  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141061, 10000015, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:19:54.698  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574222428484141062, 10000015, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 3 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 3 SECOND)) 
2023-05-11 17:19:54.700  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000016, 0, '完成本周饮食计划', '白菜', '4周2周，1周3天', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 2 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:19:54.701  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000001, 10000016, NULL, 4, 'WEEKS', 4, 'WEEKS', 4, 0, NOW()) 
2023-05-11 17:19:54.702  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000002, 10000016, 1574220016000000001, 1, 'WEEKS', 2, 'DAYS', 3, 0, NOW()) 
2023-05-11 17:19:54.703  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000003, 10000016, 1574220016000000002, 1, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:19:54.704  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000004, 10000016, NULL, 2, 'WEEKS', 3, 'DAYS', 3, 0, NOW()) 
2023-05-11 17:19:54.705  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220016000000005, 10000016, 1574220016000000004, 1, 'DAYS', 2, 'SEQUENCE', 2, 0, NOW()) 
2023-05-11 17:19:54.706  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000001, 10000016, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:19:54.707  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000002, 10000016, NULL, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_sub(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:19:54.708  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000003, 10000016, NULL, date_add(now(), interval 1 SECOND), 0, date_add(now(), interval 1 SECOND)) 
2023-05-11 17:19:54.709  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000004, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 1 SECOND)) 
2023-05-11 17:19:54.710  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000104, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND), 0, date_add(date_add(NOW(),INTERVAL 1 day), INTERVAL 2 SECOND)) 
2023-05-11 17:19:54.712  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000005, 10000016, NULL, date_add(now(), interval 6 day), 0, date_add(now(), interval 2 day)) 
2023-05-11 17:19:54.714  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000006, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 7 day), INTERVAL 1 SECOND), 0, date_add(date_add(NOW(),INTERVAL 7 day), INTERVAL 1 SECOND)) 
2023-05-11 17:19:54.715  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000007, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 7 day), INTERVAL 2 SECOND), 0, date_add(date_add(NOW(),INTERVAL 7 day), INTERVAL 2 SECOND)) 
2023-05-11 17:19:54.716  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000008, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 8 day), INTERVAL 1 SECOND), 0, date_add(date_add(NOW(),INTERVAL 8 day), INTERVAL 1 SECOND)) 
2023-05-11 17:19:54.717  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220016100000009, 10000016, NULL, date_add(date_add(NOW(),INTERVAL 8 day), INTERVAL 2 SECOND), 0, date_add(date_add(NOW(),INTERVAL 8 day), INTERVAL 2 SECOND)) 
2023-05-11 17:19:54.718  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_health_plan` (`kn_id`, `kn_patient_id`, `kn_name`, `kn_sub_name`, `kn_desc`, `kn_type`, `kn_time`, `is_monday`, `is_tuesday`, `is_wednesday`, `is_thursday`, `is_friday`, `is_saturday`, `is_sunday`, `kn_cycle_start_time`, `kn_cycle_end_time`, `is_used`, `is_del`, `kn_created_by`, `kn_created_at`, `kn_updated_by`, `kn_updated_at`, `external_key`) VALUES (10000017, 0, '完成本周饮食计划', '白菜', '1天4次', 'DIET_PLAN', NULL, 0, 0, 0, 0, 0, 0, 0, DATE_SUB(DATE_FORMAT(CURDATE(),'%Y-%m-%d %H:%i:%s'), INTERVAL 2 DAY), NULL, 1, 0, 0, NOW(), 0, NOW(), 'HYPERTENSION') 
2023-05-11 17:19:54.719  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_frequency` (`kn_id`, `kn_health_plan_id`, `kn_explain_id`, `kn_frequency_time`, `kn_frequency_time_unit`, `kn_frequency_num`, `kn_frequency_num_unit`, `kn_frequency_max_num`, `kn_created_by`, `kn_created_at`) VALUES (1574220017000000001, 10000017, null, 1, 'DAYS', 3, 'SEQUENCE', 3, 0, NOW()) 
2023-05-11 17:19:54.720  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220017100000001, 10000017, NULL, DATE_ADD(CURDATE(), INTERVAL 9 HOUR), 0, now()) 
2023-05-11 17:19:54.721  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220017100000002, 10000017, NULL, DATE_ADD(CURDATE(), INTERVAL 9 HOUR), 0, now()) 
2023-05-11 17:19:54.722  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: INSERT INTO `mr_clock_in` (`kn_id`, `kn_health_plan_id`, `kn_time`, `kn_clock_at`, `kn_created_by`, `kn_created_at`) VALUES (1574220017100000003, 10000017, NULL, DATE_ADD(CURDATE(), INTERVAL 9 HOUR), 0, now()) 
2023-05-11 17:19:54.727  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：1ms 
 statement: select plan.kn_id,            plan.kn_patient_id,            plan.kn_name,            plan.kn_sub_name,            plan.kn_desc,            plan.kn_type,            plan.kn_time,            plan.is_monday,            plan.is_tuesday,            plan.is_wednesday,            plan.is_thursday,            plan.is_friday,            plan.is_saturday,            plan.is_sunday,            plan.is_used,            plan.kn_cycle_start_time,            plan.kn_cycle_end_time,            plan.kn_created_by,            plan.kn_updated_by,            plan.kn_updated_at,            plan.kn_created_at,            plan.external_key,            plan.kn_group,            plan.is_clock_display,            clockIn.count     from mr_health_plan plan              left join (select health.kn_id, count(clock.kn_health_plan_id) count                         from mr_health_plan health                                  left join mr_clock_in clock on health.kn_id = clock.kn_health_plan_id                             and clock.kn_clock_at >= '2023-05-11T00:00'                             and clock.kn_clock_at < '2023-05-12T00:00'                         where health.kn_patient_id = 0                           and health.is_del = false                         group by health.kn_id) clockIn on plan.kn_id = clockIn.kn_id     WHERE plan.kn_patient_id = 0       and plan.is_del = false       and plan.kn_cycle_start_time <= '2023-05-11T17:19:54.725217'       and (plan.kn_cycle_end_time is null or plan.kn_cycle_end_time > '2023-05-11T17:19:54.725217')       and ((plan.kn_type = 'DRUG' and plan.is_used = true) or plan.kn_type != 'DRUG')       and plan.kn_display_time <= '2023-05-11T17:19:54.725217'  
2023-05-11 17:19:54.730  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_frequency` where `mr_frequency`.`kn_health_plan_id` in (10000011, 10000012, 10000013, 10000014, 10000015, 10000016, 10000017) order by (`mr_frequency`.`kn_id`) asc 
2023-05-11 17:19:54.732  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000011)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2024-05-08T00:00')) 
2023-05-11 17:19:54.736  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000011)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2024-05-08T00:00')) 
2023-05-11 17:19:54.738  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000012)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2024-05-08T00:00')) 
2023-05-11 17:19:54.740  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000012)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-08T00:00')) 
2023-05-11 17:19:54.742  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000013)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-08T00:00')) 
2023-05-11 17:19:54.745  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000013)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-15T00:00')) 
2023-05-11 17:19:54.746  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000014)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-09T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-06T00:00')) 
2023-05-11 17:19:54.748  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000014)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-09T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00')) 
2023-05-11 17:19:54.749  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000015)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-08T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-15T00:00')) 
2023-05-11 17:19:54.751  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000015)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00')) 
2023-05-11 17:19:54.752  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000016)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-09T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-06-06T00:00')) 
2023-05-11 17:19:54.754  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000016)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-09T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-23T00:00')) 
2023-05-11 17:19:54.755  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 statement: select * from `mr_clock_in` where (((`mr_clock_in`.`kn_health_plan_id`) = (10000017)) and ((`mr_clock_in`.`kn_clock_at`) >= ('2023-05-11T00:00'))) and ((`mr_clock_in`.`kn_clock_at`) < ('2023-05-12T00:00')) 
2023-05-11 17:19:54.759  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：11 | 当前时间：2023-05-11 17:19:54 | 执行时间：0ms 
 rollback:  
2023-05-11 17:19:54.760  INFO 6686 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5910de75 testClass = HealthPlanTest, testInstance = com.bjknrt.medication.remind.api.HealthPlanTest@36a2fd51, testMethod = listTest@HealthPlanTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4108fa66 testClass = HealthPlanTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@1f130eaf key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5b7aceee, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:19:54.769  INFO 6686 --- [Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.bjknrt.medication.remind.api.MedicationRemindTest], using SpringBootContextLoader
2023-05-11 17:19:54.770  INFO 6686 --- [Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.bjknrt.medication.remind.api.MedicationRemindTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2023-05-11 17:19:54.770  INFO 6686 --- [Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.bjknrt.medication.remind.api.MedicationRemindTest]: MedicationRemindTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-05-11 17:19:54.771  INFO 6686 --- [Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.bjknrt.medication.remind.MedicationRemindServerApplication for test class com.bjknrt.medication.remind.api.MedicationRemindTest
2023-05-11 17:19:54.773  INFO 6686 --- [Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2023-05-11 17:19:54.773  INFO 6686 --- [Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4ad7985d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@79c62ffb, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@72021abd, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@40ca5e32, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@36292306, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7ed86bcf, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1ced415b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@e44a73a, org.springframework.test.context.event.EventPublishingTestExecutionListener@710a84e7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4c311f1a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3a20785e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@11767557, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@347ee622, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@70f3e678, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@492882b0]
2023-05-11 17:19:59.839  INFO 6686 --- [Test worker] c.b.m.remind.api.MedicationRemindTest    : Starting MedicationRemindTest using Java 17.0.6 on wanghehuideMacBookPro.local with PID 6686 (started by wanghehui in /Users/wanghehui/projects/java/hmp-be/medication-remind/medication-remind-server)
2023-05-11 17:19:59.839 DEBUG 6686 --- [Test worker] c.b.m.remind.api.MedicationRemindTest    : Running with Spring Boot v2.6.8, Spring v5.3.21
2023-05-11 17:19:59.839  INFO 6686 --- [Test worker] c.b.m.remind.api.MedicationRemindTest    : The following 1 profile is active: "dev-local"
2023-05-11 17:20:00.267  INFO 6686 --- [Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d251075e-2bf1-3341-9e51-4ff0d5f888ac
2023-05-11 17:20:00.377  INFO 6686 --- [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2023-05-11 17:20:00.378  INFO 6686 --- [Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-05-11 17:20:00.378  INFO 6686 --- [Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.63]
2023-05-11 17:20:00.410  INFO 6686 --- [Test worker] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2023-05-11 17:20:00.410  INFO 6686 --- [Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 569 ms
2023-05-11 17:20:00.621  INFO 6686 --- [Test worker] com.bjknrt.framework.test.DbTestConfig   : 使用数据库次数：2，连接信息：jdbc:p6spy:mysql://localhost:3306/test_mlhyqppe
2023-05-11 17:20:00.640  INFO 6686 --- [Test worker] o.s.c.openfeign.FeignClientFactoryBean   : For 'user-permission-centre-server' URL not provided. Will try picking an instance via load-balancing.
2023-05-11 17:20:00.715 DEBUG 6686 --- [Test worker] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, jwtAuthenticationFilter urls=[/*] order=2147483647
2023-05-11 17:20:00.715 DEBUG 6686 --- [Test worker] o.s.b.w.s.ServletContextInitializerBeans : Mapping servlets: dispatcherServlet urls=[/]
2023-05-11 17:20:00.716 DEBUG 6686 --- [Test worker] c.b.security.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2023-05-11 17:20:00.784  INFO 6686 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2023-05-11 17:20:00.798  INFO 6686 --- [Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2023-05-11 17:20:00.798  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 准备将数据库(com.bjknrt.medication.remind)迁移到 10 版本
2023-05-11 17:20:00.801  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：20 | 当前时间：2023-05-11 17:20:00 | 执行时间：1ms 
 statement: create table if not exists _sqlex_version_(package text not null, version int not null, can_migrate bool not null) 
2023-05-11 17:20:00.815  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:00 | 执行时间：0ms 
 statement: lock tables _sqlex_version_ write 
2023-05-11 17:20:00.815  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 获取到全局锁,准备开始迁移
2023-05-11 17:20:00.816  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:00 | 执行时间：0ms 
 statement: select * from _sqlex_version_ where package='com.bjknrt.medication.remind' 
2023-05-11 17:20:00.816  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 数据库当前版本已经是 10,无需迁移
2023-05-11 17:20:00.817  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:00 | 执行时间：0ms 
 commit:  
2023-05-11 17:20:00.818  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:00 | 执行时间：0ms 
 statement: unlock tables 
2023-05-11 17:20:00.818  INFO 6686 --- [Test worker] me.danwi.sqlex.core.migration.Migrator   : 数据库(com.bjknrt.medication.remind)版本迁移完成,释放全局锁
2023-05-11 17:20:00.819  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:00 | 执行时间：0ms 
 rollback:  
2023-05-11 17:20:00.820  INFO 6686 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 准备比对数据库结构一致性
2023-05-11 17:20:00.820  INFO 6686 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 获取SqlEx Repository(com.bjknrt.medication.remind)定义结构
2023-05-11 17:20:00.820  INFO 6686 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 获取目标数据库结构
2023-05-11 17:20:00.848  INFO 6686 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 计算结构差异
2023-05-11 17:20:00.848  INFO 6686 --- [Test worker] me.danwi.sqlex.core.checker.Checker      : 结构一致性比对完成,无差异
2023-05-11 17:20:00.869  INFO 6686 --- [Test worker] o.s.c.openfeign.FeignClientFactoryBean   : For 'article-service-server' URL not provided. Will try picking an instance via load-balancing.
2023-05-11 17:20:00.923  INFO 6686 --- [Test worker] o.s.c.openfeign.FeignClientFactoryBean   : For 'wechat-service-server' URL not provided. Will try picking an instance via load-balancing.
2023-05-11 17:20:01.051 DEBUG 6686 --- [Test worker] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 2 ResponseBodyAdvice
2023-05-11 17:20:01.068 DEBUG 6686 --- [Test worker] s.w.s.m.m.a.RequestMappingHandlerMapping : 24 mappings in 'requestMappingHandlerMapping'
2023-05-11 17:20:01.110 DEBUG 6686 --- [Test worker] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-05-11 17:20:01.124 DEBUG 6686 --- [Test worker] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 2 ResponseBodyAdvice
2023-05-11 17:20:01.237  INFO 6686 --- [Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2a2181d5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12f22145, org.springframework.security.web.context.SecurityContextPersistenceFilter@5c3b8dfe, org.springframework.security.web.header.HeaderWriterFilter@1cd97fca, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5466b206, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@316a06f, com.bjknrt.security.JwtAuthenticationFilter@46ff2f8f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70ac0188, org.springframework.security.web.session.SessionManagementFilter@7893e5a8, org.springframework.security.web.access.ExceptionTranslationFilter@605d010e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@332f2b1b]
2023-05-11 17:20:01.445  INFO 6686 --- [Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2023-05-11 17:20:01.494  INFO 6686 --- [Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 55436 (http) with context path ''
2023-05-11 17:20:01.503  INFO 6686 --- [Test worker] c.b.m.remind.api.MedicationRemindTest    : Started MedicationRemindTest in 6.728 seconds (JVM running for 23.235)
2023-05-11 17:20:01.516  INFO 6686 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@71b03e9a testClass = MedicationRemindTest, testInstance = com.bjknrt.medication.remind.api.MedicationRemindTest@2675a92c, testMethod = interfaceTest@MedicationRemindTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@719e1c26 testClass = MedicationRemindTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@25ea076d key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.support.JdbcTransactionManager@55dea9a4]; rollback [true]
2023-05-11 17:20:01.567  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：3ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, false, false, false, true, false, false, true, false, '2023-05-11T17:20:01.563151', 100000, '2023-05-11T17:20:01.563151', 1656589970434949120, '阿莫西林', 100000, '17:20', 'DRUG', '2023-05-11T17:20:01.563151', 100000) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:20:01.568  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1656589970434949120) limit 1 
2023-05-11 17:20:01.571  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (((`mr_health_plan`.`is_del`) = (false)) and ((`mr_health_plan`.`kn_patient_id`) = (100000))) and ((`mr_health_plan`.`kn_type`) = ('DRUG')) 
2023-05-11 17:20:01.580  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：1ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, false, false, false, true, false, false, true, false, '2023-05-11T17:20:01.578731', 100000, '2023-05-11T17:20:01.578731', 1, '阿莫西林', 100000, '17:20', 'DRUG', '2023-05-11T17:20:01.578731', 100000) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:20:01.582  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1) limit 1 
2023-05-11 17:20:01.587  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1) limit 1 
2023-05-11 17:20:01.590  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：1ms 
 statement: update `mr_health_plan` set  `is_used` = false where (`mr_health_plan`.`kn_id`) = (1) 
2023-05-11 17:20:01.604  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：1ms 
 statement: update `mr_health_plan` set  `is_used` = true where `mr_health_plan`.`kn_id` in (1) 
2023-05-11 17:20:01.605  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (1) limit 1 
2023-05-11 17:20:01.607  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_del` = true where (`mr_health_plan`.`kn_id`) = (1) 
2023-05-11 17:20:01.611  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：0ms 
 statement: insert into `mr_health_plan`(`is_del`, `is_friday`, `is_monday`, `is_saturday`, `is_sunday`, `is_thursday`, `is_tuesday`, `is_used`, `is_wednesday`, `kn_created_at`, `kn_created_by`, `kn_cycle_start_time`, `kn_id`, `kn_name`, `kn_patient_id`, `kn_time`, `kn_type`, `kn_updated_at`, `kn_updated_by`) values(false, false, false, false, true, false, false, true, false, '2023-05-11T17:20:01.609565', 100000, '2023-05-11T17:20:01.609565', 111, '阿莫西林', 100000, '17:20', 'DRUG', '2023-05-11T17:20:01.609565', 100000) on duplicate key update `is_del` = values(`is_del`),`is_friday` = values(`is_friday`),`is_monday` = values(`is_monday`),`is_saturday` = values(`is_saturday`),`is_sunday` = values(`is_sunday`),`is_thursday` = values(`is_thursday`),`is_tuesday` = values(`is_tuesday`),`is_used` = values(`is_used`),`is_wednesday` = values(`is_wednesday`),`kn_created_at` = values(`kn_created_at`),`kn_created_by` = values(`kn_created_by`),`kn_cycle_start_time` = values(`kn_cycle_start_time`),`kn_id` = values(`kn_id`),`kn_name` = values(`kn_name`),`kn_patient_id` = values(`kn_patient_id`),`kn_time` = values(`kn_time`),`kn_type` = values(`kn_type`),`kn_updated_at` = values(`kn_updated_at`),`kn_updated_by` = values(`kn_updated_by`) 
2023-05-11 17:20:01.612  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：1ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (111) limit 1 
2023-05-11 17:20:01.621  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (((`mr_health_plan`.`kn_type`) = ('DRUG')) and ((`mr_health_plan`.`is_del`) = (false))) and ((`mr_health_plan`.`kn_patient_id`) = (100000)) 
2023-05-11 17:20:01.623  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：0ms 
 statement: update `mr_health_plan` set  `is_del` = true where `mr_health_plan`.`kn_id` in (111, 1656589970434949120) 
2023-05-11 17:20:01.624  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：0ms 
 statement: select * from `mr_health_plan` where (`mr_health_plan`.`kn_id`) = (111) limit 1 
2023-05-11 17:20:01.631  INFO 6686 --- [Test worker] p6spy                                    : 
连接ID：21 | 当前时间：2023-05-11 17:20:01 | 执行时间：1ms 
 rollback:  
2023-05-11 17:20:01.632  INFO 6686 --- [Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@71b03e9a testClass = MedicationRemindTest, testInstance = com.bjknrt.medication.remind.api.MedicationRemindTest@2675a92c, testMethod = interfaceTest@MedicationRemindTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@719e1c26 testClass = MedicationRemindTest, locations = '{}', classes = '{class com.bjknrt.medication.remind.MedicationRemindServerApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3700ec9c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2f17e30d, [ImportsContextCustomizer@25ea076d key = [com.bjknrt.medication.remind.ConfigTest]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1dd6d4b7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@784c3487, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4233e892, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@52719fb6], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2023-05-11 17:20:01.702  INFO 6686 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2023-05-11 17:20:01.707  INFO 6686 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2023-05-11 17:20:01.708  INFO 6686 --- [SpringApplicationShutdownHook] com.bjknrt.framework.test.DbTestConfig   : 销毁计数，数据库test_mlhyqppe,次数：1
2023-05-11 17:20:01.717  INFO 6686 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown initiated...
2023-05-11 17:20:01.720  INFO 6686 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown completed.
2023-05-11 17:20:01.750  INFO 6686 --- [SpringApplicationShutdownHook] p6spy                                    : 
连接ID：2 | 当前时间：2023-05-11 17:20:01 | 执行时间：29ms 
 statement: DROP DATABASE test_mlhyqppe 
2023-05-11 17:20:01.750  INFO 6686 --- [SpringApplicationShutdownHook] com.bjknrt.framework.test.DbTestConfig   : 销毁数据库test_mlhyqppe,次数：1
