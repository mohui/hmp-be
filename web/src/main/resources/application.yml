server:
  port: 8080
spring:
  datasource:
    hikari:
      minimum-idle: 20
      maximum-pool-size: 50
  devtools:
    add-properties: false
  mvc:
    servlet:
      load-on-startup: 1
  application:
    name: @moduleName@
  profiles:
    active: ${APP_PROFILE:local}
  cloud:
    nacos:
      server-addr: ${NACOS_SERVER_ADDR:192.168.3.151:8848}
      config:
        enabled: true
        namespace: ${spring.profiles.active} # 命名空间：根据微服务分配，或者数据中心分配
      discovery:
        enabled: true
        namespace: ${spring.profiles.active}
  config:
    import:
      - optional:nacos:${spring.application.name}-${spring.profiles.active}.yaml
      - optional:nacos:security-jwt-config-${spring.profiles.active}.yaml
  sqlex:
    foreign:
      dpm: ${app.database}
      upcs: ${app.database}
      qass: ${app.database}
      hi: ${app.database}
      hs: ${app.database}
      opLog: ${app.database}
  redis.host: localhost
  redis.port: 6379
  redis.database: 0
  redis.username: user
  redis.password: secret
app:
  database: ${spring.profiles.active}_${spring.application.name}

# 定时job
org.jobrunr.database.skip-create: false
org.jobrunr.database.table-prefix: jobrunr-${spring.application.name}-${spring.profiles.active} # allows to set a table prefix (e.g. schema  or schema and tableprefix for all tables. e.g. MYSCHEMA._jobrunr)
#org.jobrunr.database.database-name: jobrunr # Override the default database name to use (e.g. use main application database)
#org.jobrunr.database.datasource :  # allows to specify a DataSource specifically for JobRunr
org.jobrunr.database.type: redis-lettuce # if you have multiple supported storage providers available in your application (e.g. an SQL DataSource and Elasticsearch), it allows to specify which database to choose. Valid values are 'sql', 'mongodb', 'redis-lettuce', 'redis-jedis' and 'elasticsearch'.
org.jobrunr.jobs.default-number-of-retries: 5 #the default number of retries for a failing job
org.jobrunr.jobs.retry-back-off-time-seed: 3 #the default time seed for the exponential back-off policy.
org.jobrunr.job-scheduler.enabled: true
org.jobrunr.background-job-server.enabled: true
#org.jobrunr.background-job-server.worker-count:  #this value normally is defined by the amount of CPU's that are available
org.jobrunr.background-job-server.poll-interval-in-seconds: 5 #check for new work every 15 seconds
org.jobrunr.background-job-server.delete-succeeded-jobs-after: 336 #succeeded jobs will go to the deleted state after 36 hours
org.jobrunr.background-job-server.permanently-delete-deleted-jobs-after: 672 #deleted jobs will be deleted permanently after 72 hours
org.jobrunr.background-job-server.metrics.enabled: false #Micrometer integration - this was true in v5.
org.jobrunr.dashboard.enabled: true
org.jobrunr.dashboard.port: 8000 #the port on which to start the dashboard

#wechat-service的配置
fake_token: "fake_token"
doctor:
  id: xxx
  secret: xxx
  state: xxx
  message:
    drug: xxx
    unbind: xxx
wechat:
  id: xxx
  secret: xxx
  message:
    drug: xxx

---
# 开发环境配置
spring:
  config:
    activate:
      on-profile:
        - local
    import:
      - optional:classpath:/application-local.yml

---
# 测试，生产
spring:
  config:
    activate:
      on-profile:
        - test
        - prod
    import:
      - optional:nacos:${spring.application.name}-other-config-${spring.profiles.active}.yaml

#spring:
#  config:
#    import:
#      - optional:nacos:test.yml  # 监听 DEFAULT_GROUP:test.yml
#      - optional:nacos:test01.yml?group=group_01 # 覆盖默认 group，监听 group_01:test01.yml
#      - optional:nacos:test02.yml?group=group_02&refreshEnabled=false # 不开启动态刷新
#      - nacos:test03.yml # 在拉取nacos配置异常时会快速失败，会导致 spring 容器启动失败